{"version":3,"file":"main.js","mappings":"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","sources":["./mock/mocked-request.ts","./mock/mocked-requests.ts","./mock/modules/data/mock-cart-data.ts","./mock/modules/index.ts","./mock/modules/mock-auth.ts","./mock/modules/mock-billing-requests.ts","./mock/modules/mock-bookings.ts","./mock/modules/mock-carts.ts","./mock/modules/mock-checkout.ts","./mock/modules/mock-companies.ts","./mock/modules/mock-company-users.ts","./mock/modules/mock-config.ts","./mock/modules/mock-cost-centers.ts","./mock/modules/mock-countries.ts","./mock/modules/mock-employees.ts","./mock/modules/mock-features.ts","./mock/modules/mock-payments.ts","./mock/modules/mock-pnr.ts","./mock/modules/mock-products.ts","./mock/modules/mock-system-messages.ts","./mock/modules/mock-users.ts","./mock/modules/mock-vat-categories.ts","./mock/modules/mock-vendors-payment-providers.ts","./mock/modules/mock-vendors.ts","./src/app/actions/auth.actions.ts","./src/app/actions/billing-requests.actions.ts","./src/app/actions/bookings.actions.ts","./src/app/actions/carts.actions.ts","./src/app/actions/checkout.actions.ts","./src/app/actions/companies.actions.ts","./src/app/actions/company-users.actions.ts","./src/app/actions/confirmation-dialog.actions.ts","./src/app/actions/cost-center.actions.ts","./src/app/actions/countries.actions.ts","./src/app/actions/features.actions.ts","./src/app/actions/global.actions.ts","./src/app/actions/layout.actions.ts","./src/app/actions/payment.actions.ts","./src/app/actions/pnr.actions.ts","./src/app/actions/products.actions.ts","./src/app/actions/system-messages.actions.ts","./src/app/actions/tenant.actions.ts","./src/app/actions/users.actions.ts","./src/app/actions/vat-categories.actions.ts","./src/app/actions/vendors-payment-providers.actions.ts","./src/app/actions/vendors.actions.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.service.ts","./src/app/base.component.ts","./src/app/config/config.setup.ts","./src/app/config/tmc/index.ts","./src/app/config/tmc/tmc.actions.ts","./src/app/config/tmc/tmc.model.ts","./src/app/config/tmc/tmc.reducer.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.module.ts","./src/app/dialog/confirmation/confirmation.component.ts","./src/app/dialog/confirmation/confirmation.component.html","./src/app/effects/auth.effects.ts","./src/app/effects/billing-request.effects.ts","./src/app/effects/booking.effects.ts","./src/app/effects/company-user.effects.ts","./src/app/effects/company.effects.ts","./src/app/effects/confirmation-dialog.effects.ts","./src/app/effects/country.effects.ts","./src/app/effects/feature.effects.ts","./src/app/effects/global.effects.ts","./src/app/effects/product.effects.ts","./src/app/effects/system-message.effects.ts","./src/app/effects/tenant.effects.ts","./src/app/effects/user.effects.ts","./src/app/effects/vat-category.effects.ts","./src/app/effects/vendor-payment-provider.effects.ts","./src/app/effects/vendor.effects.ts","./src/app/global/breadcrumbs/breadcrumb/breadcrumb.component.ts","./src/app/global/breadcrumbs/breadcrumb/breadcrumb.component.html","./src/app/global/breadcrumbs/breadcrumbs.component.ts","./src/app/global/breadcrumbs/breadcrumbs.component.html","./src/app/global/breadcrumbs/breadcrumbs.module.ts","./src/app/global/dialog/dialog-title.component.ts","./src/app/global/dialog/dialog-title.template.html","./src/app/global/dialog/dialog.module.ts","./src/app/global/dot-loader/dot-loader.component.ts","./src/app/global/dot-loader/dot-loader.template.html","./src/app/global/dot-loader/dot-loader.module.ts","./src/app/global/interfaces/response.interface.ts","./src/app/global/layout/base-layout.component.ts","./src/app/global/layout/header/header.component.ts","./src/app/global/layout/header/header.component.html","./src/app/global/layout/layout.module.ts","./src/app/global/layout/sidenav/sidenav.component.ts","./src/app/global/layout/sidenav/sidenav.component.html","./src/app/global/wrapper/listing/total/wrapper-listing-total.component.ts","./src/app/global/wrapper/listing/total/wrapper-listing-total.component.html","./src/app/global/wrapper/listing/wrapper-listing.component.ts","./src/app/global/wrapper/listing/wrapper-listing.component.html","./src/app/global/wrapper/listing/wrapper-listing.module.ts","./src/app/global/wrapper/main/wrapper-main.component.ts","./src/app/global/wrapper/main/wrapper-main.component.html","./src/app/global/wrapper/main/wrapper-main.module.ts","./src/app/global/wrapper/search/base-search.component.ts","./src/app/global/wrapper/search/green-search-wrapper/green-search-wrapper.component.ts","./src/app/global/wrapper/search/green-search-wrapper/green-search-wrapper.component.html","./src/app/global/wrapper/search/quick-search-wrapper/quick-search-wrapper.component.ts","./src/app/global/wrapper/search/quick-search-wrapper/quick-search-wrapper.component.html","./src/app/global/wrapper/search/search-bookings/search-bookings.component.ts","./src/app/global/wrapper/search/search-bookings/search-bookings.component.html","./src/app/global/wrapper/search/search-companies/search-companies.component.ts","./src/app/global/wrapper/search/search-companies/search-companies.component.html","./src/app/global/wrapper/search/search-users/search-users.component.ts","./src/app/global/wrapper/search/search-users/search-users.component.html","./src/app/global/wrapper/search/wrapper-search.module.ts","./src/app/global/wrapper/stat/wrapper-stat.component.ts","./src/app/global/wrapper/stat/wrapper-stat.component.html","./src/app/global/wrapper/stat/wrapper-stat.module.ts","./src/app/global/wrapper/widget/wrapper-widget.component.ts","./src/app/global/wrapper/widget/wrapper-widget.component.html","./src/app/global/wrapper/widget/wrapper-widget.module.ts","./src/app/interceptors/add-header.interceptor.ts","./src/app/interceptors/cache.interceptor.ts","./src/app/interceptors/mocked-requests.interceptor.ts","./src/app/interceptors/split-sort-param.interceptor.ts","./src/app/interceptors/unauthenticated.interceptor.ts","./src/app/models/billing-profile.model.ts","./src/app/models/billing-request.model.ts","./src/app/models/booking-list-item.model.ts","./src/app/models/booking.model.ts","./src/app/models/cart-items/flight-booking.model.ts","./src/app/models/cart-items/flight-traveler.model.ts","./src/app/models/cart-items/flight.model.ts","./src/app/models/cart-items/generic-product-booking.model.ts","./src/app/models/cart-items/hotel-booking.model.ts","./src/app/models/cart-items/hotel-room.model.ts","./src/app/models/cart-items/rental-car-booking.model.ts","./src/app/models/cart-items/shared.model.ts","./src/app/models/cart-items/taxi-booking.model.ts","./src/app/models/cart-items/train-booking.model.ts","./src/app/models/cart-items/train-journey-intinerary-segment.model.ts","./src/app/models/cart-items/train-journey-intinerary.model.ts","./src/app/models/cart-items/train-journey.model.ts","./src/app/models/cart-items/train-traveler.model.ts","./src/app/models/cart.model.ts","./src/app/models/checkout-options.model.ts","./src/app/models/company-user.model.ts","./src/app/models/company.model.ts","./src/app/models/constants/booking-status.constants.ts","./src/app/models/constants/payment-status.constants.ts","./src/app/models/constants/product-type-icons.constants.ts","./src/app/models/cost-center.model.ts","./src/app/models/feature.model.ts","./src/app/models/lodge-card.model.ts","./src/app/models/pagination.model.ts","./src/app/models/payment.model.ts","./src/app/models/pnr.model.ts","./src/app/models/product.model.ts","./src/app/models/system-message.model.ts","./src/app/models/user.model.ts","./src/app/models/vat-category.model.ts","./src/app/models/vendor.model.ts","./src/app/models/vendors-payment-provider.model.ts","./src/app/reducers/auth.reducer.ts","./src/app/reducers/billing-requests.reducer.ts","./src/app/reducers/bookings.reducer.ts","./src/app/reducers/carts.reducer.ts","./src/app/reducers/checkout.reducer.ts","./src/app/reducers/companies.reducer.ts","./src/app/reducers/company-users.reducer.ts","./src/app/reducers/cost-center.reducer.ts","./src/app/reducers/countries.reducer.ts","./src/app/reducers/features.reducer.ts","./src/app/reducers/helpers.ts","./src/app/reducers/index.ts","./src/app/reducers/layout.reducer.ts","./src/app/reducers/payment.reducer.ts","./src/app/reducers/pnr.reducer.ts","./src/app/reducers/products.reducer.ts","./src/app/reducers/router.reducer.ts","./src/app/reducers/system-messages.reducer.ts","./src/app/reducers/tenants.reducer.ts","./src/app/reducers/users.reducer.ts","./src/app/reducers/vat-categories.reducer.ts","./src/app/reducers/vendors-payment-providers.reducer.ts","./src/app/reducers/vendors.reducer.ts","./src/app/services/api-cache.service.ts","./src/app/services/app-initializer.service.ts","./src/app/services/billing-request.service.ts","./src/app/services/booking.service.ts","./src/app/services/company-user.service.ts","./src/app/services/company.service.ts","./src/app/services/country.service.ts","./src/app/services/feature.service.ts","./src/app/services/product.service.ts","./src/app/services/system-message.service.ts","./src/app/services/tenant.service.ts","./src/app/services/user.service.ts","./src/app/services/vat-category.service.ts","./src/app/services/vendor.service.ts","./src/app/services/vendors-payment-provider.service.ts","./src/app/users/user-form.component.ts","./src/app/users/user-form.component.html","./src/app/users/user-password-form.component.ts","./src/app/users/user-password-form.component.html","./src/app/utils/animations/element-cross-fade.ts","./src/app/utils/helpers/get-jwt-claims.ts","./src/app/utils/pipes/camel-case-to-spaces.pipe.ts","./src/app/utils/pipes/cancellation-policy.pipe.ts","./src/app/utils/pipes/dashes-to-spaces.pipe.ts","./src/app/utils/pipes/date.pipe.ts","./src/app/utils/pipes/duration.pipe.ts","./src/app/utils/pipes/pipes.module.ts","./src/app/utils/pipes/price-format.pipe.ts","./src/app/utils/pipes/upperfirst.pipe.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { MockParams, MockRequest } from './mock-request.model';\n\nexport class MockedRequest {\n  originalUrl: string;\n  request: MockRequest;\n  requestBody: any;\n  params: MockParams;\n  response: any;\n\n  constructor(params: {\n    request: MockedRequest['request'];\n    params: MockedRequest['params'];\n    originalUrl: MockedRequest['originalUrl'];\n  }) {\n    this.originalUrl = params.originalUrl;\n    this.request = params.request;\n    this.params = params.params;\n  }\n\n  public setRequestBody(body: MockedRequest['requestBody']): MockedRequest {\n    this.requestBody = body;\n\n    return this;\n  }\n\n  public getResponse(): MockedRequest['response'] {\n    if (!this.response) {\n      this.response = this.request.getResponse(this.params, this.requestBody);\n    }\n\n    return this.response;\n  }\n\n  public log(params: { httpRequest?: any }): void {\n    if (!this.response) this.getResponse();\n\n    const colors = {\n      GET: 'forestgreen',\n      POST: 'darkslateblue',\n      PUT: 'darkorange',\n      DELETE: 'brown',\n      PATCH: 'darkorange',\n    };\n\n    console.groupCollapsed(\n      `[Mock] %c${this.request.method}%c ${this.request.url}`,\n      `font-weight: normal; font-size: 9px; color: white;\n      background: ${colors[this.request.method]}; padding: 2px 5px;\n      border-radius: 3px; text-align: center`,\n      ``\n    );\n\n    if (this.response) {\n      console.group(`Mocked Response`);\n      console.log(this.response);\n      console.groupEnd();\n    }\n\n    if (Object.keys(this.params).length) {\n      console.groupCollapsed(`Mocked Params`);\n      console.log(this.params);\n      console.groupEnd();\n    }\n\n    if (params.httpRequest) {\n      console.groupCollapsed(`Full Request`);\n      console.log(params.httpRequest);\n      console.groupEnd();\n    }\n\n    console.groupCollapsed(`Original URL`);\n    console.log(this.originalUrl);\n    console.groupEnd();\n\n    console.groupEnd();\n  }\n}\n","import { MockRequest } from './mock-request.model';\nimport { MockedRequest } from './mocked-request';\nimport { mockedModules } from './modules';\n\nexport class MockedRequests {\n  requests: MockRequest[];\n\n  constructor(requests: MockedRequests['requests']) {\n    this.requests = requests;\n  }\n\n  getAll(): MockedRequests['requests'] {\n    return this.requests.sort((a, b) => {\n      // Longest paths go first, so we don't have false matches\n      // i.e. if we have '/path' before `/another/path` both of those will match\n      // the '/path' regex, so we have to sort descending to match desired one\n      return b.url.length - a.url.length;\n    });\n  }\n\n  getMockedRequest(method: string, originalUrl: string): MockedRequest {\n    const params = {};\n\n    const request = this.getAll().find((item) => {\n      if (item.method !== method) return false;\n\n      // Make the regex safe by escaping some special characters that might be a part of the URL\n      let regex = item.url.replace(/&/g, '\\\\&').replace(/\\?/g, '\\\\?').replace(/=/g, '\\\\=');\n\n      // Match the results and remove surrounding braces (ie. convert {param} to param)\n      const matches = (item.url.match(/{([^}]+)}/g) || []).map((key) => key.slice(1, -1));\n\n      // Put back all the regexes in the original path by replacing custom params (ie. convert {param} to (.*))\n      matches.forEach((key) => {\n        regex = regex.replace(`{${key}}`, item.params?.[key] || '(.*)');\n      });\n\n      // Get the regex results\n      const results = new RegExp(regex).exec(`${originalUrl}`);\n\n      // Preserve all params caught with the regex, so they can be used if needed\n      // Result number 1 is always going to be a full string, so we want to skip that one\n      if (results?.length > 1) {\n        results.slice(1).forEach((value, index) => {\n          params[matches[index]] = value;\n        });\n      }\n\n      return !!results;\n    });\n\n    return request ? new MockedRequest({ request, params, originalUrl }) : null;\n  }\n}\n\n// Combine all mocked requests from all modules into one single array\nexport const mockedRequests = new MockedRequests(\n  mockedModules.reduce((requests: MockRequest[], module) => {\n    requests.push(...module());\n\n    return requests;\n  }, [])\n);\n","import { Cart } from '../../../src/app/models/cart.model';\nimport { BookingAction, BookingMode, BookingPaymentStatus, BookingType } from '../../../src/app/models/booking.model';\nimport { ReservationType } from '../../../src/app/models/cart-items/hotel-booking.model';\nimport { CabinClass, TravelerType, UserTitle } from '../../../src/app/models/cart-items/shared.model';\nimport {\n  AmountQualifier,\n  CarClass,\n  CarCompany,\n  CarTransmissionType,\n} from '../../../src/app/models/cart-items/rental-car-booking.model';\nimport { BookingStatusV2 } from '../../../src/app/models/constants/booking-status.constants';\nimport { ItineraryPriceGroup } from '../../../src/app/models/cart-items/train-journey-intinerary-segment.model';\nimport { JourneyDirection } from '../../../src/app/models/cart-items/train-journey.model';\n\nexport const mockCartData: Cart = {\n  id: 'aae66da1-fc5b-45a1-a30b-6df9541e8d1a',\n  customerId: 'd649b842-9bff-4a6e-9e52-20f69a082e85',\n  travelReference: 'aae66da',\n  actionStates: ['DONE'],\n  status: 'COMPLETED',\n  tripId: 'DT0151222021',\n  tripName: 'Name your trip',\n  additionalTripName: null,\n  requestApprovalDueDate: null,\n  cartApprovers: [],\n  startDate: '2021-06-17',\n  endDate: '2021-07-14',\n  price: {\n    totalPriceToPay: 810.78,\n    totalPrice: 810.78,\n    localTaxes: 0,\n    discount: 0,\n    currency: 'EUR',\n  },\n  payments: [\n    {\n      paymentDate: '2021-05-30',\n      orderId: '2b381b87-7503-4bcc-9345-72f8269d58fc',\n    },\n  ],\n  paymentMethod: 'BILLING_PROFILE',\n  receiptAvailable: false,\n  bids: [],\n  ibs: [],\n  packages: [],\n  gps: [\n    {\n      id: '7d89bfe3-c3dd-4b55-b2d8-39934a601269',\n      requestedCheckIn: '2021-06-18T00:00:00',\n      requestedCheckOut: '2021-06-20T00:00:00',\n      requestedRooms: [\n        {\n          requestedRoomId: '2209659b-3a6c-486d-8ab2-d77a98772cf1',\n          adults: 1,\n          children: 0,\n          infants: 0,\n          bedType: null,\n          roomName: 'Economy Room (No Windows Hobo Sleeper)',\n          occupants: [\n            {\n              id: '2f86ecd7-236f-4959-921a-5611011c0fff',\n              userId: 'd649b842-9bff-4a6e-9e52-20f69a082e85',\n              firstName: 'John',\n              lastName: 'Doe',\n              email: 'example.user@example.com',\n              phoneNumber: '+38160111222',\n              companyName: null,\n              emailConfirmation: false,\n              costCenterId: '',\n              primaryOccupant: true,\n              travelerReferenceFields: {},\n            },\n          ],\n        },\n      ],\n      specialRequests: null,\n      locationPreferences: {\n        cityName: 'Malmö',\n        hotelAddress: 'Baltzarsgatan 20',\n      },\n      hotelBooker: {\n        firstName: 'John',\n        lastName: 'Doe',\n        email: 'example.user@example.com',\n        phoneNumber: '+38160111222',\n        companyName: null,\n      },\n      stars: 4,\n      gym: true,\n      pool: false,\n      breakfast: false,\n      requestedCurrency: 'EUR',\n      requestedPrice: 148.9,\n      localTaxes: {\n        currency: null,\n        amount: 0,\n      },\n      bookingAction: BookingAction.NONE,\n      bookingStatus: 'COMPLETED',\n      type: BookingType.CM_BOOKING,\n      cancellationPolicies: [],\n      hotelDescription: {\n        position: {\n          latitude: 55.60456,\n          longitude: 13.0038,\n        },\n        hotelName: 'Hotel Garden',\n        address: 'Baltzarsgatan 20',\n        phoneNumber: '',\n        email: '',\n        hotelImage:\n          'https://q-xx.bstatic.com/xdata/images/hotel/max500/172263018.jpg' +\n          '?k=b9499f8c0c4f1c6f146821c4d293645708b42ee077388700f3b9718cbfd44f1f&o=',\n        reservationCodes: [\n          {\n            reservationCode: '2543101292',\n            reservationType: ReservationType.ID,\n          },\n          {\n            reservationCode: '9692',\n            reservationType: ReservationType.PIN,\n          },\n        ],\n        moreContentAvailable: false,\n        providerName: 'BOOKING_COM',\n      },\n      paymentStatus: BookingPaymentStatus.COMPLETED,\n      corporateRate: false,\n      refundable: false,\n      prePaid: true,\n    },\n  ],\n  gos: [],\n  tickets: [],\n  flightBookings: [\n    {\n      id: '4dc9cf10-5e70-4dcb-8707-faf30d81df03',\n      totalPrice: 114.67,\n      currency: 'EUR',\n      co2EmissionInGrams: 10200000,\n      departingFlightDeparture: '2021-06-17T11:10:00',\n      departingFlightDuration: 42900,\n      arrivingFlightDuration: 42900,\n      numberOfStops: 1,\n      flights: [\n        {\n          duration: 42900,\n          co2EmissionInGrams: 10200000,\n          segments: [\n            {\n              id: '31347663-e5be-4d97-ace3-69ea6da944fe',\n              duration: 9900,\n              marketingCarrier: 'DY',\n              marketingAirline: {\n                code: 'DY',\n                name: 'Norwegian',\n                iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/DY.gif',\n              },\n              operatingCarrier: 'DY',\n              operatingAirline: {\n                code: 'DY',\n                name: 'Norwegian',\n                iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/DY.gif',\n              },\n              flightNumber: '1977',\n              aircraftModel: '73H',\n              arrival: {\n                time: '2021-06-17T13:55:00',\n                airportCode: 'OSL',\n                airportName: 'Oslo',\n                airportCountryCode: 'NO',\n                terminal: null,\n                flightTaxiOption: false,\n              },\n              departure: {\n                time: '2021-06-17T11:10:00',\n                airportCode: 'BEG',\n                airportName: 'Belgrade',\n                airportCountryCode: 'RS',\n                terminal: '2',\n                flightTaxiOption: false,\n              },\n              airportChange: false,\n              layover: 14700,\n              shortLayover: null,\n              longLayover: false,\n              differentDay: true,\n              cabinClass: CabinClass.ECONOMY,\n              baggageAllowance: {\n                quantity: null,\n                weight: {\n                  value: null,\n                  unit: null,\n                },\n              },\n            },\n            {\n              id: 'e018812e-0e85-4c57-b4c4-f2af7abd8610',\n              duration: 3600,\n              marketingCarrier: 'DY',\n              marketingAirline: {\n                code: 'DY',\n                name: 'Norwegian',\n                iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/DY.gif',\n              },\n              operatingCarrier: 'DY',\n              operatingAirline: {\n                code: 'DY',\n                name: 'Norwegian',\n                iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/DY.gif',\n              },\n              flightNumber: '822',\n              aircraftModel: '73H',\n              arrival: {\n                time: '2021-06-17T19:00:00',\n                airportCode: 'ARN',\n                airportName: 'Stockholm Arlanda',\n                airportCountryCode: 'SE',\n                terminal: '5',\n                flightTaxiOption: false,\n              },\n              departure: {\n                time: '2021-06-17T18:00:00',\n                airportCode: 'OSL',\n                airportName: 'Oslo',\n                airportCountryCode: 'NO',\n                terminal: null,\n                flightTaxiOption: false,\n              },\n              airportChange: false,\n              layover: null,\n              shortLayover: null,\n              longLayover: false,\n              differentDay: true,\n              cabinClass: CabinClass.ECONOMY,\n              baggageAllowance: {\n                quantity: null,\n                weight: {\n                  value: null,\n                  unit: null,\n                },\n              },\n            },\n          ],\n        },\n      ],\n      travelers: [\n        {\n          id: 'be341164-b5b9-48bf-bf46-f86200b2908b',\n          userId: 'd649b842-9bff-4a6e-9e52-20f69a082e85',\n          title: UserTitle.MR,\n          firstName: 'John',\n          lastName: 'Doe',\n          middleName: null,\n          birthday: '1999-02-18',\n          loyaltyCardProvider: null,\n          loyaltyCardNumber: null,\n          email: 'example.user@example.com',\n          emailConfirmation: false,\n          travelerType: TravelerType.ADULT,\n          flightTickets: [\n            {\n              ticketNo: '328-1103400401',\n              segment: [\n                {\n                  id: '31347663-e5be-4d97-ace3-69ea6da944fe',\n                  duration: 9900,\n                  marketingCarrier: 'DY',\n                  marketingAirline: {\n                    code: 'DY',\n                    name: 'Norwegian',\n                    iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/DY.gif',\n                  },\n                  operatingCarrier: 'DY',\n                  operatingAirline: {\n                    code: 'DY',\n                    name: 'Norwegian',\n                    iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/DY.gif',\n                  },\n                  flightNumber: '1977',\n                  aircraftModel: '73H',\n                  arrival: {\n                    time: '2021-06-17T13:55:00',\n                    airportCode: 'OSL',\n                    airportName: 'Oslo',\n                    airportCountryCode: 'NO',\n                    terminal: null,\n                    flightTaxiOption: false,\n                  },\n                  departure: {\n                    time: '2021-06-17T11:10:00',\n                    airportCode: 'BEG',\n                    airportName: 'Belgrade',\n                    airportCountryCode: 'RS',\n                    terminal: '2',\n                    flightTaxiOption: false,\n                  },\n                  airportChange: false,\n                  layover: 14700,\n                  shortLayover: null,\n                  longLayover: false,\n                  differentDay: true,\n                  cabinClass: CabinClass.ECONOMY,\n                  baggageAllowance: {\n                    quantity: null,\n                    weight: {\n                      value: null,\n                      unit: null,\n                    },\n                  },\n                },\n                {\n                  id: 'e018812e-0e85-4c57-b4c4-f2af7abd8610',\n                  duration: 3600,\n                  marketingCarrier: 'DY',\n                  marketingAirline: {\n                    code: 'DY',\n                    name: 'Norwegian',\n                    iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/DY.gif',\n                  },\n                  operatingCarrier: 'DY',\n                  operatingAirline: {\n                    code: 'DY',\n                    name: 'Norwegian',\n                    iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/DY.gif',\n                  },\n                  flightNumber: '822',\n                  aircraftModel: '73H',\n                  arrival: {\n                    time: '2021-06-17T19:00:00',\n                    airportCode: 'ARN',\n                    airportName: 'Stockholm Arlanda',\n                    airportCountryCode: 'SE',\n                    terminal: '5',\n                    flightTaxiOption: false,\n                  },\n                  departure: {\n                    time: '2021-06-17T18:00:00',\n                    airportCode: 'OSL',\n                    airportName: 'Oslo',\n                    airportCountryCode: 'NO',\n                    terminal: null,\n                    flightTaxiOption: false,\n                  },\n                  airportChange: false,\n                  layover: null,\n                  shortLayover: null,\n                  longLayover: false,\n                  differentDay: true,\n                  cabinClass: CabinClass.ECONOMY,\n                  baggageAllowance: {\n                    quantity: null,\n                    weight: {\n                      value: null,\n                      unit: null,\n                    },\n                  },\n                },\n              ],\n            },\n          ],\n          costCenterId: null,\n          addons: null,\n          exchanged: false,\n          travelerReferenceFields: {},\n        },\n      ],\n      bookingReference: {\n        reference: 'OF9ABX',\n        source: 'Amadeus',\n      },\n      status: 'COMPLETED',\n      action: BookingAction.NONE,\n      paymentStatus: BookingPaymentStatus.COMPLETED,\n      hasExchange: false,\n      exchanged: false,\n    },\n    {\n      id: '6e49f7d7-e9c6-4488-81dc-e922f1031f16',\n      totalPrice: 133.7,\n      currency: 'EUR',\n      co2EmissionInGrams: 8200000,\n      departingFlightDeparture: '2021-06-20T10:30:00',\n      departingFlightDuration: 182100,\n      arrivingFlightDuration: 182100,\n      numberOfStops: 1,\n      flights: [\n        {\n          duration: 182100,\n          co2EmissionInGrams: 8200000,\n          segments: [\n            {\n              id: '166f60c0-fb74-4c19-a58f-43902fc74aa4',\n              duration: 6300,\n              marketingCarrier: 'LO',\n              marketingAirline: {\n                code: 'LO',\n                name: 'LOT - Polish Airlines',\n                iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/LO.gif',\n              },\n              operatingCarrier: 'LO',\n              operatingAirline: {\n                code: 'LO',\n                name: 'LOT - Polish Airlines',\n                iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/LO.gif',\n              },\n              flightNumber: '454',\n              aircraftModel: 'E75',\n              arrival: {\n                time: '2021-06-20T12:15:00',\n                airportCode: 'WAW',\n                airportName: 'Warsaw',\n                airportCountryCode: 'PL',\n                terminal: null,\n                flightTaxiOption: false,\n              },\n              departure: {\n                time: '2021-06-20T10:30:00',\n                airportCode: 'ARN',\n                airportName: 'Stockholm Arlanda',\n                airportCountryCode: 'SE',\n                terminal: '5',\n                flightTaxiOption: false,\n              },\n              airportChange: false,\n              layover: 84900,\n              shortLayover: null,\n              longLayover: false,\n              differentDay: true,\n              cabinClass: CabinClass.ECONOMY,\n              baggageAllowance: {\n                quantity: null,\n                weight: {\n                  value: null,\n                  unit: null,\n                },\n              },\n            },\n            {\n              id: 'e4580d30-3e1c-4bf3-be4d-047146bd9ffa',\n              duration: 6000,\n              marketingCarrier: 'LO',\n              marketingAirline: {\n                code: 'LO',\n                name: 'LOT - Polish Airlines',\n                iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/LO.gif',\n              },\n              operatingCarrier: 'LO',\n              operatingAirline: {\n                code: 'LO',\n                name: 'LOT - Polish Airlines',\n                iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/LO.gif',\n              },\n              flightNumber: '571',\n              aircraftModel: 'E75',\n              arrival: {\n                time: '2021-06-21T13:30:00',\n                airportCode: 'BEG',\n                airportName: 'Belgrade',\n                airportCountryCode: 'RS',\n                terminal: '2',\n                flightTaxiOption: false,\n              },\n              departure: {\n                time: '2021-06-21T11:50:00',\n                airportCode: 'WAW',\n                airportName: 'Warsaw',\n                airportCountryCode: 'PL',\n                terminal: null,\n                flightTaxiOption: false,\n              },\n              airportChange: false,\n              layover: null,\n              shortLayover: null,\n              longLayover: false,\n              differentDay: true,\n              cabinClass: CabinClass.ECONOMY,\n              baggageAllowance: {\n                quantity: null,\n                weight: {\n                  value: null,\n                  unit: null,\n                },\n              },\n            },\n          ],\n        },\n      ],\n      travelers: [\n        {\n          id: 'ea953607-ccef-40e5-9d54-81ce0e0e74b9',\n          userId: 'd649b842-9bff-4a6e-9e52-20f69a082e85',\n          title: UserTitle.MR,\n          firstName: 'John',\n          lastName: 'Doe',\n          middleName: null,\n          birthday: '1999-02-18',\n          loyaltyCardProvider: null,\n          loyaltyCardNumber: null,\n          email: 'example.user@example.com',\n          emailConfirmation: false,\n          travelerType: TravelerType.ADULT,\n          flightTickets: [\n            {\n              ticketNo: '080-1966415096',\n              segment: [\n                {\n                  id: '166f60c0-fb74-4c19-a58f-43902fc74aa4',\n                  duration: 6300,\n                  marketingCarrier: 'LO',\n                  marketingAirline: {\n                    code: 'LO',\n                    name: 'LOT - Polish Airlines',\n                    iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/LO.gif',\n                  },\n                  operatingCarrier: 'LO',\n                  operatingAirline: {\n                    code: 'LO',\n                    name: 'LOT - Polish Airlines',\n                    iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/LO.gif',\n                  },\n                  flightNumber: '454',\n                  aircraftModel: 'E75',\n                  arrival: {\n                    time: '2021-06-20T12:15:00',\n                    airportCode: 'WAW',\n                    airportName: 'Warsaw',\n                    airportCountryCode: 'PL',\n                    terminal: null,\n                    flightTaxiOption: false,\n                  },\n                  departure: {\n                    time: '2021-06-20T10:30:00',\n                    airportCode: 'ARN',\n                    airportName: 'Stockholm Arlanda',\n                    airportCountryCode: 'SE',\n                    terminal: '5',\n                    flightTaxiOption: false,\n                  },\n                  airportChange: false,\n                  layover: 84900,\n                  shortLayover: null,\n                  longLayover: false,\n                  differentDay: true,\n                  cabinClass: CabinClass.ECONOMY,\n                  baggageAllowance: {\n                    quantity: null,\n                    weight: {\n                      value: null,\n                      unit: null,\n                    },\n                  },\n                },\n                {\n                  id: 'e4580d30-3e1c-4bf3-be4d-047146bd9ffa',\n                  duration: 6000,\n                  marketingCarrier: 'LO',\n                  marketingAirline: {\n                    code: 'LO',\n                    name: 'LOT - Polish Airlines',\n                    iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/LO.gif',\n                  },\n                  operatingCarrier: 'LO',\n                  operatingAirline: {\n                    code: 'LO',\n                    name: 'LOT - Polish Airlines',\n                    iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/LO.gif',\n                  },\n                  flightNumber: '571',\n                  aircraftModel: 'E75',\n                  arrival: {\n                    time: '2021-06-21T13:30:00',\n                    airportCode: 'BEG',\n                    airportName: 'Belgrade',\n                    airportCountryCode: 'RS',\n                    terminal: '2',\n                    flightTaxiOption: false,\n                  },\n                  departure: {\n                    time: '2021-06-21T11:50:00',\n                    airportCode: 'WAW',\n                    airportName: 'Warsaw',\n                    airportCountryCode: 'PL',\n                    terminal: null,\n                    flightTaxiOption: false,\n                  },\n                  airportChange: false,\n                  layover: null,\n                  shortLayover: null,\n                  longLayover: false,\n                  differentDay: true,\n                  cabinClass: CabinClass.ECONOMY,\n                  baggageAllowance: {\n                    quantity: null,\n                    weight: {\n                      value: null,\n                      unit: null,\n                    },\n                  },\n                },\n              ],\n            },\n          ],\n          costCenterId: null,\n          addons: null,\n          exchanged: false,\n          travelerReferenceFields: {},\n        },\n      ],\n      bookingReference: {\n        reference: 'OF9KYQ',\n        source: 'Amadeus',\n      },\n      status: 'COMPLETED',\n      action: BookingAction.NONE,\n      paymentStatus: BookingPaymentStatus.COMPLETED,\n      hasExchange: false,\n      exchanged: false,\n    },\n  ],\n  taxiBookings: [\n    {\n      id: '22222-8f25-4379-b90e-6f4d273ca50f',\n      status: 'COMPLETED',\n      bookingReference: 'FLIGHT-JSG34',\n      type: BookingType.TAXI,\n      offerId: 'cee5df1e-8f25-4379-b90e-6f4d273ca50f',\n      bookingId: '4dc9cf10-5e70-4dcb-8707-faf30d81df03',\n      segmentId: 'e018812e-0e85-4c57-b4c4-f2af7abd8610',\n      start: {\n        datetime: '2021-09-20T06:30:00',\n        locationCode: null,\n        address: '181 32 Lidingö',\n        city: 'Herrljunga',\n        zip: '52432',\n        country: 'SE',\n        lat: 58.0770692,\n        lon: 13.0058573,\n      },\n      end: {\n        datetime: '2021-09-20T06:30:00',\n        locationCode: 'ARN',\n        address: 'Arlanda flygplats',\n        city: 'STOCKHOLM-ARLANDA',\n        zip: '19060',\n        country: 'SE',\n        lat: 59.6478722222222,\n        lon: 17.9259027777778,\n      },\n      taxiType: 'FLIGHT',\n      transferType: 'PRIVATE',\n      serviceProvider: {\n        name: 'Taxibokning',\n        code: 'TXB',\n      },\n      vehicle: {\n        category: 'ST',\n        description: 'Regular taxi, with Taxi Falköping',\n        seatCount: 3,\n        baggageCount: 3,\n      },\n      travelers: [\n        { id: '13213', firstName: 'John', lastName: 'Doe', travelerReferenceFields: {} },\n        { id: '13213', firstName: 'Pera', lastName: 'Peric', travelerReferenceFields: {} },\n      ],\n      cancellationPolicies: [\n        {\n          // Non-refundable within 60 minutes of pick-up time\n          costAmount: 64.32,\n          refundAmount: 0,\n          refundAmountPerNight: null,\n          currency: 'EUR',\n          fromDate: '2021-09-20T05:30:00',\n          toDate: '2021-09-20T06:30:00',\n          used: false,\n          fullRefundable: false,\n          cancellationFeeDetails: {\n            amount: null,\n            currency: 'EUR',\n            percent: 100,\n            numberOfNights: null,\n          },\n        },\n        {\n          // Partially refundable up to 60 minutes of pick-up time\n          costAmount: 18.53,\n          refundAmount: 45.89,\n          refundAmountPerNight: null,\n          currency: 'EUR',\n          fromDate: '2021-09-20T04:30:00',\n          toDate: '2021-09-20T05:30:00',\n          used: false,\n          fullRefundable: false,\n          cancellationFeeDetails: {\n            amount: null,\n            currency: 'EUR',\n            percent: 20,\n            numberOfNights: null,\n          },\n        },\n        {\n          // Free cancellation up to 120 minutes prior to ride\n          costAmount: 0,\n          refundAmount: 64.32,\n          refundAmountPerNight: null,\n          currency: 'EUR',\n          fromDate: '2020-09-20T06:30:00',\n          toDate: '2021-09-20T04:30:00',\n          used: false,\n          fullRefundable: true,\n          cancellationFeeDetails: {\n            amount: null,\n            currency: 'EUR',\n            percent: 0,\n            numberOfNights: null,\n          },\n        },\n        {\n          // Non-refundable within 60 minutes of pick-up time\n          costAmount: 64.32,\n          refundAmount: 0,\n          refundAmountPerNight: null,\n          currency: 'EUR',\n          fromDate: '2021-09-20T05:30:00',\n          toDate: '2021-09-20T06:30:00',\n          used: false,\n          fullRefundable: false,\n          cancellationFeeDetails: {\n            amount: 64.32,\n            currency: 'EUR',\n            percent: 0,\n            numberOfNights: null,\n          },\n        },\n        {\n          // Partially refundable up to 60 minutes of pick-up time\n          costAmount: 18.53,\n          refundAmount: 45.89,\n          refundAmountPerNight: null,\n          currency: 'EUR',\n          fromDate: '2021-09-20T04:30:00',\n          toDate: '2021-09-20T05:30:00',\n          used: false,\n          fullRefundable: false,\n          cancellationFeeDetails: {\n            amount: 18.53,\n            currency: 'EUR',\n            percent: null,\n            numberOfNights: null,\n          },\n        },\n        {\n          // Free cancellation up to 120 minutes prior to ride\n          costAmount: 0,\n          refundAmount: 64.32,\n          refundAmountPerNight: null,\n          currency: 'EUR',\n          fromDate: '2020-09-20T06:30:00',\n          toDate: '2021-09-20T04:30:00',\n          used: false,\n          fullRefundable: true,\n          cancellationFeeDetails: {\n            amount: 0,\n            currency: 'EUR',\n            percent: null,\n            numberOfNights: null,\n          },\n        },\n      ],\n      price: {\n        amount: 1725,\n        currency: 'SEK',\n      },\n      items: [],\n    },\n    {\n      id: '33333-8f25-4379-b90e-6f4d273ca50f',\n      status: 'COMPLETED',\n      bookingReference: 'FLIGHT-PG54SD',\n      type: BookingType.TAXI,\n      offerId: '00bc0788-71b5-4774-a124-666d27350f5e',\n      bookingId: '6e49f7d7-e9c6-4488-81dc-e922f1031f16',\n      segmentId: '166f60c0-fb74-4c19-a58f-43902fc74aa4',\n      start: {\n        datetime: '2021-09-20T11:35:00',\n        locationCode: 'MMX',\n        address: null,\n        city: 'SVEDALA',\n        zip: '23391',\n        country: 'SE',\n        lat: 55.5404,\n        lon: 13.3642,\n      },\n      end: {\n        datetime: '2021-09-20T11:35:00',\n        locationCode: null,\n        address: 'Tornfalksgatan Malmö',\n        city: 'Malmö',\n        zip: 'undefined',\n        country: 'SE',\n        lat: 55.5676661,\n        lon: 13.0121061,\n      },\n      taxiType: 'FLIGHT',\n      transferType: 'PRIVATE',\n      serviceProvider: {\n        name: 'Taxibokning',\n        code: 'TXB',\n      },\n      vehicle: {\n        category: 'ST',\n        description: 'Regular taxi, with Vellinge Taxi',\n        seatCount: 3,\n        baggageCount: 3,\n      },\n      travelers: [{ id: '13213', firstName: 'John', lastName: 'Doe', travelerReferenceFields: {} }],\n      cancellationPolicies: [\n        {\n          // Non-refundable within 60 minutes of pick-up time\n          costAmount: 64.32,\n          refundAmount: 0,\n          refundAmountPerNight: null,\n          currency: 'EUR',\n          fromDate: '2021-09-20T10:35:00',\n          toDate: '2021-09-20T11:35:00',\n          used: false,\n          fullRefundable: false,\n          cancellationFeeDetails: {\n            amount: null,\n            currency: 'EUR',\n            percent: 100,\n            numberOfNights: null,\n          },\n        },\n        {\n          // Partially refundable up to 60 minutes of pick-up time\n          costAmount: 18.53,\n          refundAmount: 45.89,\n          refundAmountPerNight: null,\n          currency: 'EUR',\n          fromDate: '2021-09-20T09:35:00',\n          toDate: '2021-09-20T10:35:00',\n          used: false,\n          fullRefundable: false,\n          cancellationFeeDetails: {\n            amount: null,\n            currency: 'EUR',\n            percent: 20,\n            numberOfNights: null,\n          },\n        },\n        {\n          // Free cancellation up to 120 minutes prior to ride\n          costAmount: 0,\n          refundAmount: 64.32,\n          refundAmountPerNight: null,\n          currency: 'EUR',\n          fromDate: '2020-09-20T11:35:00',\n          toDate: '2021-09-20T09:35:00',\n          used: false,\n          fullRefundable: true,\n          cancellationFeeDetails: {\n            amount: null,\n            currency: 'EUR',\n            percent: 0,\n            numberOfNights: null,\n          },\n        },\n        {\n          // Non-refundable within 60 minutes of pick-up time\n          costAmount: 64.32,\n          refundAmount: 0,\n          refundAmountPerNight: null,\n          currency: 'EUR',\n          fromDate: '2021-09-20T10:35:00',\n          toDate: '2021-09-20T11:35:00',\n          used: false,\n          fullRefundable: false,\n          cancellationFeeDetails: {\n            amount: 64.32,\n            currency: 'EUR',\n            percent: 0,\n            numberOfNights: null,\n          },\n        },\n        {\n          // Partially refundable up to 60 minutes of pick-up time\n          costAmount: 18.53,\n          refundAmount: 45.89,\n          refundAmountPerNight: null,\n          currency: 'EUR',\n          fromDate: '2021-09-20T09:35:00',\n          toDate: '2021-09-20T10:35:00',\n          used: false,\n          fullRefundable: false,\n          cancellationFeeDetails: {\n            amount: 18.53,\n            currency: 'EUR',\n            percent: null,\n            numberOfNights: null,\n          },\n        },\n        {\n          // Free cancellation up to 120 minutes prior to ride\n          costAmount: 0,\n          refundAmount: 64.32,\n          refundAmountPerNight: null,\n          currency: 'EUR',\n          fromDate: '2020-09-20T11:35:00',\n          toDate: '2021-09-20T09:35:00',\n          used: false,\n          fullRefundable: true,\n          cancellationFeeDetails: {\n            amount: 0,\n            currency: 'EUR',\n            percent: null,\n            numberOfNights: null,\n          },\n        },\n      ],\n      price: {\n        amount: 598,\n        currency: 'SEK',\n      },\n      items: [],\n    },\n    {\n      id: '4444-8f25-4379-b90e-6f4d273ca50f',\n      status: 'COMPLETED',\n      bookingReference: 'TRAIN-JSG34',\n      type: BookingType.TAXI,\n      offerId: 'asd958ajf-8f25-4379-b90e-6f4d273ca50f',\n      bookingId: '98cae036-10c7-4420-95f0-2c0aad571b2a',\n      segmentId: '1',\n      start: {\n        datetime: '2021-09-20T06:30:00',\n        locationCode: null,\n        address: '181 32 Malmo',\n        city: 'Malmo',\n        zip: '52432',\n        country: 'SE',\n        lat: 58.0770692,\n        lon: 13.0058573,\n      },\n      end: {\n        datetime: '2021-09-20T06:30:00',\n        locationCode: 'MMX',\n        address: 'Malmo C',\n        city: 'Malmo',\n        zip: '19060',\n        country: 'SE',\n        lat: 59.6478722222222,\n        lon: 17.9259027777778,\n      },\n      taxiType: 'TRAIN',\n      transferType: 'PRIVATE',\n      serviceProvider: {\n        name: 'Taxibokning',\n        code: 'TXB',\n      },\n      vehicle: {\n        category: 'ST',\n        description: 'Regular taxi, with Taxi Falköping',\n        seatCount: 3,\n        baggageCount: 3,\n      },\n      travelers: [\n        { id: '13213', firstName: 'John', lastName: 'Doe', travelerReferenceFields: {} },\n        { id: '13213', firstName: 'Pera', lastName: 'Peric', travelerReferenceFields: {} },\n      ],\n      cancellationPolicies: [\n        {\n          // Non-refundable within 60 minutes of pick-up time\n          costAmount: 64.32,\n          refundAmount: 0,\n          refundAmountPerNight: null,\n          currency: 'EUR',\n          fromDate: '2021-09-20T05:30:00',\n          toDate: '2021-09-20T06:30:00',\n          used: false,\n          fullRefundable: false,\n          cancellationFeeDetails: {\n            amount: null,\n            currency: 'EUR',\n            percent: 100,\n            numberOfNights: null,\n          },\n        },\n        {\n          // Partially refundable up to 60 minutes of pick-up time\n          costAmount: 18.53,\n          refundAmount: 45.89,\n          refundAmountPerNight: null,\n          currency: 'EUR',\n          fromDate: '2021-09-20T04:30:00',\n          toDate: '2021-09-20T05:30:00',\n          used: false,\n          fullRefundable: false,\n          cancellationFeeDetails: {\n            amount: null,\n            currency: 'EUR',\n            percent: 20,\n            numberOfNights: null,\n          },\n        },\n        {\n          // Free cancellation up to 120 minutes prior to ride\n          costAmount: 0,\n          refundAmount: 64.32,\n          refundAmountPerNight: null,\n          currency: 'EUR',\n          fromDate: '2020-09-20T06:30:00',\n          toDate: '2021-09-20T04:30:00',\n          used: false,\n          fullRefundable: true,\n          cancellationFeeDetails: {\n            amount: null,\n            currency: 'EUR',\n            percent: 0,\n            numberOfNights: null,\n          },\n        },\n        {\n          // Non-refundable within 60 minutes of pick-up time\n          costAmount: 64.32,\n          refundAmount: 0,\n          refundAmountPerNight: null,\n          currency: 'EUR',\n          fromDate: '2021-09-20T05:30:00',\n          toDate: '2021-09-20T06:30:00',\n          used: false,\n          fullRefundable: false,\n          cancellationFeeDetails: {\n            amount: 64.32,\n            currency: 'EUR',\n            percent: 0,\n            numberOfNights: null,\n          },\n        },\n        {\n          // Partially refundable up to 60 minutes of pick-up time\n          costAmount: 18.53,\n          refundAmount: 45.89,\n          refundAmountPerNight: null,\n          currency: 'EUR',\n          fromDate: '2021-09-20T04:30:00',\n          toDate: '2021-09-20T05:30:00',\n          used: false,\n          fullRefundable: false,\n          cancellationFeeDetails: {\n            amount: 18.53,\n            currency: 'EUR',\n            percent: null,\n            numberOfNights: null,\n          },\n        },\n        {\n          // Free cancellation up to 120 minutes prior to ride\n          costAmount: 0,\n          refundAmount: 64.32,\n          refundAmountPerNight: null,\n          currency: 'EUR',\n          fromDate: '2020-09-20T06:30:00',\n          toDate: '2021-09-20T04:30:00',\n          used: false,\n          fullRefundable: true,\n          cancellationFeeDetails: {\n            amount: 0,\n            currency: 'EUR',\n            percent: null,\n            numberOfNights: null,\n          },\n        },\n      ],\n      price: {\n        amount: 459,\n        currency: 'SEK',\n      },\n      items: [],\n    },\n  ],\n  genericProducts: [],\n  trainBookings: [\n    {\n      id: '98cae036-10c7-4420-95f0-2c0aad571b2a',\n      preOrderId: '60b360f54b8882280e6f055e',\n      status: BookingStatusV2.COMPLETION,\n      bookingReference: 'QVF0533H',\n      booker: {\n        firstName: 'John',\n        lastName: 'Doe',\n        email: 'example.user@example.com',\n        phoneNumber: '+38160111222',\n      },\n      rebookable: true,\n      refundable: false,\n      dynamicCancellationPolicy: true,\n      cancelable: true,\n      travellers: [\n        {\n          id: '52013bdd-3db2-4117-9273-4938e575db01',\n          travellerNumber: 1,\n          firstName: 'John',\n          lastName: 'Doe',\n          email: 'example.user@example.com',\n          phoneNumber: '+38160111222',\n          optionSelections: [],\n          seatingSelections: [\n            {\n              journeyId: 965464581,\n              itineraryId: 1,\n              segmentId: '1',\n              description: 'Carriage: 11, Seat: 116, Window, Open coach',\n              carriage: '11',\n              seat: '116',\n              placementOrientation: 'Window',\n              placementCharacteristics: 'Open coach',\n            },\n          ],\n          addons: [],\n          userId: 'd649b842-9bff-4a6e-9e52-20f69a082e85',\n          travelerReferenceFields: {},\n        },\n      ],\n      journeys: [\n        {\n          journeyAdviceId: 965464581,\n          direction: JourneyDirection.IN,\n          itineraries: [\n            {\n              itineraryId: 1,\n              priceGroupType: ItineraryPriceGroup.SEAT,\n              segments: [\n                {\n                  segmentId: '1',\n                  uniqueSegmentId: 'ec9636cd-a8fc-4cef-9d0a-ae9af9ef0640',\n                  transportInformation: {\n                    known: [\n                      {\n                        code: '69',\n                        description: 'Restaurant',\n                        category: 'FOOD',\n                      },\n                    ],\n                    unknown: [\n                      {\n                        code: '4',\n                        description: 'Standard class only',\n                      },\n                    ],\n                  },\n                  departureDateTime: '2021-07-14T16:11:00',\n                  departureLocationName: 'Malmö C',\n                  departureLocationNameLong: 'Malmö Centralstation',\n                  departureTaxiOption: true,\n                  departureStationCode: 'MLMC',\n                  arrivalDateTime: '2021-07-14T21:12:00',\n                  arrivalLocationName: 'Sthlm Central',\n                  arrivalLocationNameLong: 'Stockholm Centralstation',\n                  arrivalTaxiOption: true,\n                  arrivalStationCode: 'STH',\n                  bookingClass: 'SECOND',\n                  travelMethod: 'Train',\n                  productCode: 'Other',\n                  transportId: '3942',\n                  segmentProducer: 'Snälltåget',\n                  serviceBrandName: ' ',\n                  duration: 301,\n                },\n              ],\n            },\n          ],\n        },\n      ],\n      subTotalPrice: {\n        currency: 'EUR',\n        amount: 103.72,\n      },\n      bookingMode: BookingMode.ONLINE,\n      co2EmissionInGrams: null,\n      integrationFee: null,\n    },\n    {\n      id: '96edd4e3-acee-4f01-925c-14a4cbd7ae01',\n      preOrderId: '60b360fb0db0415701cc27fc',\n      status: BookingStatusV2.COMPLETION,\n      bookingReference: 'QVF0532A',\n      booker: {\n        firstName: 'John',\n        lastName: 'Doe',\n        email: 'example.user@example.com',\n        phoneNumber: '+38160111222',\n      },\n      rebookable: true,\n      refundable: false,\n      dynamicCancellationPolicy: true,\n      cancelable: true,\n      travellers: [\n        {\n          id: 'cc7b9c35-4b12-4d8a-b8af-c7c21f401d7a',\n          travellerNumber: 1,\n          firstName: 'John',\n          lastName: 'Doe',\n          email: 'example.user@example.com',\n          phoneNumber: '+38160111222',\n          optionSelections: [],\n          seatingSelections: [\n            {\n              journeyId: 1902639939,\n              itineraryId: 1,\n              segmentId: '1',\n              description: 'Carriage: 11, Seat: 48, Window, Open coach',\n              carriage: '11',\n              seat: '48',\n              placementOrientation: 'Window',\n              placementCharacteristics: 'Open coach',\n            },\n          ],\n          addons: [],\n          userId: 'd649b842-9bff-4a6e-9e52-20f69a082e85',\n          travelerReferenceFields: {},\n        },\n      ],\n      journeys: [\n        {\n          journeyAdviceId: 1902639939,\n          direction: JourneyDirection.OUT,\n          itineraries: [\n            {\n              itineraryId: 1,\n              priceGroupType: ItineraryPriceGroup.SEAT,\n              segments: [\n                {\n                  segmentId: '1',\n                  uniqueSegmentId: 'ec9636cd-a8fc-4cef-9d0a-ae9af9ef0640',\n                  transportInformation: {\n                    known: [\n                      {\n                        code: '69',\n                        description: 'Restaurant',\n                        category: 'FOOD',\n                      },\n                    ],\n                    unknown: [\n                      {\n                        code: '4',\n                        description: 'Standard class only',\n                      },\n                    ],\n                  },\n                  departureDateTime: '2021-07-10T16:22:00',\n                  departureLocationName: 'Sthlm Central',\n                  departureLocationNameLong: 'Stockholm Centralstation',\n                  departureTaxiOption: true,\n                  departureStationCode: 'STH',\n                  arrivalDateTime: '2021-07-10T21:21:00',\n                  arrivalLocationName: 'Malmö C',\n                  arrivalLocationNameLong: 'Malmö Centralstation',\n                  arrivalTaxiOption: true,\n                  arrivalStationCode: 'MLMC',\n                  bookingClass: 'SECOND',\n                  travelMethod: 'Train',\n                  productCode: 'Other',\n                  transportId: '3943',\n                  segmentProducer: 'Snälltåget',\n                  serviceBrandName: ' ',\n                  duration: 299,\n                },\n              ],\n            },\n          ],\n        },\n      ],\n      subTotalPrice: {\n        currency: 'EUR',\n        amount: 103.72,\n      },\n      bookingMode: BookingMode.ONLINE,\n      co2EmissionInGrams: null,\n      integrationFee: null,\n    },\n  ],\n  rentalCarBookings: [\n    {\n      id: '680d6817-4c4e-4fd7-abda-7a6b07beef09',\n      status: BookingStatusV2.COMPLETION,\n      vehicle: {\n        model: 'Toyota Yaris',\n        category: CarClass.ECONOMY,\n        type: null,\n        transmission: CarTransmissionType.MANUAL,\n        driveType: null,\n        fuelAndDistance: null,\n        airConditioner: true,\n        typeCode: 'ECMR',\n        information: {\n          passengerCapacity: 5,\n          doorNumber: 5,\n          bootSize: 3,\n        },\n      },\n      carAgency: {\n        code: 'ZE',\n        name: CarCompany.HERTZ,\n        termsAndConditions: null,\n        cancellation: {\n          policy: null,\n          ratePolicy: null,\n          fee: null,\n          policyKey: 'untilPickUpTime',\n          ratePolicyKey: 'cancellationDetails',\n        },\n      },\n      pickup: {\n        dateAndTime: '2021-06-18T10:00:00',\n        latitude: 59.65,\n        longitude: 17.91667,\n        significance: null,\n        unit: null,\n        value: null,\n        address: {\n          street: 'Benstocksvagen 1',\n          city: 'Stockholm',\n          code: '1A',\n          name: 'STOT52',\n          countryCode: null,\n        },\n      },\n      dropOff: {\n        dateAndTime: '2021-06-21T10:00:00',\n        latitude: 59.65,\n        longitude: 17.91667,\n        significance: null,\n        unit: null,\n        value: null,\n        address: {\n          street: 'Benstocksvagen 1',\n          city: 'Stockholm',\n          code: '1A',\n          name: 'STOT52',\n          countryCode: null,\n        },\n      },\n      offerPriceInfo: [\n        {\n          ratePrice: {\n            identifier: null,\n            pnrIdentifier: 'OF9PY2',\n            agencyIdentifier: 'J778B732370',\n            amount: 198.39,\n            currency: 'EUR',\n            type: null,\n            amountQualifier: null,\n            code: null,\n            planIndicator: null,\n          },\n          mileagePolicy: {\n            type: 'Km',\n            qualifier: 'UNL',\n            quantity: null,\n            period: 'per rental',\n          },\n          associatedCharges: [\n            {\n              chargeType: 'EQUIPMENT',\n              unitPrice: 35.58,\n              quantity: 1,\n              amount: 35.58,\n              chargeCode: 'CST',\n              freeText: 'CHILD SEAT FOR TODDLER',\n              amountQualifier: AmountQualifier.OPTIONAL,\n            },\n            {\n              chargeType: 'EQUIPMENT',\n              unitPrice: 17.79,\n              quantity: 1,\n              amount: 17.79,\n              chargeCode: 'CBS',\n              freeText: 'CHILD BOOSTER SEAT',\n              amountQualifier: AmountQualifier.OPTIONAL,\n            },\n          ],\n        },\n      ],\n      driver: {\n        userId: 'd649b842-9bff-4a6e-9e52-20f69a082e85',\n        firstName: 'John',\n        lastName: 'Doe',\n        email: 'example.user@example.com',\n        title: UserTitle.MR,\n        phoneNumber: null,\n        dateOfBirth: '1999-02-18',\n        travelerReferenceFields: {},\n      },\n      onlyBookerConfirmation: false,\n    },\n  ],\n  labels: [],\n  outOfPolicyChecker: {\n    customerNeedsApproval: false,\n    hotelPolicyCheckers: [],\n    flightPolicyCheckers: [],\n    trainPolicyCheckers: [],\n    outOfPolicy: false,\n  },\n  createdById: 'd649b842-9bff-4a6e-9e52-20f69a082e85',\n  createdByType: 'CUSTOMER',\n  createdAt: '2021-05-30T09:51:56',\n  yourReference: null,\n  currentOrder: {\n    id: '2b381b87-7503-4bcc-9345-72f8269d58fc',\n    customerId: 'd649b842-9bff-4a6e-9e52-20f69a082e85',\n    travelReference: '2b381b8',\n    status: 'COMPLETED',\n    tripId: 'DT0151222021-001',\n    requestApprovalDueDate: null,\n    price: {\n      totalPriceToPay: 810.78,\n      totalPrice: 810.78,\n      localTaxes: 0,\n      discount: 0,\n      currency: 'EUR',\n    },\n    paymentMethod: 'BILLING_PROFILE',\n    gps: [\n      {\n        id: '7d89bfe3-c3dd-4b55-b2d8-39934a601269',\n        requestedCheckIn: '2021-06-18T00:00:00',\n        requestedCheckOut: '2021-06-20T00:00:00',\n        requestedRooms: [\n          {\n            requestedRoomId: '2209659b-3a6c-486d-8ab2-d77a98772cf1',\n            adults: 1,\n            children: 0,\n            infants: 0,\n            bedType: null,\n            roomName: 'Economy Room (No Windows Hobo Sleeper)',\n            occupants: [\n              {\n                id: '2f86ecd7-236f-4959-921a-5611011c0fff',\n                userId: 'd649b842-9bff-4a6e-9e52-20f69a082e85',\n                firstName: 'John',\n                lastName: 'Doe',\n                email: 'example.user@example.com',\n                phoneNumber: '+38160111222',\n                companyName: null,\n                emailConfirmation: false,\n                costCenterId: '',\n                primaryOccupant: true,\n                travelerReferenceFields: {},\n              },\n            ],\n          },\n        ],\n        specialRequests: null,\n        locationPreferences: {\n          cityName: 'Malmö',\n          hotelAddress: 'Baltzarsgatan 20',\n        },\n        hotelBooker: {\n          firstName: 'John',\n          lastName: 'Doe',\n          email: 'example.user@example.com',\n          phoneNumber: '+38160111222',\n          companyName: null,\n        },\n        stars: 4,\n        gym: true,\n        pool: false,\n        breakfast: false,\n        requestedCurrency: 'EUR',\n        requestedPrice: 148.9,\n        localTaxes: {\n          currency: null,\n          amount: 0,\n        },\n        bookingAction: BookingAction.NONE,\n        bookingStatus: 'COMPLETED',\n        type: BookingType.CM_BOOKING,\n        cancellationPolicies: [],\n        hotelDescription: {\n          position: {\n            latitude: 55.60456,\n            longitude: 13.0038,\n          },\n          hotelName: 'Hotel Garden',\n          address: 'Baltzarsgatan 20',\n          phoneNumber: '',\n          email: '',\n          hotelImage:\n            'https://q-xx.bstatic.com/xdata/images/hotel/max500/172263018.jpg' +\n            '?k=b9499f8c0c4f1c6f146821c4d293645708b42ee077388700f3b9718cbfd44f1f&o=',\n          reservationCodes: [\n            {\n              reservationCode: '2543101292',\n              reservationType: ReservationType.ID,\n            },\n            {\n              reservationCode: '9692',\n              reservationType: ReservationType.PIN,\n            },\n          ],\n          moreContentAvailable: false,\n          providerName: 'BOOKING_COM',\n        },\n        paymentStatus: BookingPaymentStatus.COMPLETED,\n        corporateRate: false,\n        refundable: false,\n        prePaid: true,\n      },\n    ],\n    flightBookings: [\n      {\n        id: '4dc9cf10-5e70-4dcb-8707-faf30d81df03',\n        totalPrice: 114.67,\n        currency: 'EUR',\n        co2EmissionInGrams: 10200000,\n        departingFlightDeparture: '2021-06-17T11:10:00',\n        departingFlightDuration: 42900,\n        arrivingFlightDuration: 42900,\n        numberOfStops: 1,\n        flights: [\n          {\n            duration: 42900,\n            co2EmissionInGrams: 10200000,\n            segments: [\n              {\n                id: '31347663-e5be-4d97-ace3-69ea6da944fe',\n                duration: 9900,\n                marketingCarrier: 'DY',\n                marketingAirline: {\n                  code: 'DY',\n                  name: 'Norwegian',\n                  iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/DY.gif',\n                },\n                operatingCarrier: 'DY',\n                operatingAirline: {\n                  code: 'DY',\n                  name: 'Norwegian',\n                  iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/DY.gif',\n                },\n                flightNumber: '1977',\n                aircraftModel: '73H',\n                arrival: {\n                  time: '2021-06-17T13:55:00',\n                  airportCode: 'OSL',\n                  airportName: 'Oslo',\n                  airportCountryCode: 'NO',\n                  terminal: null,\n                  flightTaxiOption: false,\n                },\n                departure: {\n                  time: '2021-06-17T11:10:00',\n                  airportCode: 'BEG',\n                  airportName: 'Belgrade',\n                  airportCountryCode: 'RS',\n                  terminal: '2',\n                  flightTaxiOption: false,\n                },\n                airportChange: false,\n                layover: 14700,\n                shortLayover: null,\n                longLayover: false,\n                differentDay: true,\n                cabinClass: CabinClass.ECONOMY,\n                baggageAllowance: {\n                  quantity: null,\n                  weight: {\n                    value: null,\n                    unit: null,\n                  },\n                },\n              },\n              {\n                id: 'e018812e-0e85-4c57-b4c4-f2af7abd8610',\n                duration: 3600,\n                marketingCarrier: 'DY',\n                marketingAirline: {\n                  code: 'DY',\n                  name: 'Norwegian',\n                  iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/DY.gif',\n                },\n                operatingCarrier: 'DY',\n                operatingAirline: {\n                  code: 'DY',\n                  name: 'Norwegian',\n                  iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/DY.gif',\n                },\n                flightNumber: '822',\n                aircraftModel: '73H',\n                arrival: {\n                  time: '2021-06-17T19:00:00',\n                  airportCode: 'ARN',\n                  airportName: 'Stockholm Arlanda',\n                  airportCountryCode: 'SE',\n                  terminal: '5',\n                  flightTaxiOption: false,\n                },\n                departure: {\n                  time: '2021-06-17T18:00:00',\n                  airportCode: 'OSL',\n                  airportName: 'Oslo',\n                  airportCountryCode: 'NO',\n                  terminal: null,\n                  flightTaxiOption: false,\n                },\n                airportChange: false,\n                layover: null,\n                shortLayover: null,\n                longLayover: false,\n                differentDay: true,\n                cabinClass: CabinClass.ECONOMY,\n                baggageAllowance: {\n                  quantity: null,\n                  weight: {\n                    value: null,\n                    unit: null,\n                  },\n                },\n              },\n            ],\n          },\n        ],\n        travelers: [\n          {\n            id: 'be341164-b5b9-48bf-bf46-f86200b2908b',\n            userId: 'd649b842-9bff-4a6e-9e52-20f69a082e85',\n            title: UserTitle.MR,\n            firstName: 'John',\n            lastName: 'Doe',\n            middleName: null,\n            birthday: '1999-02-18',\n            loyaltyCardProvider: null,\n            loyaltyCardNumber: null,\n            email: 'example.user@example.com',\n            emailConfirmation: false,\n            travelerType: TravelerType.ADULT,\n            flightTickets: [\n              {\n                ticketNo: '328-1103400401',\n                segment: [\n                  {\n                    id: '31347663-e5be-4d97-ace3-69ea6da944fe',\n                    duration: 9900,\n                    marketingCarrier: 'DY',\n                    marketingAirline: {\n                      code: 'DY',\n                      name: 'Norwegian',\n                      iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/DY.gif',\n                    },\n                    operatingCarrier: 'DY',\n                    operatingAirline: {\n                      code: 'DY',\n                      name: 'Norwegian',\n                      iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/DY.gif',\n                    },\n                    flightNumber: '1977',\n                    aircraftModel: '73H',\n                    arrival: {\n                      time: '2021-06-17T13:55:00',\n                      airportCode: 'OSL',\n                      airportName: 'Oslo',\n                      airportCountryCode: 'NO',\n                      terminal: null,\n                      flightTaxiOption: false,\n                    },\n                    departure: {\n                      time: '2021-06-17T11:10:00',\n                      airportCode: 'BEG',\n                      airportName: 'Belgrade',\n                      airportCountryCode: 'RS',\n                      terminal: '2',\n                      flightTaxiOption: false,\n                    },\n                    airportChange: false,\n                    layover: 14700,\n                    shortLayover: null,\n                    longLayover: false,\n                    differentDay: true,\n                    cabinClass: CabinClass.ECONOMY,\n                    baggageAllowance: {\n                      quantity: null,\n                      weight: {\n                        value: null,\n                        unit: null,\n                      },\n                    },\n                  },\n                  {\n                    id: 'e018812e-0e85-4c57-b4c4-f2af7abd8610',\n                    duration: 3600,\n                    marketingCarrier: 'DY',\n                    marketingAirline: {\n                      code: 'DY',\n                      name: 'Norwegian',\n                      iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/DY.gif',\n                    },\n                    operatingCarrier: 'DY',\n                    operatingAirline: {\n                      code: 'DY',\n                      name: 'Norwegian',\n                      iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/DY.gif',\n                    },\n                    flightNumber: '822',\n                    aircraftModel: '73H',\n                    arrival: {\n                      time: '2021-06-17T19:00:00',\n                      airportCode: 'ARN',\n                      airportName: 'Stockholm Arlanda',\n                      airportCountryCode: 'SE',\n                      terminal: '5',\n                      flightTaxiOption: false,\n                    },\n                    departure: {\n                      time: '2021-06-17T18:00:00',\n                      airportCode: 'OSL',\n                      airportName: 'Oslo',\n                      airportCountryCode: 'NO',\n                      terminal: null,\n                      flightTaxiOption: false,\n                    },\n                    airportChange: false,\n                    layover: null,\n                    shortLayover: null,\n                    longLayover: false,\n                    differentDay: true,\n                    cabinClass: CabinClass.ECONOMY,\n                    baggageAllowance: {\n                      quantity: null,\n                      weight: {\n                        value: null,\n                        unit: null,\n                      },\n                    },\n                  },\n                ],\n              },\n            ],\n            costCenterId: null,\n            addons: null,\n            exchanged: false,\n            travelerReferenceFields: {},\n          },\n        ],\n        bookingReference: {\n          reference: 'OF9ABX',\n          source: 'Amadeus',\n        },\n        status: 'COMPLETED',\n        action: BookingAction.NONE,\n        paymentStatus: BookingPaymentStatus.COMPLETED,\n        hasExchange: false,\n        exchanged: false,\n      },\n      {\n        id: '6e49f7d7-e9c6-4488-81dc-e922f1031f16',\n        totalPrice: 133.7,\n        currency: 'EUR',\n        co2EmissionInGrams: 10200000,\n        departingFlightDeparture: '2021-06-20T10:30:00',\n        departingFlightDuration: 182100,\n        arrivingFlightDuration: 182100,\n        numberOfStops: 1,\n        flights: [\n          {\n            duration: 182100,\n            co2EmissionInGrams: 10200000,\n            segments: [\n              {\n                id: '166f60c0-fb74-4c19-a58f-43902fc74aa4',\n                duration: 6300,\n                marketingCarrier: 'LO',\n                marketingAirline: {\n                  code: 'LO',\n                  name: 'LOT - Polish Airlines',\n                  iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/LO.gif',\n                },\n                operatingCarrier: 'LO',\n                operatingAirline: {\n                  code: 'LO',\n                  name: 'LOT - Polish Airlines',\n                  iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/LO.gif',\n                },\n                flightNumber: '454',\n                aircraftModel: 'E75',\n                arrival: {\n                  time: '2021-06-20T12:15:00',\n                  airportCode: 'WAW',\n                  airportName: 'Warsaw',\n                  airportCountryCode: 'PL',\n                  terminal: null,\n                  flightTaxiOption: false,\n                },\n                departure: {\n                  time: '2021-06-20T10:30:00',\n                  airportCode: 'ARN',\n                  airportName: 'Stockholm Arlanda',\n                  airportCountryCode: 'SE',\n                  terminal: '5',\n                  flightTaxiOption: false,\n                },\n                airportChange: false,\n                layover: 84900,\n                shortLayover: null,\n                longLayover: false,\n                differentDay: true,\n                cabinClass: CabinClass.ECONOMY,\n                baggageAllowance: {\n                  quantity: null,\n                  weight: {\n                    value: null,\n                    unit: null,\n                  },\n                },\n              },\n              {\n                id: 'e4580d30-3e1c-4bf3-be4d-047146bd9ffa',\n                duration: 6000,\n                marketingCarrier: 'LO',\n                marketingAirline: {\n                  code: 'LO',\n                  name: 'LOT - Polish Airlines',\n                  iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/LO.gif',\n                },\n                operatingCarrier: 'LO',\n                operatingAirline: {\n                  code: 'LO',\n                  name: 'LOT - Polish Airlines',\n                  iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/LO.gif',\n                },\n                flightNumber: '571',\n                aircraftModel: 'E75',\n                arrival: {\n                  time: '2021-06-21T13:30:00',\n                  airportCode: 'BEG',\n                  airportName: 'Belgrade',\n                  airportCountryCode: 'RS',\n                  terminal: '2',\n                  flightTaxiOption: false,\n                },\n                departure: {\n                  time: '2021-06-21T11:50:00',\n                  airportCode: 'WAW',\n                  airportName: 'Warsaw',\n                  airportCountryCode: 'PL',\n                  terminal: null,\n                  flightTaxiOption: false,\n                },\n                airportChange: false,\n                layover: null,\n                shortLayover: null,\n                longLayover: false,\n                differentDay: true,\n                cabinClass: CabinClass.ECONOMY,\n                baggageAllowance: {\n                  quantity: null,\n                  weight: {\n                    value: null,\n                    unit: null,\n                  },\n                },\n              },\n            ],\n          },\n        ],\n        travelers: [\n          {\n            id: 'ea953607-ccef-40e5-9d54-81ce0e0e74b9',\n            userId: 'd649b842-9bff-4a6e-9e52-20f69a082e85',\n            title: UserTitle.MR,\n            firstName: 'John',\n            lastName: 'Doe',\n            middleName: null,\n            birthday: '1999-02-18',\n            loyaltyCardProvider: null,\n            loyaltyCardNumber: null,\n            email: 'example.user@example.com',\n            emailConfirmation: false,\n            travelerType: TravelerType.ADULT,\n            flightTickets: [\n              {\n                ticketNo: '080-1966415096',\n                segment: [\n                  {\n                    id: '166f60c0-fb74-4c19-a58f-43902fc74aa4',\n                    duration: 6300,\n                    marketingCarrier: 'LO',\n                    marketingAirline: {\n                      code: 'LO',\n                      name: 'LOT - Polish Airlines',\n                      iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/LO.gif',\n                    },\n                    operatingCarrier: 'LO',\n                    operatingAirline: {\n                      code: 'LO',\n                      name: 'LOT - Polish Airlines',\n                      iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/LO.gif',\n                    },\n                    flightNumber: '454',\n                    aircraftModel: 'E75',\n                    arrival: {\n                      time: '2021-06-20T12:15:00',\n                      airportCode: 'WAW',\n                      airportName: 'Warsaw',\n                      airportCountryCode: 'PL',\n                      terminal: null,\n                      flightTaxiOption: false,\n                    },\n                    departure: {\n                      time: '2021-06-20T10:30:00',\n                      airportCode: 'ARN',\n                      airportName: 'Stockholm Arlanda',\n                      airportCountryCode: 'SE',\n                      terminal: '5',\n                      flightTaxiOption: false,\n                    },\n                    airportChange: false,\n                    layover: 84900,\n                    shortLayover: null,\n                    longLayover: false,\n                    differentDay: true,\n                    cabinClass: CabinClass.ECONOMY,\n                    baggageAllowance: {\n                      quantity: null,\n                      weight: {\n                        value: null,\n                        unit: null,\n                      },\n                    },\n                  },\n                  {\n                    id: 'e4580d30-3e1c-4bf3-be4d-047146bd9ffa',\n                    duration: 6000,\n                    marketingCarrier: 'LO',\n                    marketingAirline: {\n                      code: 'LO',\n                      name: 'LOT - Polish Airlines',\n                      iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/LO.gif',\n                    },\n                    operatingCarrier: 'LO',\n                    operatingAirline: {\n                      code: 'LO',\n                      name: 'LOT - Polish Airlines',\n                      iconUrl: 'https://dib-cdn-152731.c.cdn77.org/production/flights/carrierlogos/LO.gif',\n                    },\n                    flightNumber: '571',\n                    aircraftModel: 'E75',\n                    arrival: {\n                      time: '2021-06-21T13:30:00',\n                      airportCode: 'BEG',\n                      airportName: 'Belgrade',\n                      airportCountryCode: 'RS',\n                      terminal: '2',\n                      flightTaxiOption: false,\n                    },\n                    departure: {\n                      time: '2021-06-21T11:50:00',\n                      airportCode: 'WAW',\n                      airportName: 'Warsaw',\n                      airportCountryCode: 'PL',\n                      terminal: null,\n                      flightTaxiOption: false,\n                    },\n                    airportChange: false,\n                    layover: null,\n                    shortLayover: null,\n                    longLayover: false,\n                    differentDay: true,\n                    cabinClass: CabinClass.ECONOMY,\n                    baggageAllowance: {\n                      quantity: null,\n                      weight: {\n                        value: null,\n                        unit: null,\n                      },\n                    },\n                  },\n                ],\n              },\n            ],\n            costCenterId: null,\n            addons: null,\n            exchanged: false,\n            travelerReferenceFields: {},\n          },\n        ],\n        bookingReference: {\n          reference: 'OF9KYQ',\n          source: 'Amadeus',\n        },\n        status: 'COMPLETED',\n        action: BookingAction.NONE,\n        paymentStatus: BookingPaymentStatus.COMPLETED,\n        hasExchange: false,\n        exchanged: false,\n      },\n    ],\n    taxiBookings: [\n      {\n        id: '11111111-8f25-4379-b90e-6f4d273ca50f',\n        status: 'COMPLETED',\n        bookingReference: 'ASDA234',\n        type: BookingType.TAXI,\n        offerId: 'cee5df1e-8f25-4379-b90e-6f4d273ca50f',\n        bookingId: '4dc9cf10-5e70-4dcb-8707-faf30d81df03',\n        segmentId: 'e018812e-0e85-4c57-b4c4-f2af7abd8610',\n        start: {\n          datetime: '2021-09-20T06:30:00',\n          locationCode: null,\n          address: '181 32 Lidingö',\n          city: 'Herrljunga',\n          zip: '52432',\n          country: 'SE',\n          lat: 58.0770692,\n          lon: 13.0058573,\n        },\n        end: {\n          datetime: '2021-09-20T06:30:00',\n          locationCode: 'ARN',\n          address: 'Arlanda flygplats',\n          city: 'STOCKHOLM-ARLANDA',\n          zip: '19060',\n          country: 'SE',\n          lat: 59.6478722222222,\n          lon: 17.9259027777778,\n        },\n        taxiType: 'FLIGHT',\n        transferType: 'PRIVATE',\n        serviceProvider: {\n          name: 'Taxibokning',\n          code: 'TXB',\n        },\n        vehicle: {\n          category: 'ST',\n          description: 'Regular taxi, with Taxi Falköping',\n          seatCount: 3,\n          baggageCount: 3,\n        },\n        travelers: [{ id: '13213', firstName: 'John', lastName: 'Doe', travelerReferenceFields: {} }],\n        cancellationPolicies: [\n          {\n            // Non-refundable within 60 minutes of pick-up time\n            costAmount: 64.32,\n            refundAmount: 0,\n            refundAmountPerNight: null,\n            currency: 'EUR',\n            fromDate: '2021-09-20T05:30:00',\n            toDate: '2021-09-20T06:30:00',\n            used: false,\n            fullRefundable: false,\n            cancellationFeeDetails: {\n              amount: null,\n              currency: 'EUR',\n              percent: 100,\n              numberOfNights: null,\n            },\n          },\n          {\n            // Partially refundable up to 60 minutes of pick-up time\n            costAmount: 18.53,\n            refundAmount: 45.89,\n            refundAmountPerNight: null,\n            currency: 'EUR',\n            fromDate: '2021-09-20T04:30:00',\n            toDate: '2021-09-20T05:30:00',\n            used: false,\n            fullRefundable: false,\n            cancellationFeeDetails: {\n              amount: null,\n              currency: 'EUR',\n              percent: 20,\n              numberOfNights: null,\n            },\n          },\n          {\n            // Free cancellation up to 120 minutes prior to ride\n            costAmount: 0,\n            refundAmount: 64.32,\n            refundAmountPerNight: null,\n            currency: 'EUR',\n            fromDate: '2020-09-20T06:30:00',\n            toDate: '2021-09-20T04:30:00',\n            used: false,\n            fullRefundable: true,\n            cancellationFeeDetails: {\n              amount: null,\n              currency: 'EUR',\n              percent: 0,\n              numberOfNights: null,\n            },\n          },\n          {\n            // Non-refundable within 60 minutes of pick-up time\n            costAmount: 64.32,\n            refundAmount: 0,\n            refundAmountPerNight: null,\n            currency: 'EUR',\n            fromDate: '2021-09-20T05:30:00',\n            toDate: '2021-09-20T06:30:00',\n            used: false,\n            fullRefundable: false,\n            cancellationFeeDetails: {\n              amount: 64.32,\n              currency: 'EUR',\n              percent: 0,\n              numberOfNights: null,\n            },\n          },\n          {\n            // Partially refundable up to 60 minutes of pick-up time\n            costAmount: 18.53,\n            refundAmount: 45.89,\n            refundAmountPerNight: null,\n            currency: 'EUR',\n            fromDate: '2021-09-20T04:30:00',\n            toDate: '2021-09-20T05:30:00',\n            used: false,\n            fullRefundable: false,\n            cancellationFeeDetails: {\n              amount: 18.53,\n              currency: 'EUR',\n              percent: null,\n              numberOfNights: null,\n            },\n          },\n          {\n            // Free cancellation up to 120 minutes prior to ride\n            costAmount: 0,\n            refundAmount: 64.32,\n            refundAmountPerNight: null,\n            currency: 'EUR',\n            fromDate: '2020-09-20T06:30:00',\n            toDate: '2021-09-20T04:30:00',\n            used: false,\n            fullRefundable: true,\n            cancellationFeeDetails: {\n              amount: 0,\n              currency: 'EUR',\n              percent: null,\n              numberOfNights: null,\n            },\n          },\n        ],\n        price: {\n          amount: 1725,\n          currency: 'SEK',\n        },\n        items: [],\n      },\n      {\n        id: '22222222-8f25-4379-b90e-6f4d273ca50f',\n        status: 'COMPLETED',\n        bookingReference: 'KHAG87',\n        type: BookingType.TAXI,\n        offerId: '00bc0788-71b5-4774-a124-666d27350f5e',\n        bookingId: '6e49f7d7-e9c6-4488-81dc-e922f1031f16',\n        segmentId: '166f60c0-fb74-4c19-a58f-43902fc74aa4',\n        start: {\n          datetime: '2021-09-20T11:35:00',\n          locationCode: 'MMX',\n          address: null,\n          city: 'SVEDALA',\n          zip: '23391',\n          country: 'SE',\n          lat: 55.5404,\n          lon: 13.3642,\n        },\n        end: {\n          datetime: '2021-09-20T11:35:00',\n          locationCode: null,\n          address: 'Tornfalksgatan Malmö',\n          city: 'Malmö',\n          zip: 'undefined',\n          country: 'SE',\n          lat: 55.5676661,\n          lon: 13.0121061,\n        },\n        taxiType: 'FLIGHT',\n        transferType: 'PRIVATE',\n        serviceProvider: {\n          name: 'Taxibokning',\n          code: 'TXB',\n        },\n        vehicle: {\n          category: 'ST',\n          description: 'Regular taxi, with Vellinge Taxi',\n          seatCount: 3,\n          baggageCount: 3,\n        },\n        travelers: [{ id: '13213', firstName: 'John', lastName: 'Doe', travelerReferenceFields: {} }],\n        cancellationPolicies: [\n          {\n            // Non-refundable within 60 minutes of pick-up time\n            costAmount: 64.32,\n            refundAmount: 0,\n            refundAmountPerNight: null,\n            currency: 'EUR',\n            fromDate: '2021-09-20T10:35:00',\n            toDate: '2021-09-20T11:35:00',\n            used: false,\n            fullRefundable: false,\n            cancellationFeeDetails: {\n              amount: null,\n              currency: 'EUR',\n              percent: 100,\n              numberOfNights: null,\n            },\n          },\n          {\n            // Partially refundable up to 60 minutes of pick-up time\n            costAmount: 18.53,\n            refundAmount: 45.89,\n            refundAmountPerNight: null,\n            currency: 'EUR',\n            fromDate: '2021-09-20T09:35:00',\n            toDate: '2021-09-20T10:35:00',\n            used: false,\n            fullRefundable: false,\n            cancellationFeeDetails: {\n              amount: null,\n              currency: 'EUR',\n              percent: 20,\n              numberOfNights: null,\n            },\n          },\n          {\n            // Free cancellation up to 120 minutes prior to ride\n            costAmount: 0,\n            refundAmount: 64.32,\n            refundAmountPerNight: null,\n            currency: 'EUR',\n            fromDate: '2020-09-20T11:35:00',\n            toDate: '2021-09-20T09:35:00',\n            used: false,\n            fullRefundable: true,\n            cancellationFeeDetails: {\n              amount: null,\n              currency: 'EUR',\n              percent: 0,\n              numberOfNights: null,\n            },\n          },\n          {\n            // Non-refundable within 60 minutes of pick-up time\n            costAmount: 64.32,\n            refundAmount: 0,\n            refundAmountPerNight: null,\n            currency: 'EUR',\n            fromDate: '2021-09-20T10:35:00',\n            toDate: '2021-09-20T11:35:00',\n            used: false,\n            fullRefundable: false,\n            cancellationFeeDetails: {\n              amount: 64.32,\n              currency: 'EUR',\n              percent: 0,\n              numberOfNights: null,\n            },\n          },\n          {\n            // Partially refundable up to 60 minutes of pick-up time\n            costAmount: 18.53,\n            refundAmount: 45.89,\n            refundAmountPerNight: null,\n            currency: 'EUR',\n            fromDate: '2021-09-20T09:35:00',\n            toDate: '2021-09-20T10:35:00',\n            used: false,\n            fullRefundable: false,\n            cancellationFeeDetails: {\n              amount: 18.53,\n              currency: 'EUR',\n              percent: null,\n              numberOfNights: null,\n            },\n          },\n          {\n            // Free cancellation up to 120 minutes prior to ride\n            costAmount: 0,\n            refundAmount: 64.32,\n            refundAmountPerNight: null,\n            currency: 'EUR',\n            fromDate: '2020-09-20T11:35:00',\n            toDate: '2021-09-20T09:35:00',\n            used: false,\n            fullRefundable: true,\n            cancellationFeeDetails: {\n              amount: 0,\n              currency: 'EUR',\n              percent: null,\n              numberOfNights: null,\n            },\n          },\n        ],\n        price: {\n          amount: 598,\n          currency: 'SEK',\n        },\n        items: [],\n      },\n    ],\n    genericProducts: [],\n    trainBookings: [\n      {\n        id: '98cae036-10c7-4420-95f0-2c0aad571b2a',\n        preOrderId: '60b360f54b8882280e6f055e',\n        status: BookingStatusV2.COMPLETION,\n        bookingReference: 'QVF0533H',\n        booker: {\n          firstName: 'John',\n          lastName: 'Doe',\n          email: 'example.user@example.com',\n          phoneNumber: '+38160111222',\n        },\n        rebookable: true,\n        refundable: false,\n        dynamicCancellationPolicy: true,\n        cancelable: true,\n        travellers: [\n          {\n            id: '52013bdd-3db2-4117-9273-4938e575db01',\n            travellerNumber: 1,\n            firstName: 'John',\n            lastName: 'Doe',\n            email: 'example.user@example.com',\n            phoneNumber: '+38160111222',\n            optionSelections: [],\n            seatingSelections: [\n              {\n                journeyId: 965464581,\n                itineraryId: 1,\n                segmentId: '1',\n                description: 'Carriage: 11, Seat: 116, Window, Open coach',\n                carriage: '11',\n                seat: '116',\n                placementOrientation: 'Window',\n                placementCharacteristics: 'Open coach',\n              },\n            ],\n            addons: [],\n            userId: 'd649b842-9bff-4a6e-9e52-20f69a082e85',\n            travelerReferenceFields: {},\n          },\n        ],\n        journeys: [\n          {\n            journeyAdviceId: 965464581,\n            direction: JourneyDirection.IN,\n            itineraries: [\n              {\n                itineraryId: 1,\n                priceGroupType: ItineraryPriceGroup.SEAT,\n                segments: [\n                  {\n                    segmentId: '1',\n                    uniqueSegmentId: 'ec9636cd-a8fc-4cef-9d0a-ae9af9ef0640',\n                    transportInformation: {\n                      known: [\n                        {\n                          code: '69',\n                          description: 'Restaurant',\n                          category: 'FOOD',\n                        },\n                      ],\n                      unknown: [\n                        {\n                          code: '4',\n                          description: 'Standard class only',\n                        },\n                      ],\n                    },\n                    departureDateTime: '2021-07-14T16:11:00',\n                    departureLocationName: 'Malmö C',\n                    departureLocationNameLong: 'Malmö Centralstation',\n                    departureTaxiOption: true,\n                    departureStationCode: 'MLMC',\n                    arrivalDateTime: '2021-07-14T21:12:00',\n                    arrivalLocationName: 'Sthlm Central',\n                    arrivalLocationNameLong: 'Stockholm Centralstation',\n                    arrivalTaxiOption: true,\n                    arrivalStationCode: 'STH',\n                    bookingClass: 'SECOND',\n                    travelMethod: 'Train',\n                    productCode: 'Other',\n                    transportId: '3942',\n                    segmentProducer: 'Snälltåget',\n                    serviceBrandName: ' ',\n                    duration: 301,\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n        subTotalPrice: {\n          currency: 'EUR',\n          amount: 103.72,\n        },\n        bookingMode: BookingMode.ONLINE,\n        co2EmissionInGrams: null,\n        integrationFee: null,\n      },\n      {\n        id: '96edd4e3-acee-4f01-925c-14a4cbd7ae01',\n        preOrderId: '60b360fb0db0415701cc27fc',\n        status: BookingStatusV2.COMPLETION,\n        bookingReference: 'QVF0532A',\n        booker: {\n          firstName: 'John',\n          lastName: 'Doe',\n          email: 'example.user@example.com',\n          phoneNumber: '+38160111222',\n        },\n        rebookable: true,\n        refundable: false,\n        dynamicCancellationPolicy: true,\n        cancelable: true,\n        travellers: [\n          {\n            id: 'cc7b9c35-4b12-4d8a-b8af-c7c21f401d7a',\n            travellerNumber: 1,\n            firstName: 'John',\n            lastName: 'Doe',\n            email: 'example.user@example.com',\n            phoneNumber: '+38160111222',\n            optionSelections: [],\n            seatingSelections: [\n              {\n                journeyId: 1902639939,\n                itineraryId: 1,\n                segmentId: '1',\n                description: 'Carriage: 11, Seat: 48, Window, Open coach',\n                carriage: '11',\n                seat: '48',\n                placementOrientation: 'Window',\n                placementCharacteristics: 'Open coach',\n              },\n            ],\n            addons: [],\n            userId: 'd649b842-9bff-4a6e-9e52-20f69a082e85',\n            travelerReferenceFields: {},\n          },\n        ],\n        journeys: [\n          {\n            journeyAdviceId: 1902639939,\n            direction: JourneyDirection.OUT,\n            itineraries: [\n              {\n                itineraryId: 1,\n                priceGroupType: ItineraryPriceGroup.SEAT,\n                segments: [\n                  {\n                    segmentId: '1',\n                    uniqueSegmentId: 'ec9636cd-a8fc-4cef-9d0a-ae9af9ef0640',\n                    transportInformation: {\n                      known: [\n                        {\n                          code: '69',\n                          description: 'Restaurant',\n                          category: 'FOOD',\n                        },\n                      ],\n                      unknown: [\n                        {\n                          code: '4',\n                          description: 'Standard class only',\n                        },\n                      ],\n                    },\n                    departureDateTime: '2021-07-10T16:22:00',\n                    departureLocationName: 'Sthlm Central',\n                    departureLocationNameLong: 'Stockholm Centralstation',\n                    departureTaxiOption: true,\n                    departureStationCode: 'STH',\n                    arrivalDateTime: '2021-07-10T21:21:00',\n                    arrivalLocationName: 'Malmö C',\n                    arrivalLocationNameLong: 'Malmö Centralstation',\n                    arrivalTaxiOption: true,\n                    arrivalStationCode: 'MLMC',\n                    bookingClass: 'SECOND',\n                    travelMethod: 'Train',\n                    productCode: 'Other',\n                    transportId: '3943',\n                    segmentProducer: 'Snälltåget',\n                    serviceBrandName: ' ',\n                    duration: 299,\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n        subTotalPrice: {\n          currency: 'EUR',\n          amount: 103.72,\n        },\n        bookingMode: BookingMode.ONLINE,\n        co2EmissionInGrams: null,\n        integrationFee: null,\n      },\n    ],\n    outOfPolicyChecker: {\n      customerNeedsApproval: false,\n      hotelPolicyCheckers: [],\n      flightPolicyCheckers: [],\n      trainPolicyCheckers: [],\n      outOfPolicy: false,\n    },\n    createdById: 'd649b842-9bff-4a6e-9e52-20f69a082e85',\n    createdByType: 'CUSTOMER',\n    createdAt: '2021-05-30T00:00:00',\n    yourReference: null,\n    orderReferenceFields: {\n      bookerEmail: '',\n      bookerEmployeeNumber: '',\n      bookerName: '',\n      projectId: '',\n      projects: '',\n      purposeOfTrip: '',\n      purposeOfTripId: '',\n      yourReference: '',\n    },\n  },\n};\n","import { getMockVendorRequests } from './mock-vendors';\nimport { getMockVendorsPaymentProviderRequests } from './mock-vendors-payment-providers';\nimport { getMockBillingRequestRequests } from './mock-billing-requests';\nimport { getMockProductRequests } from './mock-products';\nimport { getMockVatCategoryRequests } from './mock-vat-categories';\nimport { getMockCountryRequests } from './mock-countries';\nimport { getMockFeatureRequests } from './mock-features';\nimport { getMockUserRequests } from './mock-users';\nimport { getMockCompanyRequests } from './mock-companies';\nimport { getMockAuthRequests } from './mock-auth';\nimport { getMockConfigRequests } from './mock-config';\nimport { getMockCompanyUserRequests } from './mock-company-users';\nimport { getMockSystemMessageRequests } from './mock-system-messages';\nimport { getMockBookingRequests } from './mock-bookings';\nimport { getMockCartRequests } from './mock-carts';\nimport { getMockPNRRequests } from './mock-pnr';\nimport { getMockCostCentersRequests } from './mock-cost-centers';\nimport { getMockPaymentsRequests } from './mock-payments';\nimport { getMockEmployeesRequests } from './mock-employees';\nimport { getMockCheckoutRequests } from './mock-checkout';\n\nexport const mockedModules = [\n  getMockVendorRequests,\n  getMockVendorsPaymentProviderRequests,\n  getMockBillingRequestRequests,\n  getMockProductRequests,\n  getMockVatCategoryRequests,\n  getMockCountryRequests,\n  getMockFeatureRequests,\n  getMockUserRequests,\n  getMockCompanyRequests,\n  getMockCompanyUserRequests,\n  getMockSystemMessageRequests,\n  getMockBookingRequests,\n  getMockCartRequests,\n  getMockAuthRequests,\n  getMockConfigRequests,\n  getMockPNRRequests,\n  getMockCostCentersRequests,\n  getMockPaymentsRequests,\n  getMockEmployeesRequests,\n  getMockCheckoutRequests,\n];\n","import * as Chance from 'chance';\nimport { environment } from '../../src/environments/environment';\nimport { User, UserType } from '../../src/app/models/user.model';\nimport { ForgotPasswordResponse, ValidatePasswordTokenResponse } from '../../src/app/reducers/common.interfaces';\nimport { MockRequest } from '../mock-request.model';\n\nconst chance = Chance.Chance();\n\nconst fakeToken = [\n  'eyJhbGciOiJIUzUxMiJ9.eyJST0xFX0FHRU5UIjp0cnVlLCJ0bWNjX2lkIjoiVE1DX0',\n  'NPTlNPTEUiLCJleHAiOjE2MTY1OTg2NDEsInVzZXJJZCI6ImIxZjZhYjhhLTQ1NGQtND',\n  'JjYS04MjA5LWNmYjNkZGRkN2M3OCIsImlhdCI6MTYxNDE3OTQ0MSwidXNlcm5hbWUiOiJh',\n  'ZG1pbkBkaWJob3RlbC5zZSJ9.0LN4i5aAnBfFubiPlgxIP1CUMwOHgBAseAxNui7YTEWQ',\n  'IAJunvXrZXsBMldE5sHZ9542I972UN6_nMseHt3iUA',\n].join('');\n\nfunction getMockUser(): User {\n  return {\n    id: chance.guid(),\n    firstName: chance.first(),\n    lastName: chance.last(),\n    phone: chance.phone(),\n    password: null,\n    type: UserType.SUPER_ADMIN,\n    username: chance.email({ domain: 'example.com' }).toLowerCase(),\n    disabled: chance.bool({ likelihood: 20 }),\n  };\n}\n\nconst mockAuth: MockRequest[] = [\n  {\n    method: 'POST',\n    url: '/api/tmcc/authenticate',\n    getResponse: (params, body): User => {\n      return {\n        ...getMockUser(),\n        token: fakeToken,\n        username: body.username,\n      };\n    },\n  },\n  {\n    method: 'POST',\n    url: '/api/tmcc/users/forgot-password',\n    getResponse: (params, body): ForgotPasswordResponse => {\n      return body;\n    },\n  },\n  {\n    method: 'GET',\n    url: '/api/tmcc/users/activate-new-password/{token}',\n    getResponse: (): ValidatePasswordTokenResponse => {\n      return { valid: true };\n    },\n  },\n  {\n    method: 'POST',\n    url: '/api/tmcc/users/activate-new-password',\n    getResponse: (params, body): User => {\n      return body;\n    },\n  },\n  {\n    method: 'GET',\n    url: '/api/tmcc/users/set-new-password/{token}',\n    getResponse: (): ValidatePasswordTokenResponse => {\n      return { valid: true };\n    },\n  },\n  {\n    method: 'POST',\n    url: '/api/tmcc/users/set-new-password',\n    getResponse: (params, body): User => {\n      return body;\n    },\n  },\n];\n\nexport function getMockAuthRequests(): MockRequest[] {\n  return environment.mock.auth ? mockAuth : [];\n}\n","import * as Chance from 'chance';\nimport { environment } from '../../src/environments/environment';\nimport { MockRequest } from '../mock-request.model';\nimport { BillingRequest, BillingRequestStatus } from '../../src/app/models/billing-request.model';\nimport { createFullApiResponse } from '../../src/app/global/interfaces/response.interface';\n\nconst chance = Chance.Chance();\n\nfunction getMockBillingRequests(count = 10): BillingRequest[] {\n  return [...Array.from({ length: count }).keys()].map(() => getMockBillingRequest());\n}\n\nfunction getMockBillingRequest(): BillingRequest {\n  return {\n    id: chance.guid(),\n    active: true,\n    billingProfileRequestStatus: BillingRequestStatus.PENDING,\n    corporationName: chance.company(),\n    hasCorporateRate: false,\n    stripeCustomerId: chance.guid(),\n  };\n}\n\nconst mockBillingRequests: MockRequest[] = [\n  {\n    method: 'GET',\n    url: '/api/tmcc/corporations/billing-profiles/requests?page={page}&size={size}',\n    params: { page: '([0-9]+)', size: '([0-9]+)' },\n    getResponse: ({ page, size }) => {\n      return createFullApiResponse(getMockBillingRequests(+size), +page, +size, 300);\n    },\n  },\n  {\n    method: 'PUT',\n    url: '/api/tmcc/corporations/billing-profiles/requests/{id}',\n    getResponse: ({ id }, body) => ({ ...body, id }),\n  },\n];\n\nexport function getMockBillingRequestRequests(): MockRequest[] {\n  return environment.mock.billingRequests ? mockBillingRequests : [];\n}\n","import * as Chance from 'chance';\nimport { environment } from '../../src/environments/environment';\nimport { MockRequest } from '../mock-request.model';\nimport { Booking, BookingReferenceTypes } from '../../src/app/models/booking.model';\nimport { createFullApiResponse } from '../../src/app/global/interfaces/response.interface';\nimport { formatDibDate } from '../../src/app/utils/pipes/date.pipe';\nimport { BookingListItem } from '../../src/app/models/booking-list-item.model';\nimport { PaginatedResponse } from '../../src/app/models/pagination.model';\n\nfunction getMockBookingListItems(count = 10): BookingListItem[] {\n  return [...Array.from({ length: count }).keys()].map(() => getMockBookingListItem());\n}\n\nfunction getMockBookingListItem(id: string = new Chance().guid()): BookingListItem {\n  // Set the seed value, so we can have consistent values based on the id\n  const chance = new Chance(id);\n  const currentYear = new Date().getFullYear();\n\n  return {\n    cartId: id,\n    tripId: chance.string({ length: 8, casing: 'upper', numeric: true, alpha: true }),\n    status: chance.pickone(['COMPLETED']),\n    companyName: chance.company(),\n    travelers: [chance.name(), chance.name(), chance.name()],\n    bookerName: chance.name(),\n    startDate: formatDibDate(chance.date({ year: currentYear - chance.natural({ min: 1, max: 4 }) }), 'server'),\n    endDate: formatDibDate(chance.date({ year: currentYear }), 'server'),\n    price: null,\n  };\n}\n\nfunction getMockBookingItem(id: string = new Chance().guid()): Booking {\n  // Set the seed value, so we can have consistent values based on the id\n  const chance = new Chance(id);\n  const currentYear = new Date().getFullYear();\n\n  return {\n    cartId: id,\n    tripId: chance.string({ length: 8, casing: 'upper', numeric: true, alpha: true }),\n    tripName: chance.company(),\n    status: chance.pickone(['COMPLETED']),\n    company: {\n      id: chance.guid(),\n      name: chance.company(),\n    },\n    travelers: [\n      {\n        id: chance.guid(),\n        name: chance.name(),\n        username: chance.email({ domain: 'example.com' }).toLowerCase(),\n      },\n      {\n        id: chance.guid(),\n        name: chance.name(),\n        username: chance.email({ domain: 'example.com' }).toLowerCase(),\n      },\n      {\n        id: chance.guid(),\n        name: chance.name(),\n        username: chance.email({ domain: 'example.com' }).toLowerCase(),\n      },\n    ],\n    booker: {\n      id: chance.guid(),\n      name: chance.name(),\n      username: chance.email({ domain: 'example.com' }).toLowerCase(),\n    },\n    productTypes: Object.values(BookingReferenceTypes),\n    numberOfItems: 4,\n    startDate: formatDibDate(chance.date({ year: currentYear - chance.natural({ min: 1, max: 4 }) }), 'server'),\n    endDate: formatDibDate(chance.date({ year: currentYear }), 'server'),\n    agentNote: 'Some agent note!!',\n  };\n}\n\nconst mockBookings: MockRequest[] = [\n  {\n    method: 'GET',\n    url: '/api/tmcc/bookings?page={page}&size={size}',\n    params: { page: '([0-9]+)', size: '([0-9]+)' },\n    getResponse: ({ page, size }): PaginatedResponse<BookingListItem> => {\n      return createFullApiResponse<BookingListItem>(getMockBookingListItems(+size), +page, +size, 120);\n    },\n  },\n  {\n    method: 'POST',\n    url: '/api/tmcc/bookings',\n    getResponse: (params, body): BookingListItem => ({ ...body, id: new Chance().guid() }),\n  },\n  {\n    method: 'GET',\n    url: '/api/tmcc/bookings/{id}',\n    getResponse: ({ id }): Booking => ({ ...getMockBookingItem(id) }),\n  },\n  {\n    method: 'PATCH',\n    url: '/api/tmcc/bookings/update-agent-note/{id}',\n    getResponse: ({ id }, body): Booking => ({ ...body, id }),\n  },\n  {\n    method: 'GET',\n    url: '/api/tmcc/bookings/reference-types',\n    getResponse: (): string[] => Object.values(BookingReferenceTypes),\n  },\n];\n\nexport function getMockBookingRequests(): MockRequest[] {\n  return environment.mock.bookings ? mockBookings : [];\n}\n","import * as Chance from 'chance';\nimport { environment } from '../../src/environments/environment';\nimport { MockRequest } from '../mock-request.model';\nimport { Cart } from '../../src/app/models/cart.model';\nimport { mockCartData } from './data/mock-cart-data';\n\nfunction getMockCart(id: string = new Chance().guid()): Cart {\n  // Set the seed value, so we can have consistent values based on the id\n  const chance = new Chance(id);\n\n  return { ...mockCartData, id };\n}\n\nconst mockCarts: MockRequest[] = [\n  {\n    method: 'GET',\n    url: '/api/tmcc/carts/{id}',\n    getResponse: ({ id }): Cart => ({ ...getMockCart(id) }),\n  },\n];\n\nexport function getMockCartRequests(): MockRequest[] {\n  return environment.mock.carts ? mockCarts : [];\n}\n","import { environment } from '../../src/environments/environment';\nimport { MockRequest } from '../mock-request.model';\nimport { BookingChannelsResponse, CheckoutOptionsResponse } from '../../src/app/models/checkout-options.model';\nimport { PaymentType } from '../../src/app/models/payment.model';\n\nconst mockCheckout: MockRequest[] = [\n  {\n    method: 'GET',\n    url: `${environment.api.ams}/api/reference-fields/{companyId}/checkout-options`,\n    getResponse: (): CheckoutOptionsResponse => {\n      return {\n        paymentOptions: [\n          { name: PaymentType.LODGE_CARD, selected: true },\n          { name: PaymentType.BILLING_PROFILE, selected: true },\n          { name: PaymentType.CREDIT_CARD, selected: true },\n        ],\n        project: {\n          mandatory: true,\n          label: 'Custom Project Label',\n          items: [\n            {\n              description: 'Project #1 description',\n              id: '9bcbfb33-5d4f-4cd6-8903-95bd2a50d202',\n              name: 'Project #1',\n              type: 'projects',\n            },\n            {\n              description: 'Project #2 description',\n              id: '51e62ac0-fb5a-41ff-8a1b-5c98c468754a',\n              name: 'Project #2',\n              type: 'projects',\n            },\n          ],\n        },\n        purposeOfTrip: {\n          mandatory: true,\n          label: null,\n          items: [\n            {\n              description: 'Purpose of trip description',\n              id: '9bcbfb33-5d4f-4cd6-8903-95bd2a50d202',\n              name: 'Purpose of trip',\n              type: 'purposeOfTrip',\n            },\n            {\n              description: 'Purpose of trip #2 description',\n              id: '51e62ac0-fb5a-41ff-8a1b-5c98c468754a',\n              name: 'Purpose of trip #2',\n              type: 'purposeOfTrip',\n            },\n          ],\n        },\n        yourReference: {\n          mandatory: true,\n          label: null,\n        },\n      };\n    },\n  },\n  {\n    method: 'GET',\n    url: `${environment.api.ams}/api/information-fields/get-booking-channels`,\n    getResponse: (): BookingChannelsResponse => {\n      return ['Online', 'Offline - working hours', 'Offline - non working hours'];\n    },\n  },\n];\n\nexport function getMockCheckoutRequests(): MockRequest[] {\n  return environment.mock.checkout ? mockCheckout : [];\n}\n","import * as Chance from 'chance';\nimport { environment } from '../../src/environments/environment';\nimport { MockRequest } from '../mock-request.model';\nimport { Company, CompanyStatus, SubscriptionStatus } from '../../src/app/models/company.model';\nimport { createFullApiResponse, createSuccessResponse } from '../../src/app/global/interfaces/response.interface';\nimport { formatDibDate } from '../../src/app/utils/pipes/date.pipe';\n\nfunction getMockCompanies(count = 10): Company[] {\n  return [...Array.from({ length: count }).keys()].map(() => getMockCompany());\n}\n\nfunction getMockCompany(id: string = new Chance().guid()): Company {\n  // Set the seed value, so we can have consistent values based on the id\n  const chance = new Chance(id);\n  return {\n    id,\n    corporationName: chance.company(),\n    registrationNumber: chance.string({ length: 8, casing: 'upper', alpha: true, numeric: true }),\n    // Use last year as creation date for all companies\n    activatedAt: formatDibDate(chance.date({ year: new Date().getFullYear() - 1 }), 'server'),\n    agentNote: null,\n    status: chance.pickone([CompanyStatus.NONE, CompanyStatus.AT_RISK, CompanyStatus.VIP]),\n    subscriptionStatus: chance.pickone([\n      SubscriptionStatus.ACTIVE,\n      SubscriptionStatus.ACTIVE,\n      SubscriptionStatus.DISABLED,\n    ]),\n  };\n}\n\nconst mockCompanies: MockRequest[] = [\n  {\n    method: 'GET',\n    url: '/api/tmcc/companies?page={page}&size={size}',\n    params: { page: '([0-9]+)', size: '([0-9]+)' },\n    getResponse: ({ page, size }) => {\n      return createFullApiResponse(getMockCompanies(+size), +page, +size, 120);\n    },\n  },\n  {\n    method: 'POST',\n    url: '/api/tmcc/companies',\n    getResponse: (params, body) => ({\n      ...body,\n      id: new Chance().guid(),\n      activatedAt: formatDibDate(new Date().toISOString(), 'server'),\n    }),\n  },\n  {\n    method: 'GET',\n    url: '/api/tmcc/companies/{id}',\n    getResponse: ({ id }) => ({ ...getMockCompany(id) }),\n  },\n  {\n    method: 'PUT',\n    url: '/api/tmcc/companies/{id}',\n    getResponse: ({ id }, body) => ({ id, ...body }),\n  },\n  {\n    method: 'DELETE',\n    url: '/api/tmcc/companies/{any}',\n    getResponse: () => createSuccessResponse,\n  },\n  {\n    method: 'PATCH',\n    url: '/api/tmcc/companies/{id}/{action}',\n    getResponse: ({ id }) => ({ ...getMockCompany(id) }),\n  },\n];\n\nexport function getMockCompanyRequests(): MockRequest[] {\n  return environment.mock.companies ? mockCompanies : [];\n}\n","import * as Chance from 'chance';\nimport { environment } from '../../src/environments/environment';\nimport { MockRequest } from '../mock-request.model';\nimport {\n  CompanyUser,\n  CompanyUserRole,\n  CompanyUserStatus,\n  Gender,\n  TravelDocumentType,\n} from '../../src/app/models/company-user.model';\nimport { createFullApiResponse } from '../../src/app/global/interfaces/response.interface';\nimport { formatDibDate } from '../../src/app/utils/pipes/date.pipe';\nimport { PaginatedResponse } from '../../src/app/models/pagination.model';\n\nfunction getMockCompanyUsers(count = 10): CompanyUser[] {\n  return [...Array.from({ length: count }).keys()].map(() => getMockCompanyUser());\n}\n\nfunction getMockCompanyUser(id: string = new Chance().guid()): CompanyUser {\n  // Set the seed value, so we can have consistent values based on the id\n  const chance = new Chance(id);\n  const currentYear = new Date().getFullYear();\n\n  return {\n    id,\n    role: chance.pickone([CompanyUserRole.ADMIN, CompanyUserRole.TRAVELLER, CompanyUserRole.TRAVELLER]),\n    active: chance.bool({ likelihood: 80 }),\n    status: chance.pickone([\n      CompanyUserStatus.ACCEPTED,\n      CompanyUserStatus.INVITED,\n      CompanyUserStatus.PENDING,\n      CompanyUserStatus.EXPIRED,\n    ]),\n    birthDate: null,\n    // Use last year as creation date for all users\n    createdDate: formatDibDate(chance.date({ year: currentYear - chance.natural({ min: 1, max: 4 }) }), 'server'),\n    username: chance.email({ domain: 'example.com' }).toLowerCase(),\n    firstname: chance.first(),\n    lastname: chance.last(),\n    phone: chance.phone(),\n    address: chance.address(),\n    city: chance.city(),\n    zipcode: chance.postal(),\n    country: chance.country(),\n    language: 'EN',\n    currency: 'EUR',\n    agentNote: null,\n    companyId: chance.guid(),\n    companyName: chance.company(),\n    travelDocuments: [\n      {\n        id: chance.guid(),\n        customerId: id,\n        idNumber: chance.string({ length: chance.natural({ min: 6, max: 14 }), numeric: true }),\n        issuingDate: formatDibDate(chance.date({ year: currentYear - chance.natural({ min: 1, max: 10 }) }), 'server'),\n        expiryDate: formatDibDate(chance.date({ year: currentYear + chance.natural({ min: 1, max: 10 }) }), 'server'),\n        firstName: chance.first(),\n        lastName: chance.last(),\n        type: chance.pickone([TravelDocumentType.ID_CARD, TravelDocumentType.PASSPORT]),\n        dateOfBirth: formatDibDate(chance.birthday({ type: 'adult' }), 'server'),\n        countryOfIssuance: chance.country(),\n        gender: chance.pickone([Gender.FEMALE, Gender.MALE]),\n        nationality: chance.country(),\n        defaultDocument: true,\n        completed: true,\n      },\n    ],\n  };\n}\n\nconst mockCompanyUsers: MockRequest[] = [\n  {\n    method: 'GET',\n    url: '/api/tmcc/company-users?page={page}&size={size}',\n    params: { page: '([0-9]+)', size: '([0-9]+)' },\n    getResponse: ({ page, size }): PaginatedResponse<CompanyUser> => {\n      return createFullApiResponse<CompanyUser>(getMockCompanyUsers(+size), +page, +size, 120);\n    },\n  },\n  {\n    method: 'POST',\n    url: '/api/tmcc/company-users',\n    getResponse: (params, body): CompanyUser => ({ ...body, id: new Chance().guid() }),\n  },\n  {\n    method: 'GET',\n    url: '/api/tmcc/company-users/{id}',\n    getResponse: ({ id }): CompanyUser => ({ ...getMockCompanyUser(id) }),\n  },\n  {\n    method: 'PUT',\n    url: '/api/tmcc/company-users/{id}',\n    getResponse: ({ id }, body): CompanyUser => ({ ...body, id }),\n  },\n];\n\nexport function getMockCompanyUserRequests(): MockRequest[] {\n  return environment.mock.companyUsers ? mockCompanyUsers : [];\n}\n","import {environment} from '../../src/environments/environment';\nimport {MockRequest} from '../mock-request.model';\n\nconst mockConfig: MockRequest[] = [\n  {\n    method: 'GET',\n    url: `${environment.api.dtms}/api/tenant/config`,\n    getResponse: () => {\n      return {\n        data: {\n          key: 'main',\n          name: 'Main tenant',\n          config: {},\n          primary: true,\n          topLevelDomainCW: \"example.com\",\n          topLevelDomainTMCC: \"admin-tool.example.com\"\n        },\n        status: {code: 200, description: null, messageCode: null, message: null},\n      };\n    },\n  },\n  {\n    method: 'GET',\n    url: `${environment.api.dtms}/api/tenants`,\n    getResponse: () => {\n      return [];\n    },\n  },\n];\n\nexport function getMockConfigRequests(): MockRequest[] {\n  return environment.mock.config ? mockConfig : [];\n}\n","import { environment } from '../../src/environments/environment';\nimport { MockRequest } from '../mock-request.model';\nimport { TravelerCostCenterResponse } from '../../src/app/models/cost-center.model';\n\nconst mockCostCenters: MockRequest[] = [\n  {\n    method: 'GET',\n    url: '/api/tmcc/cost-centers/customers-cost-centers?customerIds={customerIds}',\n    delay: 0,\n    getResponse: ({ customerIds }, body): TravelerCostCenterResponse[] => {\n      return customerIds.split(',').map((customerId, index) => ({\n        customerId,\n        companyCostCenterDTOList: [\n          {\n            id: '1b609047-3563-47df-9d4b-ed6c07a1b23d',\n            name: `CostOne-${index + 1}`,\n            description: '',\n            createdAt: '2022-07-25T11:11:28',\n            userIds: null,\n            groupIds: null,\n            deletedAt: null,\n            archived: false,\n          },\n          {\n            id: '2b609047-3563-47df-9d4b-ed6c07a1b23d',\n            name: `CostTwo-${index + 1}`,\n            description: '',\n            createdAt: '2022-07-25T11:11:28',\n            userIds: null,\n            groupIds: null,\n            deletedAt: null,\n            archived: false,\n          },\n          {\n            id: '3b609047-3563-47df-9d4b-ed6c07a1b23d',\n            name: `CostThree-${index + 1}`,\n            description: '',\n            createdAt: '2022-07-25T11:11:28',\n            userIds: null,\n            groupIds: null,\n            deletedAt: null,\n            archived: false,\n          },\n        ],\n      }));\n    },\n  },\n];\n\nexport function getMockCostCentersRequests(): MockRequest[] {\n  return environment.mock.costCenters ? mockCostCenters : [];\n}\n","import { environment } from '../../src/environments/environment';\nimport { MockRequest } from '../mock-request.model';\nimport { Country } from '../../src/app/models/country.model';\n\nconst mockCountries: MockRequest[] = [\n  {\n    method: 'GET',\n    url: '/api/details/locations/countries',\n    getResponse: (): Country[] => [\n      {\n        id: '110',\n        name: 'Italy',\n        code: 'IT',\n        defaultCurrency: 'EUR',\n      },\n      {\n        id: '167',\n        name: 'Norway',\n        code: 'NO',\n        defaultCurrency: 'NOK',\n      },\n      {\n        id: '190',\n        name: 'Serbia',\n        code: 'RS',\n        defaultCurrency: 'RSD',\n      },\n      {\n        id: '197',\n        name: 'Sweden',\n        code: 'SE',\n        defaultCurrency: 'SEK',\n      },\n    ],\n  },\n];\n\nexport function getMockCountryRequests(): MockRequest[] {\n  return environment.mock.countries ? mockCountries : [];\n}\n","import * as Chance from 'chance';\nimport { environment } from '../../src/environments/environment';\nimport { MockRequest } from '../mock-request.model';\nimport { Employee } from '../../src/app/models/employee.model';\nimport { UserTitle } from '../../src/app/models/cart-items/shared.model';\nimport { PNRValidationTraveler } from '../../src/app/models/pnr.model';\n\nfunction getMockEmployees(travellers: PNRValidationTraveler[]): Employee[] {\n  return [...Array.from({ length: travellers.length }).keys()].map((index) =>\n    // All even positioned travellers will be marked as guests\n    getMockEmployee(travellers[index], (index + 1) % 2 === 0)\n  );\n}\n\nfunction getMockEmployee(traveller: PNRValidationTraveler, isGuest = false): Employee {\n  // Set the seed value, so we can have consistent values based on the id\n  const id = new Chance().guid();\n  const chance = new Chance(id);\n\n  return {\n    id: isGuest ? null : id,\n    email: isGuest ? null : chance.email({ domain: 'example.com' }).toLowerCase(),\n    userType: 'CUSTOMER',\n    firstName: traveller.firstName || chance.first(),\n    lastName: traveller.lastName || chance.last(),\n    cellphone: chance.phone(),\n    address1: chance.address(),\n    address2: null,\n    zipCode: chance.postal(),\n    city: chance.city(),\n    country: chance.country(),\n    stripeCustomerId: null,\n    customerType: null,\n    companyName: chance.company(),\n    userTitle: traveller.title || chance.pickone([UserTitle.MR, UserTitle.MS, UserTitle.MRS]),\n    allowAgentOverride: chance.bool({ likelihood: 80 }),\n    externalId: traveller.externalId,\n  };\n}\n\nconst mockEmployees: MockRequest[] = [\n  {\n    method: 'POST',\n    url: '/api/tmcc/corporations/{companyId}/resolve-employees',\n    delay: 0,\n    getResponse: ({ companyId }, travellers: PNRValidationTraveler[]): Employee[] => {\n      return [...getMockEmployees(travellers), getMockEmployee(travellers[0]), getMockEmployee(travellers[0])];\n    },\n  },\n];\n\nexport function getMockEmployeesRequests(): MockRequest[] {\n  return environment.mock.employees ? mockEmployees : [];\n}\n","import { environment } from '../../src/environments/environment';\nimport { MockRequest } from '../mock-request.model';\nimport { createSuccessResponse } from '../../src/app/global/interfaces/response.interface';\nimport { Feature } from '../../src/app/models/feature.model';\n\nconst mockFeatures: MockRequest[] = [\n  {\n    method: 'GET',\n    url: '/api/tmcc/features',\n    getResponse: (): Feature[] => [\n      {\n        id: 'ff-accounting-integration',\n        description: 'Enables sending transactions and customers to accounting mediator service.',\n        enabled: true,\n      },\n      {\n        id: 'ff-customer-registration-campaign',\n        description: 'Enables the customer registration campaign',\n        enabled: true,\n      },\n      {\n        id: 'ff-flight-addon',\n        description: 'Enable flight addon feature',\n        enabled: true,\n      },\n      {\n        id: 'ff-train',\n        description: 'Enable train feature',\n        enabled: true,\n      },\n    ],\n  },\n  {\n    method: 'PATCH',\n    url: '/api/tmcc/features/{id}',\n    getResponse: () => createSuccessResponse,\n  },\n];\n\nexport function getMockFeatureRequests(): MockRequest[] {\n  return environment.mock.features ? mockFeatures : [];\n}\n","import { environment } from '../../src/environments/environment';\nimport { MockRequest } from '../mock-request.model';\nimport { PaymentOptionsResponse } from '../../src/app/models/payment-options.model';\nimport { InvoiceSplit } from '../../src/app/models/billing-profile.model';\nimport { LodgeCardProviderCode } from '../../src/app/models/lodge-card.model';\n\nconst mockPayments: MockRequest[] = [\n  {\n    method: 'GET',\n    url: '/api/tmcc/customers/{customerId}/payment-options',\n    getResponse: ({ customerId }): PaymentOptionsResponse => {\n      return {\n        billings: [\n          {\n            id: '717aa17d-ba5d-4263-86fd-7be626f5d674',\n            taxId: 'asdasd',\n            legalName: '12313',\n            streetName: 'asdad',\n            zipcode: 'asdad',\n            city: 'asdad',\n            countryId: '2',\n            countryName: 'United Arab Emirates',\n            contactFirstName: 'adsad',\n            contactLastName: 'adsad',\n            contactEmail: 'asdads@asd.com',\n            currency: 'SEK',\n            billingPeriod: 'monthly',\n            employeeIds: [customerId],\n            groupIds: [],\n            backOfficeCustomerId: '',\n            invoiceSplitType: InvoiceSplit.NONE,\n            vatNumber: '',\n            invoiceRecipientEmail: '',\n          },\n          {\n            id: '3913b5e1-8520-42e6-8982-b94e1ad29c29',\n            taxId: 'asdfasdf',\n            legalName: 'bnmbnb',\n            streetName: 'asdads',\n            zipcode: 'asdad',\n            city: 'asda',\n            countryId: '1',\n            countryName: 'Andorra',\n            contactFirstName: 'asdads',\n            contactLastName: 'asdasd',\n            contactEmail: 'asdasd@asd.com',\n            currency: 'USD',\n            billingPeriod: 'monthly',\n            employeeIds: [customerId],\n            groupIds: [],\n            backOfficeCustomerId: '',\n            invoiceSplitType: InvoiceSplit.NONE,\n            vatNumber: '',\n            invoiceRecipientEmail: '',\n          },\n          {\n            id: '77fede1f-f02e-49db-bd2f-fef718c5dfa8',\n            taxId: 'asdasd',\n            legalName: 'asdasd',\n            streetName: 'asdads',\n            zipcode: 'asdads',\n            city: 'asdasd',\n            countryId: '2',\n            countryName: 'United Arab Emirates',\n            contactFirstName: 'asdads',\n            contactLastName: 'asdads',\n            contactEmail: 'asd@asd.com',\n            currency: 'USD',\n            billingPeriod: 'monthly',\n            employeeIds: [customerId],\n            groupIds: [],\n            backOfficeCustomerId: '',\n            invoiceSplitType: InvoiceSplit.NONE,\n            vatNumber: '123',\n            invoiceRecipientEmail: 'asd@asd.com',\n          },\n          {\n            id: '7d01bad7-549e-4379-a77f-126302368202',\n            taxId: 'adasd',\n            legalName: 'aadasd',\n            streetName: 'adad',\n            zipcode: 'adsads',\n            city: 'adsasd',\n            countryId: '2',\n            countryName: 'United Arab Emirates',\n            contactFirstName: 'adads',\n            contactLastName: 'asdads',\n            contactEmail: 'asdasd@asd.com',\n            currency: 'RSD',\n            billingPeriod: 'monthly',\n            employeeIds: [customerId],\n            groupIds: [],\n            backOfficeCustomerId: '',\n            invoiceSplitType: InvoiceSplit.NONE,\n            vatNumber: '',\n            invoiceRecipientEmail: '',\n          },\n          {\n            id: 'af031828-8acf-43ea-8ddb-032cc25c853d',\n            taxId: '123123',\n            legalName: 'ACME Corporation',\n            streetName: 'Street Name',\n            zipcode: '12312',\n            city: 'Belgrade',\n            countryId: '190',\n            countryName: 'Serbia',\n            contactFirstName: 'John',\n            contactLastName: 'Doe',\n            contactEmail: 'test.user@example.com',\n            currency: 'SEK',\n            billingPeriod: 'monthly',\n            employeeIds: [customerId],\n            groupIds: ['187f9646-0903-4c43-9160-4a12e238ca2b'],\n            backOfficeCustomerId: '123-john.doe',\n            invoiceSplitType: InvoiceSplit.NONE,\n            vatNumber: '123456',\n            invoiceRecipientEmail: 'test.user@example.com',\n          },\n        ],\n        lodgeCards: [\n          {\n            id: 'ed6fa319-5837-43c9-8201-b9d1a208de8d',\n            name: 'Test Lodge Card',\n            creditCardNumber: '**********2312',\n            expiryDate: '01-03-2026',\n            expiryDateTrailingValue: null,\n            provider: LodgeCardProviderCode.CCDC,\n            currency: 'EUR',\n            clientCorporationId: '4f2679fe-3180-4ec1-b937-9f2d082c7930',\n            country: {\n              id: '190',\n              name: 'Serbia',\n              code: 'RS',\n              phoneCode: '+381',\n              defaultCurrency: 'RSD',\n            },\n            contactFirstName: 'John',\n            contactLastName: 'Doe',\n            contactEmail: 'john.doe@example.com',\n            backOfficeCustomerId: '',\n            invoiceRecipientEmail: 'john.doe@example.com',\n            vatNumber: '12345',\n            companyLegalName: 'BidHotel',\n            companyRegistrationNumber: '123',\n            addressLine: 'Moja Adresa 23',\n            postalCode: '11000',\n            city: 'Belgrade',\n            memberCount: 0,\n            employeeIds: null,\n            groupIds: null,\n            isOnboarded: true,\n          },\n        ],\n      };\n    },\n  },\n];\n\nexport function getMockPaymentsRequests(): MockRequest[] {\n  return environment.mock.payments ? mockPayments : [];\n}\n","import { environment } from '../../src/environments/environment';\nimport { MockRequest } from '../mock-request.model';\nimport {\n  CreditCardVendor,\n  FlightPNRConfirmation,\n  FlightPNRValidation,\n  FlightPNRValidationState,\n  FormOfPaymentType,\n} from '../../src/app/models/pnr.model';\nimport { UserTitle } from '../../src/app/models/cart-items/shared.model';\nimport { mockCartData } from './data/mock-cart-data';\n\nconst mockPNR: MockRequest[] = [\n  {\n    method: 'POST',\n    url: `${environment.api.dfs}/v1/tmcc/agent-assisted/validate-booking`,\n    getResponse: (params, body): FlightPNRValidation => {\n      const previewPNR = body.bookingReference.reference.endsWith('_preview');\n      const updatePNR = body.bookingReference.reference.endsWith('_update');\n      const existingPNR = updatePNR || previewPNR;\n      const bookingReference = body.bookingReference.reference.replace('_update', '').replace('_preview', '');\n\n      return {\n        state: existingPNR ? FlightPNRValidationState.EXISTING : FlightPNRValidationState.NEW,\n        bookingReference: {\n          reference: bookingReference,\n          source: body.bookingReference.source,\n        },\n        finalDestination: existingPNR ? 'ARN' : null,\n        flights: [\n          {\n            ...mockCartData.flightBookings[0].flights[0],\n            segments: [\n              ...mockCartData.flightBookings[0].flights[0].segments,\n              ...mockCartData.flightBookings[1].flights[0].segments,\n            ],\n          },\n          // {\n          //   segments: [\n          //     {\n          //       id: '1',\n          //       cabinClass: CabinClass.ECONOMY,\n          //       departure: {\n          //         airportName: 'Arlanda',\n          //         airportCode: 'ARN',\n          //         airportCountryCode: 'SE',\n          //         terminal: '2',\n          //         time: '2021-06-18T20:55:00',\n          //         flightTaxiOption: false, // Was missing\n          //         // Geolocation is not needed\n          //       },\n          //       arrival: {\n          //         airportName: 'Belgrade',\n          //         airportCode: 'BEG',\n          //         airportCountryCode: 'RS',\n          //         terminal: null,\n          //         time: '2021-06-18T23:00:00',\n          //         flightTaxiOption: false, // Was missing\n          //         // Geolocation is not needed\n          //       },\n          //       duration: 7500,\n          //       marketingAirline: {\n          //         code: 'KL',\n          //         name: 'KLM',\n          //         iconUrl: 'http://some.url',\n          //       },\n          //       marketingCarrier: 'KL',\n          //       operatingAirline: {\n          //         code: 'KL',\n          //         name: 'KLM',\n          //         iconUrl: 'http://some.url',\n          //       },\n          //       operatingCarrier: 'KL',\n          //       flightNumber: 'KL 7444',\n          //       baggageAllowance: {\n          //         quantity: 1,\n          //         weight: {\n          //           unit: 'K',\n          //           value: '23',\n          //         },\n          //       },\n          //       layover: 7500,\n          //       longLayover: false,\n          //       aircraftModel: 'Airbus A320', // Was missing\n          //       airportChange: false, // Was missing\n          //       shortLayover: false, // Was missing\n          //       differentDay: false, // Was missing\n          //     },\n          //   ],\n          //   duration: 7500,\n          //   co2EmissionInGrams: 200,\n          // },\n        ],\n        travellers: [\n          {\n            externalId: '1',\n            firstName: 'John',\n            lastName: 'Doe',\n            title: UserTitle.MR,\n            email: existingPNR ? 'john.doe@example.com' : null,\n          },\n          {\n            externalId: '2',\n            firstName: 'Peter',\n            lastName: 'Forest',\n            title: UserTitle.MR,\n            email: existingPNR ? 'peter@example.com' : null,\n          },\n          {\n            externalId: '3',\n            firstName: 'John',\n            lastName: 'Doe',\n            title: UserTitle.MR,\n            email: existingPNR ? 'john.doe@example.com' : null,\n          },\n        ],\n        currency: 'SEK',\n        totalPrice: 668,\n        totalPriceWithMarkup: 668,\n        formOfPayment: {\n          type: FormOfPaymentType.CREDIT_CARD,\n          creditCard: {\n            vendor: CreditCardVendor.DINERS,\n            number: 'XXXXXXXXXXXX7710',\n            expiry: '1228',\n          },\n        },\n        updates: updatePNR\n          ? [\n              'Price updated',\n              'Traveller John Doe removed',\n              'New traveller John Doe added',\n              'Baggage added for traveller John Doe',\n              'Seat changed for traveller John Doe',\n              'Departing flight date and time changed',\n            ]\n          : [],\n        cartId: previewPNR ? 'ec9515a6-cd80-4bc8-ab7f-1bd260b58bf8' : undefined,\n      };\n    },\n  },\n  {\n    method: 'POST',\n    delay: 3000,\n    url: `/api/tmcc/agent-assisted/confirmation`,\n    getResponse: (): FlightPNRConfirmation => {\n      return {\n        cartId: 'ec9515a6-cd80-4bc8-ab7f-1bd260b58bf8',\n      };\n    },\n  },\n];\n\nexport function getMockPNRRequests(): MockRequest[] {\n  return environment.mock.pnr ? mockPNR : [];\n}\n","import { environment } from '../../src/environments/environment';\nimport { MockRequest } from '../mock-request.model';\nimport { Product } from '../../src/app/models/product.model';\nimport { createFullApiResponse } from '../../src/app/global/interfaces/response.interface';\nimport { PaginatedResponse } from '../../src/app/models/pagination.model';\n\n// eslint-disable-next-line unicorn/prefer-module\nconst chance = require('chance').Chance();\n\nfunction getMockProducts(count = 10): Product[] {\n  return [...Array.from({ length: count }).keys()].map(() => getMockProduct());\n}\n\nfunction getMockProduct(): Product {\n  return {\n    id: chance.guid(),\n    name: chance.company(),\n    base: chance.bool({ likelihood: 10 }),\n    active: chance.bool({ likelihood: 80 }),\n  };\n}\n\nconst mockProducts: MockRequest[] = [\n  {\n    method: 'GET',\n    url: '/api/tmcc/products?page={page}&size={size}',\n    params: { page: '([0-9]+)', size: '([0-9]+)' },\n    getResponse: ({ page, size }): PaginatedResponse<Product> => {\n      return createFullApiResponse<Product>(getMockProducts(+size), +page, +size, 15);\n    },\n  },\n  {\n    method: 'PUT',\n    url: '/api/tmcc/products/{id}',\n    getResponse: ({ id }, body): Product => ({ ...body, id }),\n  },\n  {\n    method: 'POST',\n    url: '/api/tmcc/products',\n    getResponse: (params, body): Product => ({ ...body, id: chance.guid() }),\n  },\n];\n\nexport function getMockProductRequests(): MockRequest[] {\n  return environment.mock.products ? mockProducts : [];\n}\n","import { sub } from 'date-fns';\nimport * as Chance from 'chance';\nimport { environment } from '../../src/environments/environment';\nimport { MockRequest } from '../mock-request.model';\nimport { SystemMessage, SystemMessageStatus } from '../../src/app/models/system-message.model';\nimport { createFullApiResponse, createSuccessResponse } from '../../src/app/global/interfaces/response.interface';\nimport { formatDibDate } from '../../src/app/utils/pipes/date.pipe';\nimport { PaginatedResponse } from '../../src/app/models/pagination.model';\n\nfunction getMockSystemMessages(count = 10): SystemMessage[] {\n  return [...Array.from({ length: count }).keys()].map(() => getMockSystemMessage());\n}\n\nfunction getMockSystemMessage(id: string = new Chance().hash({ length: 8, casing: 'upper' })): SystemMessage {\n  // Set the seed value, so we can have consistent values based on the id\n  const chance = new Chance(id);\n  // Give preference to CLOSED messages and generate 3 times more of them\n  const status = chance.weighted([SystemMessageStatus.OPENED, SystemMessageStatus.CLOSED], [1, 3]);\n  const activatedAt = sub(new Date(), {\n    months: chance.prime({ min: 3, max: 33 }),\n    hours: chance.prime({ max: 23 }),\n    minutes: chance.prime({ max: 59 }),\n  });\n  const closedAt = sub(new Date(), {\n    months: chance.prime({ max: 2 }),\n    hours: chance.prime({ max: 23 }),\n    minutes: chance.prime({ max: 59 }),\n  });\n\n  return {\n    id,\n    description: chance.paragraph(),\n    activatedAt: formatDibDate(activatedAt.toString(), 'server'),\n    closedBy: status === SystemMessageStatus.CLOSED ? chance.name() : null,\n    closedAt: status === SystemMessageStatus.CLOSED ? formatDibDate(closedAt.toString(), 'server') : null,\n    status,\n  };\n}\n\nconst mockSystemMessages: MockRequest[] = [\n  {\n    method: 'GET',\n    url: '/api/tmcc/system-messages?page={page}&size={size}',\n    params: { page: '([0-9]+)', size: '([0-9]+)' },\n    getResponse: ({ page, size }): PaginatedResponse<SystemMessage> => {\n      return createFullApiResponse<SystemMessage>(getMockSystemMessages(+size), +page, +size, 80);\n    },\n  },\n  {\n    method: 'GET',\n    url: '/api/tmcc/system-messages/{id}',\n    getResponse: ({ id }): SystemMessage => ({ ...getMockSystemMessage(id) }),\n  },\n  {\n    method: 'PATCH',\n    url: '/api/tmcc/system-messages/{id}',\n    getResponse: ({ id }, body): SystemMessage => ({\n      ...body,\n      id,\n      // If we have just closed the message add the missing fields\n      closedAt: body.status === SystemMessageStatus.CLOSED ? body.closedAt || new Date() : null,\n      closedBy: body.status === SystemMessageStatus.CLOSED ? body.closedBy || new Chance().name() : null,\n    }),\n  },\n  {\n    method: 'POST',\n    url: '/api/tmcc/system-messages',\n    getResponse: (params, body): SystemMessage => ({ ...body, id: new Chance().hash({ length: 8, casing: 'upper' }) }),\n  },\n  {\n    method: 'DELETE',\n    url: '/api/tmcc/system-messages/{any}',\n    getResponse: () => createSuccessResponse,\n  },\n];\n\nexport function getMockSystemMessageRequests(): MockRequest[] {\n  return environment.mock.systemMessages ? mockSystemMessages : [];\n}\n","import * as Chance from 'chance';\nimport { environment } from '../../src/environments/environment';\nimport { MockRequest } from '../mock-request.model';\nimport { User, UserType } from '../../src/app/models/user.model';\nimport { createFullApiResponse } from '../../src/app/global/interfaces/response.interface';\nimport { PaginatedResponse } from '../../src/app/models/pagination.model';\n\nconst chance = Chance.Chance();\n\nfunction getMockUsers(count = 10): User[] {\n  return [...Array.from({ length: count }).keys()].map(() => getMockUser());\n}\n\nfunction getMockUser(): User {\n  return {\n    id: chance.guid(),\n    firstName: chance.first(),\n    lastName: chance.last(),\n    phone: chance.phone(),\n    password: null,\n    type: chance.pickone([\n      // Increase a change of being an AGENT\n      UserType.AGENT,\n      UserType.AGENT,\n      UserType.AGENT,\n      UserType.AGENT,\n      // With less change of being an ADMIN\n      UserType.ADMIN,\n      UserType.ADMIN,\n      // And in some rare occasions show SUPER_ADMINs\n      UserType.SUPER_ADMIN,\n    ]),\n    username: chance.email({ domain: 'example.com' }).toLowerCase(),\n    disabled: chance.bool({ likelihood: 20 }),\n  };\n}\n\nconst mockUsers: MockRequest[] = [\n  {\n    method: 'GET',\n    url: '/api/tmcc/users?page={page}&size={size}',\n    params: { page: '([0-9]+)', size: '([0-9]+)' },\n    getResponse: ({ page, size }): PaginatedResponse<User> => {\n      return createFullApiResponse<User>(getMockUsers(+size), +page, +size, 80);\n    },\n  },\n  {\n    method: 'PUT',\n    url: '/api/tmcc/users/{id}',\n    getResponse: (params, body): User => ({ ...body, id: params.id }),\n  },\n  {\n    method: 'POST',\n    url: '/api/tmcc/users',\n    getResponse: (params, body): User => ({ ...body, id: chance.guid() }),\n  },\n  {\n    method: 'PUT',\n    url: '/api/tmcc/users/{id}/change-password',\n    getResponse: (params): User => ({ ...getMockUser(), id: params.id }),\n  },\n  {\n    method: 'GET',\n    url: '/api/tmcc/users-override?username={username}',\n    getResponse: (): Partial<{ token: string }> => ({ token: chance.guid() }),\n  },\n];\n\nexport function getMockUserRequests(): MockRequest[] {\n  return environment.mock.users ? mockUsers : [];\n}\n","import * as Chance from 'chance';\nimport { environment } from '../../src/environments/environment';\nimport { MockRequest } from '../mock-request.model';\nimport { VatCategory } from '../../src/app/models/vat-category.model';\nimport { createFullApiResponse } from '../../src/app/global/interfaces/response.interface';\nimport { PaginatedResponse } from '../../src/app/models/pagination.model';\n\nconst chance = Chance.Chance();\n\nfunction getMockVatCategories(count = 10): VatCategory[] {\n  return [...Array.from({ length: count }).keys()].map(() => getMockVatCategory());\n}\n\nfunction getMockVatCategory(): VatCategory {\n  // 75% Sweden and 25% Serbia\n  const randomCountry = chance.pickone([\n    { code: 'SE', name: 'Sweden' },\n    { code: 'SE', name: 'Sweden' },\n    { code: 'SE', name: 'Sweden' },\n    { code: 'RS', name: 'Serbia' },\n  ]);\n\n  return {\n    id: chance.guid(),\n    name: chance.company(),\n    productId: chance.guid(),\n    productName: chance.company(),\n    countryId: randomCountry.code,\n    active: chance.bool({ likelihood: 80 }),\n    externalId: chance.string({ length: 8, casing: 'upper', alpha: true, numeric: true }),\n    vatPercentage: chance.pickone([5, 10, 15, 20, 25]),\n  };\n}\n\nconst mockVatCategories: MockRequest[] = [\n  {\n    method: 'GET',\n    url: '/api/tmcc/products/vat-categories?page={page}&size={size}',\n    params: { page: '([0-9]+)', size: '([0-9]+)' },\n    getResponse: ({ page, size }): PaginatedResponse<VatCategory> => {\n      return createFullApiResponse<VatCategory>(getMockVatCategories(+size), +page, +size, 80);\n    },\n  },\n  {\n    method: 'PUT',\n    url: '/api/tmcc/products/vat-categories/{id}',\n    getResponse: ({ id }, body) => ({ ...body, id }),\n  },\n  {\n    method: 'POST',\n    url: '/api/tmcc/products/vat-categories',\n    getResponse: (params, body) => ({ ...body, id: chance.guid() }),\n  },\n];\n\nexport function getMockVatCategoryRequests(): MockRequest[] {\n  return environment.mock.vatCategories ? mockVatCategories : [];\n}\n","import * as Chance from 'chance';\nimport { environment } from '../../src/environments/environment';\nimport { MockRequest } from '../mock-request.model';\nimport { VendorsPaymentProvider } from '../../src/app/models/vendors-payment-provider.model';\nimport { createFullApiResponse } from '../../src/app/global/interfaces/response.interface';\nimport { PaginatedResponse } from '../../src/app/models/pagination.model';\n\nconst chance = Chance.Chance();\n\nfunction getMockVendorsPaymentProviders(count = 10): VendorsPaymentProvider[] {\n  return [...Array.from({ length: count }).keys()].map(() => getMockVendorsPaymentProvider());\n}\n\nfunction getMockVendorsPaymentProvider(): VendorsPaymentProvider {\n  return {\n    id: chance.guid(),\n    name: chance.company(),\n    externalId: chance.string({ length: 8, numeric: true }),\n    vendorIds: [chance.guid(), chance.guid()],\n    active: chance.bool({ likelihood: 80 }),\n  };\n}\n\nconst mockVendorsPaymentProviders: MockRequest[] = [\n  {\n    method: 'GET',\n    url: '/api/tmcc/products/vendors/payment-providers?page={page}&size={size}',\n    params: { page: '([0-9]+)', size: '([0-9]+)' },\n    getResponse: ({ page, size }): PaginatedResponse<VendorsPaymentProvider> => {\n      return createFullApiResponse<VendorsPaymentProvider>(getMockVendorsPaymentProviders(+size), +page, +size, 15);\n    },\n  },\n  {\n    method: 'GET',\n    url: '/api/tmcc/products/vendors/payment-providers?page={page}&size={size}&sort={sort}&active={active}&vendorId={vendorId}',\n    params: { page: '([0-9]+)', size: '([0-9]+)' },\n    getResponse: ({ page, size }): PaginatedResponse<VendorsPaymentProvider> => {\n      // Agent assisted vendor payment providers filtered by product and vendor ids\n      const providers = getMockVendorsPaymentProviders(+size).map((provider) => {\n        provider.vendorPaymentPresentation = chance.pickone(['CASH', 'VCC', 'LODGE_CARD']);\n        provider.name = `${provider.name} (${provider.vendorPaymentPresentation})`;\n\n        return provider;\n      });\n\n      return createFullApiResponse<VendorsPaymentProvider>(providers, +page, +size, 15);\n    },\n  },\n  {\n    method: 'PUT',\n    url: '/api/tmcc/products/vendors/payment-providers/{id}',\n    getResponse: ({ id }, body): VendorsPaymentProvider => ({ ...body, id }),\n  },\n  {\n    method: 'POST',\n    url: '/api/tmcc/products/vendors/payment-providers',\n    getResponse: (params, body): VendorsPaymentProvider => ({ ...body, id: chance.guid() }),\n  },\n];\n\nexport function getMockVendorsPaymentProviderRequests(): MockRequest[] {\n  return environment.mock.vendorsPaymentProvider ? mockVendorsPaymentProviders : [];\n}\n","import * as Chance from 'chance';\nimport { environment } from '../../src/environments/environment';\nimport { MockRequest } from '../mock-request.model';\nimport { Vendor } from '../../src/app/models/vendor.model';\nimport { createFullApiResponse } from '../../src/app/global/interfaces/response.interface';\nimport { PaginatedResponse } from '../../src/app/models/pagination.model';\n\nconst chance = Chance.Chance();\n\nfunction getMockVendors(count = 10): Vendor[] {\n  return [...Array.from({ length: count }).keys()].map(() => getMockVendor());\n}\n\nfunction getMockVendor(): Vendor {\n  return {\n    id: chance.guid(),\n    externalId: chance.string({ length: 8, numeric: true }),\n    name: chance.company(),\n    productIds: [chance.guid(), chance.guid()],\n    active: chance.bool({ likelihood: 80 }),\n  };\n}\n\nconst mockVendors: MockRequest[] = [\n  {\n    method: 'GET',\n    url: '/api/tmcc/products/vendors?page={page}&size={size}',\n    params: { page: '([0-9]+)', size: '([0-9]+)' },\n    getResponse: ({ page, size }): PaginatedResponse<Vendor> => {\n      return createFullApiResponse<Vendor>(getMockVendors(+size), +page, +size, 80);\n    },\n  },\n  {\n    method: 'GET',\n    url: '/api/tmcc/products/vendors?page={page}&size={size}&productId={productId}',\n    params: { page: '([0-9]+)', size: '([0-9]+)' },\n    getResponse: ({ page, size }): PaginatedResponse<Vendor> => {\n      // Agent assisted vendors filtered by product id\n      const vendors = getMockVendors(+size).map((vendor) => {\n        vendor.vendorName = chance.pickone(['Amadeus', 'LufthansaGroup', 'TravelPort']);\n\n        return vendor;\n      });\n\n      return createFullApiResponse<Vendor>(vendors, +page, +size, 80);\n    },\n  },\n  {\n    method: 'POST',\n    url: '/api/tmcc/products/vendors',\n    getResponse: (params, body): Vendor => ({ ...body, id: chance.guid() }),\n  },\n  {\n    method: 'PUT',\n    url: '/api/tmcc/products/vendors/{id}',\n    getResponse: ({ id }, body): Vendor => ({ ...body, id }),\n  },\n  {\n    method: 'DELETE',\n    url: '/api/tmcc/products/vendors/{any}',\n    getResponse: (): void => {},\n  },\n];\n\nexport function getMockVendorRequests(): MockRequest[] {\n  return environment.mock.vendors ? mockVendors : [];\n}\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\nimport { User } from '../models/user.model';\n\nexport const AuthActions = createActionGroup({\n  source: 'Auth',\n  events: {\n    // Login Actions\n    Login: props<Pick<User, 'username' | 'password'>>(),\n    'Login Start': emptyProps(),\n    'Login Success': props<{ data: User }>(),\n    'Login Error': props<{ error: string }>(),\n\n    // Logout Actions\n    Logout: (message?: string) => ({ message }),\n    'Logout Start': emptyProps(),\n    'Logout Success': (message?: string) => ({ message }),\n    'Logout Error': props<{ error: string }>(),\n\n    // Forgot Password Actions\n    'Forgot Password': props<{ email: string }>(),\n    'Forgot Password Start': emptyProps(),\n    'Forgot Password Success': emptyProps(),\n    'Forgot Password Error': props<{ error: string }>(),\n\n    // Change Password Actions\n    'Change Password': props<{ id: string; password: string }>(),\n    'Change Password Start': emptyProps(),\n    'Change Password Success': emptyProps(),\n    'Change Password Error': props<{ error: string }>(),\n\n    // Set Password Actions\n    'Set Password': props<{ id: string; password: string }>(),\n    'Set Password Start': emptyProps(),\n    'Set Password Success': emptyProps(),\n    'Set Password Error': props<{ error: string }>(),\n\n    // Logged-In User Actions\n    'Set Logged In User': props<{ data: User }>(),\n  },\n});\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\nimport { HttpParams } from '@angular/common/http';\nimport { BillingRequest } from '../models/billing-request.model';\nimport { PaginationData } from '../models/pagination.model';\n\nexport const BillingRequestActions = createActionGroup({\n  source: 'Billing Request',\n  events: {\n    'Change Status': props<{ data: BillingRequest }>(),\n    'Change Status Start': emptyProps(),\n    'Change Status Success': props<{ data: BillingRequest }>(),\n    'Change Status Error': props<{ error: string }>(),\n    'Load Requests': props<{\n      params: HttpParams | { [param: string]: number | string | string[] };\n      keepDataWhileLoading?: boolean;\n    }>(),\n    'Load Requests Start': emptyProps(),\n    'Load Requests Success': props<{ data: BillingRequest[]; pagination: PaginationData }>(),\n    'Load Requests Error': props<{ error: string }>(),\n  },\n});\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\nimport { HttpParams } from '@angular/common/http';\nimport { Booking } from '../models/booking.model';\nimport { BookingListItem } from '../models/booking-list-item.model';\nimport { PaginationData } from '../models/pagination.model';\n\nexport const BookingActions = createActionGroup({\n  source: 'Booking',\n  events: {\n    'Save Booking Details': props<{ data: Booking }>(),\n    'Save Booking Details Start': emptyProps(),\n    'Save Booking Details Success': props<{ data: Booking }>(),\n    'Save Booking Details Error': props<{ error: string }>(),\n    'Load Bookings': props<{\n      params: HttpParams | { [param: string]: number | string | string[] };\n      keepDataWhileLoading?: boolean;\n    }>(),\n    'Load Bookings Start': emptyProps(),\n    'Load Bookings Success': props<{ data: BookingListItem[]; pagination: PaginationData }>(),\n    'Load Bookings Error': props<{ error: string }>(),\n    'Load Booking': props<{ id: Booking['cartId'] }>(),\n    'Load Booking Start': emptyProps(),\n    'Load Booking Success': props<{ data: Booking }>(),\n    'Load Booking Error': props<{ error: string }>(),\n    'Load Reference Types': emptyProps(),\n    'Load Reference Types Start': emptyProps(),\n    'Load Reference Types Success': props<{ data: string[] }>(),\n    'Load Reference Types Error': props<{ error: string }>(),\n    'Load And Select Booking': props<{ id: Booking['cartId'] }>(),\n    'Load And Select Booking Start': emptyProps(),\n    'Load And Select Booking Success': props<{ data: Booking }>(),\n    'Load And Select Booking Error': props<{ error: string }>(),\n  },\n});\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\nimport { Cart } from '../models/cart.model';\n\nexport const CartActions = createActionGroup({\n  source: 'Cart',\n  events: {\n    'Load Cart Details': props<{ id: Cart['id'] }>(),\n    'Load Cart Details Start': emptyProps(),\n    'Load Cart Details Success': props<{ data: Cart }>(),\n    'Load Cart Details Error': props<{ error: string }>(),\n  },\n});\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\nimport { Company } from '../models/company.model';\nimport { BookingChannelsResponse, CheckoutOptionsResponse } from '../models/checkout-options.model';\n\nexport const CheckoutActions = createActionGroup({\n  source: 'Checkout',\n  events: {\n    'Load Options': props<{ companyId: Company['id'] }>(),\n    'Load Options Start': emptyProps(),\n    'Load Options Success': props<{ data: CheckoutOptionsResponse }>(),\n    'Load Options Error': props<{ error: string }>(),\n    'Load Booking Channels': emptyProps(),\n    'Load Booking Channels Start': emptyProps(),\n    'Load Booking Channels Success': props<{ data: BookingChannelsResponse }>(),\n    'Load Booking Channels Error': props<{ error: string }>(),\n  },\n});\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\nimport { HttpParams } from '@angular/common/http';\nimport { Company } from '../models/company.model';\nimport { PaginationData } from '../models/pagination.model';\n\nexport const CompanyActions = createActionGroup({\n  source: 'Company',\n  events: {\n    'Save Company Details': props<{ data: Company }>(),\n    'Save Company Details Start': emptyProps(),\n    'Save Company Details Success': props<{ data: Company }>(),\n    'Save Company Details Error': props<{ error: string }>(),\n    'Delete Company': props<{ data: Company }>(),\n    'Delete Company Start': emptyProps(),\n    'Delete Company Success': props<{ data: Company }>(),\n    'Delete Company Error': props<{ error: string }>(),\n    'Load Companies': props<{\n      params: HttpParams | { [param: string]: number | string | string[] };\n      keepDataWhileLoading?: boolean;\n    }>(),\n    'Load Companies Start': emptyProps(),\n    'Load Companies Success': props<{ data: Company[]; pagination: PaginationData }>(),\n    'Load Companies Error': props<{ error: string }>(),\n    'Load Company': props<{ id: Company['id'] }>(),\n    'Load Company Start': emptyProps(),\n    'Load Company Success': props<{ data: Company }>(),\n    'Load Company Error': props<{ error: string }>(),\n    'Toggle Company Subscription Status': props<{ data: Company }>(),\n    'Toggle Company Subscription Status Start': emptyProps(),\n    'Toggle Company Subscription Status Success': props<{ data: Company }>(),\n    'Toggle Company Subscription Status Error': props<{ error: string }>(),\n  },\n});\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\nimport { HttpParams } from '@angular/common/http';\nimport { CompanyUser } from '../models/company-user.model';\nimport { PaginationData } from '../models/pagination.model';\n\nexport const CompanyUserActions = createActionGroup({\n  source: 'Company User',\n  events: {\n    'Save Company User Details': props<{ data: CompanyUser }>(),\n    'Save Company User Details Start': emptyProps(),\n    'Save Company User Details Success': props<{ data: CompanyUser }>(),\n    'Save Company User Details Error': props<{ error: string }>(),\n    'Load Company Users': props<{\n      params: HttpParams | { [param: string]: number | string | string[] };\n      keepDataWhileLoading?: boolean;\n    }>(),\n    'Load Company Users Start': emptyProps(),\n    'Load Company Users Success': props<{ data: CompanyUser[]; pagination: PaginationData }>(),\n    'Load Company Users Error': props<{ error: string }>(),\n    'Load Company User': props<{ id: CompanyUser['id'] }>(),\n    'Load Company User Start': emptyProps(),\n    'Load Company User Success': props<{ data: CompanyUser }>(),\n    'Load Company User Error': props<{ error: string }>(),\n    'Load And Select Company User': props<{ id: CompanyUser['id'] }>(),\n    'Load And Select Company User Start': emptyProps(),\n    'Load And Select Company User Success': props<{ data: CompanyUser }>(),\n    'Load And Select Company User Error': props<{ error: string }>(),\n  },\n});\n","import { createActionGroup, props } from '@ngrx/store';\n\nexport interface ConfirmationData {\n  template: string;\n  confirm: {\n    label: string;\n    color?: string;\n  };\n  cancel?: {\n    label: string;\n  };\n}\n\nexport const ConfirmationDialogActions = createActionGroup({\n  source: 'Confirmation Dialog',\n  events: {\n    Show: props<{ data: ConfirmationData; ok?: () => any; cancel?: () => any }>(),\n  },\n});\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\nimport { TravelerCostCenterResponse } from '../models/cost-center.model';\n\nexport const CostCenterActions = createActionGroup({\n  source: 'Cost Center',\n  events: {\n    'Load Traveller Cost Centers': props<{ ids: string[] }>(),\n    'Load Traveller Cost Centers Start': emptyProps(),\n    'Load Traveller Cost Centers Success': props<{ data: TravelerCostCenterResponse[] }>(),\n    'Load Traveller Cost Centers Error': props<{ error: string }>(),\n  },\n});\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\nimport { Country } from '../models/country.model';\n\nexport const CountryActions = createActionGroup({\n  source: 'Country',\n  events: {\n    'Load Countries': emptyProps(),\n    'Load Countries Start': emptyProps(),\n    'Load Countries Success': props<{ data: Country[] }>(),\n    'Load Countries Error': props<{ error: string }>(),\n  },\n});\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\nimport { Feature } from '../models/feature.model';\n\nexport const FeatureActions = createActionGroup({\n  source: 'Feature',\n  events: {\n    'Toggle Feature Status': props<{ data: Feature }>(),\n    'Toggle Feature Status Start': emptyProps(),\n    'Toggle Feature Status Success': props<{ data: Feature }>(),\n    'Toggle Feature Status Error': props<{ error: string }>(),\n    'Load Features': emptyProps(),\n    'Load Features Start': emptyProps(),\n    'Load Features Success': props<{ data: Feature[] }>(),\n    'Load Features Error': props<{ error: string }>(),\n  },\n});\n","import { createActionGroup, props } from '@ngrx/store';\n\nexport const GlobalActions = createActionGroup({\n  source: 'Global',\n  events: {\n    'Show Success Message': props<{ message: string; action?: string; duration?: number }>(),\n    'Show Error Message': props<{ message: string; action?: string; duration?: number }>(),\n  },\n});\n","import { createActionGroup, props } from '@ngrx/store';\n\nexport const LayoutActions = createActionGroup({\n  source: 'Layout',\n  events: {\n    'Toggle Sidenav': props<{ visible: boolean }>(),\n  },\n});\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\nimport { PaymentOptions } from '../models/payment-options.model';\n\nexport const PaymentActions = createActionGroup({\n  source: 'Payment',\n  events: {\n    'Load Payment Options': props<{ id: string }>(),\n    'Load Payment Options Start': emptyProps(),\n    'Load Payment Options Success': props<{ data: PaymentOptions }>(),\n    'Load Payment Options Error': props<{ error: string }>(),\n  },\n});\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\nimport {\n  FlightPNRConfirmation,\n  FlightPNRConfirmationRequest,\n  FlightPNRValidation,\n  FlightPNRValidationRequest,\n} from '../models/pnr.model';\n\nexport const PnrActions = createActionGroup({\n  source: 'Pnr',\n  events: {\n    'Validate Flight PNR': props<{ data: FlightPNRValidationRequest }>(),\n    'Validate Flight PNR Start': emptyProps(),\n    'Validate Flight PNR Success': props<{ data: FlightPNRValidation }>(),\n    'Validate Flight PNR Error': props<{ error: string }>(),\n    'Set Flight Final Destination': props<{ destination: string }>(),\n    'Confirm Flight PNR': props<{ data: FlightPNRConfirmationRequest }>(),\n    'Confirm Flight PNR Start': emptyProps(),\n    'Confirm Flight PNR Success': props<{ data: FlightPNRConfirmation }>(),\n    'Confirm Flight PNR Error': props<{ error: string }>(),\n    'Reset Validated PNR': emptyProps(),\n    'Save Additional Validation Data': props<{ data: { vendorId: string; productId: string } }>(),\n  },\n});\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\nimport { HttpParams } from '@angular/common/http';\nimport { Product } from '../models/product.model';\nimport { PaginationData } from '../models/pagination.model';\n\nexport const ProductActions = createActionGroup({\n  source: 'Product',\n  events: {\n    'Save Product Details': props<{ data: Product }>(),\n    'Save Product Details Start': emptyProps(),\n    'Save Product Details Success': props<{ data: Product }>(),\n    'Save Product Details Error': props<{ error: string }>(),\n    'Toggle Product Status': props<{ data: Product }>(),\n    'Toggle Product Status Start': emptyProps(),\n    'Toggle Product Status Success': props<{ data: Product }>(),\n    'Toggle Product Status Error': props<{ error: string }>(),\n    'Load Products': props<{\n      params: HttpParams | { [param: string]: number | string | string[] };\n      keepDataWhileLoading?: boolean;\n    }>(),\n    'Load Products Start': emptyProps(),\n    'Load Products Success': props<{ data: Product[]; pagination: PaginationData }>(),\n    'Load Products Error': props<{ error: string }>(),\n  },\n});\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\nimport { HttpParams } from '@angular/common/http';\nimport { SystemMessage } from '../models/system-message.model';\nimport { PaginationData } from '../models/pagination.model';\n\nexport const SystemMessageActions = createActionGroup({\n  source: 'System Message',\n  events: {\n    'Save System Message': props<{ data: SystemMessage }>(),\n    'Save System Message Start': emptyProps(),\n    'Save System Message Success': props<{ data: SystemMessage }>(),\n    'Save System Message Error': props<{ error: string }>(),\n    'Delete System Message': props<{ data: SystemMessage }>(),\n    'Delete System Message Start': emptyProps(),\n    'Delete System Message Success': props<{ data: SystemMessage }>(),\n    'Delete System Message Error': props<{ error: string }>(),\n    'Load System Messages': props<{\n      params: HttpParams | { [param: string]: number | string | string[] };\n      keepDataWhileLoading?: boolean;\n    }>(),\n    'Load System Messages Start': emptyProps(),\n    'Load System Messages Success': props<{ data: SystemMessage[]; pagination: PaginationData }>(),\n    'Load System Messages Error': props<{ error: string }>(),\n    'Load System Message': props<{ id: SystemMessage['id'] }>(),\n    'Load System Message Start': emptyProps(),\n    'Load System Message Success': props<{ data: SystemMessage }>(),\n    'Load System Message Error': props<{ error: string }>(),\n  },\n});\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\nimport { Tmc } from '../config/tmc';\n\nexport const TenantActions = createActionGroup({\n  source: 'Tenant',\n  events: {\n    'Load Primary Tenants': emptyProps(),\n    'Load Primary Tenants Start': emptyProps(),\n    'Load Primary Tenants Success': props<{ data: Tmc[] }>(),\n    'Load Primary Tenants Error': props<{ error: string }>(),\n  },\n});\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\nimport { HttpParams } from '@angular/common/http';\nimport { User } from '../models/user.model';\nimport { CompanyUser } from '../models/company-user.model';\nimport { PaginationData } from '../models/pagination.model';\n\nexport const UserActions = createActionGroup({\n  source: 'User',\n  events: {\n    'Save User Details': props<{ data: User }>(),\n    'Save User Details Start': emptyProps(),\n    'Save User Details Success': props<{ data: User }>(),\n    'Save User Details Error': props<{ error: string }>(),\n    'Change User Password': props<{ data: User }>(),\n    'Change User Password Start': emptyProps(),\n    'Change User Password Success': props<{ data: User }>(),\n    'Change User Password Error': props<{ error: string }>(),\n    'Load Users': props<{\n      params: HttpParams | { [param: string]: number | string | string[] };\n      keepDataWhileLoading?: boolean;\n    }>(),\n    'Load Users Start': emptyProps(),\n    'Load Users Success': props<{ data: User[]; pagination: PaginationData }>(),\n    'Load Users Error': props<{ error: string }>(),\n    'Load User': props<{ id: User['id'] }>(),\n    'Load User Start': emptyProps(),\n    'Load User Success': props<{ data: User }>(),\n    'Load User Error': props<{ error: string }>(),\n    'Get Override Token': props<{ username: CompanyUser['username']; redirectPath?: string }>(),\n    'Get Override Token Start': emptyProps(),\n    'Get Override Token Success': props<{ token: string; username: CompanyUser['username']; redirectPath?: string }>(),\n    'Get Override Token Error': props<{ error: string }>(),\n  },\n});\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\nimport { HttpParams } from '@angular/common/http';\nimport { VatCategory } from '../models/vat-category.model';\nimport { PaginationData } from '../models/pagination.model';\n\nexport const VatCategoryActions = createActionGroup({\n  source: 'Vat Category',\n  events: {\n    'Save Vat Category Details': props<{ data: VatCategory }>(),\n    'Save Vat Category Details Start': emptyProps(),\n    'Save Vat Category Details Success': props<{ data: VatCategory }>(),\n    'Save Vat Category Details Error': props<{ error: string }>(),\n    'Toggle Vat Category Status': props<{ data: VatCategory }>(),\n    'Toggle Vat Category Status Start': emptyProps(),\n    'Toggle Vat Category Status Success': props<{ data: VatCategory }>(),\n    'Toggle Vat Category Status Error': props<{ error: string }>(),\n    'Load Vat Categories': props<{\n      params: HttpParams | { [param: string]: number | string | string[] };\n      keepDataWhileLoading?: boolean;\n    }>(),\n    'Load Vat Categories Start': emptyProps(),\n    'Load Vat Categories Success': props<{ data: VatCategory[]; pagination: PaginationData }>(),\n    'Load Vat Categories Error': props<{ error: string }>(),\n  },\n});\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\nimport { HttpParams } from '@angular/common/http';\nimport { VendorsPaymentProvider } from '../models/vendors-payment-provider.model';\nimport { PaginationData } from '../models/pagination.model';\n\nexport const VendorsPaymentProviderActions = createActionGroup({\n  source: 'Vendors Payment Provider',\n  events: {\n    'Save Vendors Payment Provider Details': props<{ data: VendorsPaymentProvider }>(),\n    'Save Vendors Payment Provider Details Start': emptyProps(),\n    'Save Vendors Payment Provider Details Success': props<{ data: VendorsPaymentProvider }>(),\n    'Save Vendors Payment Provider Details Error': props<{ error: string }>(),\n    'Toggle Vendors Payment Provider Status': props<{ data: VendorsPaymentProvider }>(),\n    'Toggle Vendors Payment Provider Status Start': emptyProps(),\n    'Toggle Vendors Payment Provider Status Success': props<{ data: VendorsPaymentProvider }>(),\n    'Toggle Vendors Payment Provider Status Error': props<{ error: string }>(),\n    'Load Vendors Payment Providers': props<{\n      params: HttpParams | { [param: string]: number | string | string[] };\n      keepDataWhileLoading?: boolean;\n    }>(),\n    'Load Vendors Payment Providers Start': emptyProps(),\n    'Load Vendors Payment Providers Success': props<{ data: VendorsPaymentProvider[]; pagination: PaginationData }>(),\n    'Load Vendors Payment Providers Error': props<{ error: string }>(),\n  },\n});\n","import { createActionGroup, emptyProps, props } from '@ngrx/store';\nimport { HttpParams } from '@angular/common/http';\nimport { Vendor } from '../models/vendor.model';\nimport { PaginationData } from '../models/pagination.model';\n\nexport const VendorActions = createActionGroup({\n  source: 'Vendor',\n  events: {\n    'Save Vendor Details': props<{ data: Vendor }>(),\n    'Save Vendor Details Start': emptyProps(),\n    'Save Vendor Details Success': props<{ data: Vendor }>(),\n    'Save Vendor Details Error': props<{ error: string }>(),\n    'Delete Vendor': props<{ data: Vendor }>(),\n    'Delete Vendor Start': emptyProps(),\n    'Delete Vendor Success': props<{ data: Vendor }>(),\n    'Delete Vendor Error': props<{ error: string }>(),\n    'Toggle Vendor Status': props<{ data: Vendor }>(),\n    'Toggle Vendor Status Start': emptyProps(),\n    'Toggle Vendor Status Success': props<{ data: Vendor }>(),\n    'Toggle Vendor Status Error': props<{ error: string }>(),\n    'Load Vendors': props<{\n      params: HttpParams | { [param: string]: number | string | string[] };\n      keepDataWhileLoading?: boolean;\n    }>(),\n    'Load Vendors Start': emptyProps(),\n    'Load Vendors Success': props<{ data: Vendor[]; pagination: PaginationData }>(),\n    'Load Vendors Error': props<{ error: string }>(),\n  },\n});\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: () => import('./auth/auth.module').then((m) => m.AuthModule),\n  },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard], data: { title: 'Dashboard' } },\n\n  {\n    path: 'system-messages',\n    loadChildren: () => import('./system-messages/system-messages.module').then((m) => m.SystemMessagesModule),\n  },\n  {\n    path: 'companies',\n    loadChildren: () => import('./companies/companies.module').then((m) => m.CompaniesModule),\n  },\n  {\n    path: 'billing-requests',\n    loadChildren: () => import('./billing-requests/billing-requests.module').then((m) => m.BillingRequestsModule),\n  },\n  {\n    path: 'products',\n    loadChildren: () => import('./products/products.module').then((m) => m.ProductsModule),\n  },\n  {\n    path: 'features',\n    loadChildren: () => import('./features/features.module').then((m) => m.FeaturesModule),\n  },\n  {\n    path: 'users',\n    loadChildren: () => import('./users/users.module').then((m) => m.UsersModule),\n  },\n\n  // Fallbacks\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: '**', redirectTo: '/dashboard' },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      scrollPositionRestoration: 'enabled',\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { CountryActions } from './actions/countries.actions';\nimport { AppState } from './reducers';\nimport { BaseComponent } from './base.component';\nimport { AppInitializerService } from './services/app-initializer.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent extends BaseComponent implements OnInit {\n  constructor(private store: Store<AppState>, private appInitializer: AppInitializerService) {\n    super();\n\n    appInitializer.init();\n  }\n\n  ngOnInit(): void {\n    this.store.dispatch(CountryActions.loadCountries());\n  }\n}\n","<div class=\"app-container bg-dib-gray-100\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Store, StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { MAT_DIALOG_DEFAULT_OPTIONS, MatDialogConfig, MatDialogModule } from '@angular/material/dialog';\nimport { EffectsModule } from '@ngrx/effects';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatInputModule } from '@angular/material/input';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldDefaultOptions } from '@angular/material/form-field';\nimport { MAT_PAGINATOR_DEFAULT_OPTIONS, MatPaginatorDefaultOptions } from '@angular/material/paginator';\nimport { MAT_TOOLTIP_DEFAULT_OPTIONS, MatTooltipDefaultOptions } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RouterModule } from '@angular/router';\nimport { MatSelectModule } from '@angular/material/select';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { AppComponent } from './app.component';\nimport { AddHeaderInterceptor } from './interceptors/add-header.interceptor';\nimport { MockedRequestsInterceptor } from './interceptors/mocked-requests.interceptor';\nimport { AppState, metaReducers, reducers } from './reducers';\nimport { environment } from '../environments/environment';\nimport { ConfirmationComponent } from './dialog/confirmation/confirmation.component';\nimport { ConfirmationDialogEffects } from './effects/confirmation-dialog.effects';\nimport { CountryEffects } from './effects/country.effects';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { GlobalEffects } from './effects/global.effects';\nimport { BreadcrumbsModule } from './global/breadcrumbs/breadcrumbs.module';\nimport { WrapperListingModule } from './global/wrapper/listing/wrapper-listing.module';\nimport { LayoutModule } from './global/layout/layout.module';\nimport { AuthEffects } from './effects/auth.effects';\nimport { AuthActions } from './actions/auth.actions';\nimport { AuthService } from './auth/auth.service';\nimport { DTMS_CONFIG_PROVIDER } from './config/config.setup';\nimport { DibPipesModule } from './utils/pipes/pipes.module';\nimport { ApiCache, ApiCacheWithMap } from './services/api-cache.service';\nimport { CacheInterceptor } from './interceptors/cache.interceptor';\nimport { UnauthenticatedInterceptor } from './interceptors/unauthenticated.interceptor';\nimport { getJwtClaims } from './utils/helpers/get-jwt-claims';\nimport { DialogModule } from './global/dialog/dialog.module';\nimport { SplitSortParamInterceptor } from './interceptors/split-sort-param.interceptor';\n\n@NgModule({\n  declarations: [AppComponent, ConfirmationComponent],\n  imports: [\n    LayoutModule,\n    WrapperListingModule,\n    BreadcrumbsModule,\n    DashboardModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatSelectModule,\n    StoreRouterConnectingModule.forRoot(),\n    EffectsModule.forRoot([AuthEffects, GlobalEffects, ConfirmationDialogEffects, CountryEffects]),\n    StoreModule.forRoot(reducers, {\n      metaReducers,\n      runtimeChecks: {\n        strictStateImmutability: false,\n        strictActionImmutability: false,\n      },\n    }),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    MatInputModule,\n    RouterModule,\n    DibPipesModule,\n    DialogModule,\n  ],\n  providers: [\n    DTMS_CONFIG_PROVIDER,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (store: Store<AppState>, authService: AuthService) => {\n        return () => {\n          const user = authService.getUser();\n\n          if (user.token) {\n            const tokenExpired = Date.now() < getJwtClaims(user.token).exp;\n\n            // If token is expired we will trigger Logout action to clear the user session and redirect to login\n            store.dispatch(\n              tokenExpired ? AuthActions.logout('Session expired') : AuthActions.setLoggedInUser({ data: user })\n            );\n          }\n        };\n      },\n      deps: [Store, AuthService],\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AddHeaderInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: SplitSortParamInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UnauthenticatedInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: MockedRequestsInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: CacheInterceptor,\n      multi: true,\n    },\n\n    // Material defaults\n    {\n      provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n      useValue: { showDelay: 200 } as MatTooltipDefaultOptions,\n    },\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: { appearance: 'outline' } as MatFormFieldDefaultOptions,\n    },\n    {\n      provide: MAT_PAGINATOR_DEFAULT_OPTIONS,\n      useValue: {\n        formFieldAppearance: 'legacy',\n        showFirstLastButtons: true,\n        pageSizeOptions: [10, 50, 100],\n      } as MatPaginatorDefaultOptions,\n    },\n    {\n      provide: MAT_DIALOG_DEFAULT_OPTIONS,\n      useValue: {\n        autoFocus: false,\n        restoreFocus: true,\n        hasBackdrop: true,\n        disableClose: true,\n        maxWidth: 700,\n        minWidth: 500,\n        position: {\n          top: '100px',\n        },\n      } as MatDialogConfig,\n    },\n    // API caching implementation\n    { provide: ApiCache, useClass: ApiCacheWithMap },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { isLoggedIn } from '../reducers/auth.reducer';\nimport { AppState } from '../reducers';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private store: Store<AppState>, private router: Router) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    const url: string = state.url;\n\n    return this.store.select(isLoggedIn).pipe(\n      take(1),\n      map((loggedIn) => {\n        if (loggedIn) return true;\n\n        // Redirect to the login page and preserve the redirect URL\n        this.router.navigate(['/auth/login'], { queryParams: { redirectTo: url } });\n\n        return false;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { tap, map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../models/user.model';\nimport { ForgotPasswordResponse, ValidatePasswordTokenResponse } from '../reducers/common.interfaces';\nimport { ApiCache } from '../services/api-cache.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private baseUrl = '/api/tmcc';\n\n  constructor(private http: HttpClient, private requestCache: ApiCache) {}\n\n  login(data: { username: string; password: string }): Observable<User> {\n    return this.http\n      .post<User>(`${this.baseUrl}/authenticate`, { username: data.username, password: data.password })\n      .pipe(\n        tap((user) => {\n          if (user && user.token) this.setUser(user, user.token);\n        })\n      );\n  }\n\n  forgotPassword(email: string): Observable<ForgotPasswordResponse> {\n    return this.http.post(`${this.baseUrl}/users/forgot-password`, { email }).pipe(map(() => ({ email })));\n  }\n\n  activateNewPassword(token: string, password: string): Observable<User> {\n    return this.http.post<User>(`${this.baseUrl}/users/activate-new-password`, { token, password });\n  }\n\n  validatePasswordToken(token: string): Observable<boolean> {\n    return this.http\n      .get(`${this.baseUrl}/users/activate-new-password/${token}`)\n      .pipe(map((response: ValidatePasswordTokenResponse) => response.valid));\n  }\n\n  setNewPassword(token: string, password: string): Observable<User> {\n    return this.http.post<User>(`${this.baseUrl}/users/set-new-password`, { token, password });\n  }\n\n  validateSetPasswordToken(token: string): Observable<boolean> {\n    return this.http\n      .get(`${this.baseUrl}/users/set-new-password/${token}`)\n      .pipe(map((response: ValidatePasswordTokenResponse) => response.valid));\n  }\n\n  getUser(): User {\n    return JSON.parse(localStorage.getItem('currentUser')) || {};\n  }\n\n  setUser(user: User, token: User['token']): void {\n    localStorage.setItem('currentUser', JSON.stringify({ ...user, token }));\n  }\n\n  logout(): Observable<boolean> {\n    localStorage.removeItem('currentUser');\n    this.requestCache.clearAll();\n\n    return of(true);\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { BookingReferenceTypes } from './models/booking.model';\n\n@Component({\n  template: '',\n})\nexport abstract class BaseComponent implements OnDestroy {\n  protected subscriptions: Subscription;\n\n  constructor() {\n    this.subscriptions = new Subscription();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n    }\n  }\n\n  /**\n   * Custom match validator\n   * @param matchTo Name of the control to match to\n   * TODO: Find a better place to move this. Maybe create validation utility?\n   */\n  public matches(matchTo: string): (AbstractControl) => ValidationErrors | null {\n    return (control: AbstractControl): ValidationErrors | null => {\n      return !!control.parent && !!control.parent.value && control.value === control.parent.controls[matchTo].value\n        ? null\n        : { isMatching: false };\n    };\n  }\n\n  /**\n   * ReferenceType should only be kept if a BookingReference or FlightTicketNumber are set\n   * @param params Key value pair of params and their values that will be used\n   * TODO: Find a better place to move this. Maybe create validation helper utility?\n   */\n  public validateReferenceType(params: Record<string, string>): Record<string, string> {\n    if (!params.referenceType) {\n      // If there is no reference type we need to clear booking reference and flight ticket number fields\n      delete params.bookingReference;\n      delete params.flightTicketNumber;\n\n      return params;\n    }\n\n    switch (params.referenceType) {\n      // If we are searching for Flights we can enter either booking reference or a flight ticket number\n      case BookingReferenceTypes.Flight:\n        if (!params.bookingReference && !params.flightTicketNumber) delete params.referenceType;\n        break;\n      // Otherwise booking reference is required\n      default:\n        if (!params.bookingReference) delete params.referenceType;\n        break;\n    }\n\n    return params;\n  }\n}\n","import { APP_INITIALIZER } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { filter, takeWhile } from 'rxjs/operators';\nimport { tmc, TmcActions, TmcModel } from \"./tmc\";\nimport { AppState } from '../reducers';\nimport { Config } from './config.model';\nimport { TenantService } from '../services/tenant.service';\n\nexport function fetchConfigAndFillInTheStore(service: TenantService, store: Store<AppState>) {\n  return (): Promise<Config> =>\n    new Promise((resolve) => {\n      service\n        .getConfig()\n        // Only keep the subscription open until we get first valid config object\n        .pipe(takeWhile((config: Config) => !!config.tmc))\n        .subscribe((config: Config) => {\n          store.dispatch(TmcActions.setTmc({ tmc: config.tmc }));\n\n          resolve(config);\n        });\n    });\n}\n\nexport function makeSureWeHaveAKeyInTheStore(store: Store<AppState>) {\n  return (): Promise<TmcModel> =>\n    new Promise((resolve) => {\n      store\n        .select(tmc)\n        .pipe(\n          filter((tenant: TmcModel) => !!tenant?.id),\n          // Only keep the subscription open until we get first valid tenant object\n          takeWhile((tenant: TmcModel) => !!tenant?.id)\n        )\n        .subscribe((tenant: TmcModel) => resolve(tenant));\n    });\n}\n\nexport const DTMS_CONFIG_PROVIDER = [\n  TenantService,\n  {\n    provide: APP_INITIALIZER,\n    useFactory: fetchConfigAndFillInTheStore,\n    deps: [TenantService, Store],\n    multi: true,\n  },\n  {\n    provide: APP_INITIALIZER,\n    useFactory: makeSureWeHaveAKeyInTheStore,\n    deps: [Store],\n    multi: true,\n  },\n];\n","export * from './tmc.actions';\nexport * from './tmc.model';\nexport * from './tmc.reducer';\n","import { createActionGroup, props } from \"@ngrx/store\";\nimport { Tmc } from './tmc.model';\n\nexport const TmcActions = createActionGroup({\n  source: 'Tmc',\n  events: {\n    'Set Tmc': props<{ tmc: Tmc }>(),\n  },\n});\n","import { Injectable } from '@angular/core';\nimport { Adapter } from '../../models/adapter';\n\nexport interface Tmc {\n  id: string;\n  name: string;\n  logo?: string;\n  logoInverted?: string;\n  headline?: string;\n  platformLink: string;\n  adminLink: string;\n}\n\nexport interface TmcApiObject {\n  key: string;\n  name: string;\n  config: Record<string, any>;\n  topLevelDomainCW: string;\n  topLevelDomainTMCC: string;\n}\n\nexport class TmcModel implements Tmc {\n  constructor(\n    public id: string,\n    public name: string,\n    public logo: string,\n    public logoInverted: string,\n    public headline: string,\n    public platformLink: string,\n    public adminLink: string\n  ) {}\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TmcAdapter implements Adapter<Tmc> {\n  adapt(item: Tmc): TmcModel {\n    return new TmcModel(\n      item?.id,\n      item?.name,\n      item?.logo,\n      item?.logoInverted,\n      item?.headline,\n      item?.platformLink,\n      item?.adminLink\n    );\n  }\n}\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport { Tmc, TmcAdapter } from './tmc.model';\nimport { TmcActions } from \"./tmc.actions\";\n\nexport interface State {\n  tmc: Tmc;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: State = {\n  tmc: null,\n  loading: false,\n  error: null,\n};\n\nconst tmcReducer = createReducer(\n  initialState,\n  on(TmcActions.setTmc, (state: State, { tmc }) => ({\n    ...state,\n    tmc,\n    loading: false,\n  }))\n);\n\nexport function reducer(state: State | undefined, action: Action): State {\n  return tmcReducer(state, action);\n}\n\nexport const getState = createFeatureSelector<State>('tmc');\nexport const tmc = createSelector(getState, (state: State) => new TmcAdapter().adapt(state.tmc));\nexport const isTmcLoading = createSelector(getState, (state: State) => state.loading);\n","import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { noop, Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { selectUsersStats } from '../reducers/users.reducer';\nimport { AppState } from '../reducers';\nimport { BaseComponent } from '../base.component';\nimport { selectVendorsStats } from '../reducers/vendors.reducer';\nimport { BillingRequestActions } from '../actions/billing-requests.actions';\nimport { selectBillingRequestsStats } from '../reducers/billing-requests.reducer';\nimport { selectFeaturesStats } from '../reducers/features.reducer';\nimport { selectVatCategoriesStats } from '../reducers/vat-categories.reducer';\nimport { selectProductsStats } from '../reducers/products.reducer';\nimport { selectCompaniesStats } from '../reducers/companies.reducer';\nimport { DashboardStat } from '../reducers/common.interfaces';\nimport { VendorActions } from '../actions/vendors.actions';\nimport { FeatureActions } from '../actions/features.actions';\nimport { VatCategoryActions } from '../actions/vat-categories.actions';\nimport { CompanyActions } from '../actions/companies.actions';\nimport { ProductActions } from '../actions/products.actions';\nimport { loggedInUser } from '../reducers/auth.reducer';\nimport { UserActions } from '../actions/users.actions';\nimport { BillingRequestStatus } from '../models/billing-request.model';\nimport { selectCompanyUsersStats } from '../reducers/company-users.reducer';\nimport { CompanyUserActions } from '../actions/company-users.actions';\nimport { SystemMessageActions } from '../actions/system-messages.actions';\nimport { SystemMessageStatus } from '../models/system-message.model';\nimport { selectSystemMessagesStats } from '../reducers/system-messages.reducer';\nimport { BookingActions } from '../actions/bookings.actions';\nimport { selectBookingsStats } from '../reducers/bookings.reducer';\nimport { selectVendorsPaymentProvidersStats } from '../reducers/vendors-payment-providers.reducer';\nimport { VendorsPaymentProviderActions } from '../actions/vendors-payment-providers.actions';\n\ninterface ObservableItemStat {\n  observable$: Observable<DashboardStat>;\n  title: string;\n  link: string;\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent extends BaseComponent {\n  users$ = this.store.select(selectUsersStats);\n  vendors$ = this.store.select(selectVendorsStats);\n  vendorsPaymentProviders$ = this.store.select(selectVendorsPaymentProvidersStats);\n  features$ = this.store.select(selectFeaturesStats);\n  categories$ = this.store.select(selectVatCategoriesStats);\n  products$ = this.store.select(selectProductsStats);\n  billingRequests$ = this.store.select(selectBillingRequestsStats);\n  systemMessages$ = this.store.select(selectSystemMessagesStats);\n  companies$ = this.store.select(selectCompaniesStats);\n  companyUsers$ = this.store.select(selectCompanyUsersStats);\n  bookings$ = this.store.select(selectBookingsStats);\n\n  public overviewStats: ObservableItemStat[];\n  public openItemsStats: ObservableItemStat[];\n\n  constructor(private store: Store<AppState>, private router: Router) {\n    super();\n\n    // Open item stats\n    this.setupOpenItemStats();\n\n    // Overview stats\n    this.setupOverviewStats();\n    this.setupUserStats();\n  }\n\n  private setupOpenItemStats() {\n    this.openItemsStats = [\n      { observable$: this.billingRequests$, title: 'Billing Requests', link: '/billing-requests' },\n      { observable$: this.systemMessages$, title: 'Open Messages', link: '/system-messages' },\n    ];\n    this.store.dispatch(\n      BillingRequestActions.loadRequests({\n        params: { page: 1, size: 1, billingProfileRequestStatus: BillingRequestStatus.PENDING },\n      })\n    );\n    this.store.dispatch(\n      SystemMessageActions.loadSystemMessages({ params: { page: 1, size: 1, status: SystemMessageStatus.OPENED } })\n    );\n  }\n\n  private setupOverviewStats() {\n    this.overviewStats = [\n      { observable$: this.companies$, title: 'Companies', link: '/companies' },\n      { observable$: this.companyUsers$, title: 'Company Users', link: '/companies/users' },\n      { observable$: this.bookings$, title: 'Bookings', link: '/companies/bookings' },\n    ];\n    this.store.dispatch(CompanyActions.loadCompanies({ params: { page: 1, size: 1 } }));\n    this.store.dispatch(CompanyUserActions.loadCompanyUsers({ params: { page: 1, size: 1 } }));\n    this.store.dispatch(BookingActions.loadBookings({ params: { page: 1, size: 1 } }));\n  }\n\n  private setupUserStats() {\n    this.store\n      .select(loggedInUser)\n      .pipe(take(1))\n      .subscribe((user) => {\n        // Only DIB super admins can view features and generic product related modules\n        if (user.isSuperAdmin()) {\n          this.overviewStats = [\n            { observable$: this.features$, title: 'Features', link: '/features' },\n            { observable$: this.products$, title: 'Products', link: '/products' },\n            { observable$: this.categories$, title: 'Product Vat Categories', link: '/products/vat-categories' },\n            { observable$: this.vendors$, title: 'Product Vendors', link: '/products/vendors' },\n            {\n              observable$: this.vendorsPaymentProviders$,\n              title: 'Vendors Payment Providers',\n              link: '/products/vendors/payment-providers',\n            },\n            ...this.overviewStats,\n          ];\n\n          this.store.dispatch(\n            VendorsPaymentProviderActions.loadVendorsPaymentProviders({ params: { page: 1, size: 1 } })\n          );\n          this.store.dispatch(VendorActions.loadVendors({ params: { page: 1, size: 1 } }));\n          this.store.dispatch(FeatureActions.loadFeatures());\n          this.store.dispatch(VatCategoryActions.loadVatCategories({ params: { page: 1, size: 1 } }));\n          this.store.dispatch(ProductActions.loadProducts({ params: { page: 1, size: 1 } }));\n        }\n\n        // Only admin users can view users module\n        if (user.hasAdminAccess()) {\n          this.overviewStats.unshift({ observable$: this.users$, title: 'Users', link: '/users' });\n          this.store.dispatch(UserActions.loadUsers({ params: { page: 1, size: 1 } }));\n        }\n      });\n  }\n\n  onSearchCompanies(params: Record<string, string>): void {\n    this.router.navigate(['/companies'], { queryParams: params }).then(noop);\n  }\n\n  onSearchUsers(params: Record<string, string>): void {\n    this.router.navigate(['/companies/users'], { queryParams: params }).then(noop);\n  }\n\n  onSearchBookings(params: Record<string, string>): void {\n    this.router.navigate(['/companies/bookings'], { queryParams: this.validateReferenceType(params) }).then(noop);\n  }\n}\n","<dib-wrapper-main>\n  <dib-breadcrumbs>\n    <dib-breadcrumb label=\"Dashboard\" route=\"/\"></dib-breadcrumb>\n  </dib-breadcrumbs>\n\n  <div class=\"base-dashboard-grid m-6 grid grid-flow-col gap-6 sm:grid-flow-row sm:grid-cols-none\">\n    <div class=\"grid gap-6 sm:grid-flow-col xs:grid-flow-row\">\n      <dib-wrapper-widget class=\"min-w-max\">\n        <ng-container slot=\"title\">Open work items</ng-container>\n        <ng-container slot=\"content\">\n          <div class=\"grid grid-cols-2 gap-6\">\n            <ng-container *ngFor=\"let stat of openItemsStats\">\n              <dib-wrapper-stat\n                [loading]=\"(stat.observable$ | async).loading\"\n                [count]=\"(stat.observable$ | async).count\"\n                [link]=\"stat.link\"\n                [title]=\"stat.title\"\n              ></dib-wrapper-stat>\n            </ng-container>\n          </div>\n        </ng-container>\n      </dib-wrapper-widget>\n      <dib-wrapper-widget class=\"min-w-max\">\n        <ng-container slot=\"title\">Overview</ng-container>\n        <ng-container slot=\"content\">\n          <div class=\"grid grid-cols-2 gap-6 sm:grid-cols-3 xs:grid-cols-2\">\n            <ng-container *ngFor=\"let stat of overviewStats\">\n              <dib-wrapper-stat\n                [loading]=\"(stat.observable$ | async).loading\"\n                [count]=\"(stat.observable$ | async).count\"\n                [link]=\"stat.link\"\n                [title]=\"stat.title\"\n              ></dib-wrapper-stat>\n            </ng-container>\n          </div>\n        </ng-container>\n      </dib-wrapper-widget>\n    </div>\n    <div class=\"row-end-1\">\n      <dib-wrapper-widget>\n        <ng-container slot=\"title\">Quick search</ng-container>\n        <ng-container slot=\"content\">\n          <dib-quick-search-wrapper\n            activeTab=\"users\"\n            (searchCompanies)=\"onSearchCompanies($event)\"\n            (searchUsers)=\"onSearchUsers($event)\"\n            (searchBookings)=\"onSearchBookings($event)\"\n          ></dib-quick-search-wrapper>\n        </ng-container>\n      </dib-wrapper-widget>\n    </div>\n  </div>\n</dib-wrapper-main>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EffectsModule } from '@ngrx/effects';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { BillingRequestEffects } from '../effects/billing-request.effects';\nimport { VendorEffects } from '../effects/vendor.effects';\nimport { UserEffects } from '../effects/user.effects';\nimport { DashboardComponent } from './dashboard.component';\nimport { AppRoutingModule } from '../app-routing.module';\nimport { FeatureEffects } from '../effects/feature.effects';\nimport { VatCategoryEffects } from '../effects/vat-category.effects';\nimport { ProductEffects } from '../effects/product.effects';\nimport { BreadcrumbsModule } from '../global/breadcrumbs/breadcrumbs.module';\nimport { WrapperWidgetModule } from '../global/wrapper/widget/wrapper-widget.module';\nimport { WrapperStatModule } from '../global/wrapper/stat/wrapper-stat.module';\nimport { CompanyEffects } from '../effects/company.effects';\nimport { WrapperMainModule } from '../global/wrapper/main/wrapper-main.module';\nimport { CompanyUserEffects } from '../effects/company-user.effects';\nimport { WrapperSearchModule } from '../global/wrapper/search/wrapper-search.module';\nimport { SystemMessageEffects } from '../effects/system-message.effects';\nimport { BookingEffects } from '../effects/booking.effects';\nimport { VendorsPaymentProviderEffects } from '../effects/vendor-payment-provider.effects';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    EffectsModule.forFeature([\n      BillingRequestEffects,\n      VendorEffects,\n      VendorsPaymentProviderEffects,\n      UserEffects,\n      FeatureEffects,\n      VatCategoryEffects,\n      ProductEffects,\n      CompanyEffects,\n      CompanyUserEffects,\n      SystemMessageEffects,\n      BookingEffects,\n    ]),\n    AppRoutingModule,\n    BreadcrumbsModule,\n    WrapperWidgetModule,\n    WrapperStatModule,\n    MatTabsModule,\n    WrapperMainModule,\n    WrapperSearchModule,\n  ],\n  declarations: [DashboardComponent],\n  providers: [],\n})\nexport class DashboardModule {}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ConfirmationData } from '../../actions/confirmation-dialog.actions';\n\n@Component({\n  selector: 'app-confirmation',\n  templateUrl: './confirmation.component.html',\n})\nexport class ConfirmationComponent implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmationComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmationData\n  ) {}\n\n  ngOnInit(): void {}\n}\n","<dib-dialog-title [closable]=\"false\">Please confirm</dib-dialog-title>\n<mat-dialog-content class=\"mt-4 mb-6\" [innerHTML]=\"data.template\"></mat-dialog-content>\n<mat-dialog-actions class=\"mb-1 justify-end\">\n  <button mat-button [mat-dialog-close]=\"false\">{{ data.cancel?.label || 'Cancel' }}</button>\n  <button mat-stroked-button color=\"{{ data.confirm.color || 'primary' }}\" [mat-dialog-close]=\"true\">\n    {{ data.confirm.label || 'Delete' | dibUpperFirst }}\n  </button>\n</mat-dialog-actions>\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { map, catchError, tap, switchMap, withLatestFrom } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { noop, of } from 'rxjs';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { AppState } from '../reducers';\nimport { AuthActions } from '../actions/auth.actions';\nimport { AuthService } from '../auth/auth.service';\nimport { GlobalActions } from '../actions/global.actions';\nimport { UserActions } from '../actions/users.actions';\nimport { selectQueryParam } from '../reducers/router.reducer';\n\n@Injectable()\nexport class AuthEffects {\n  login$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthActions.login),\n      tap(() => this.store.dispatch(AuthActions.loginStart())),\n      switchMap((data) =>\n        this.authService.login(data).pipe(\n          map((user) => {\n            return AuthActions.loginSuccess({ data: user });\n          }),\n          catchError(() => {\n            return of(AuthActions.loginError({ error: 'Login failed. Please try again.' }));\n          })\n        )\n      )\n    )\n  );\n\n  logout$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthActions.logout),\n      tap(() => this.store.dispatch(AuthActions.logoutStart())),\n      switchMap(({ message }) =>\n        this.authService.logout().pipe(\n          map(() => {\n            return AuthActions.logoutSuccess(message);\n          }),\n          catchError(() => {\n            return of(AuthActions.logoutError({ error: 'Logout failed. Please try again.' }));\n          })\n        )\n      )\n    )\n  );\n\n  forgotPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthActions.forgotPassword),\n      tap(() => this.store.dispatch(AuthActions.forgotPasswordStart())),\n      switchMap(({ email }) =>\n        this.authService.forgotPassword(email).pipe(\n          map(() => {\n            return AuthActions.forgotPasswordSuccess();\n          }),\n          catchError(() => {\n            return of(AuthActions.forgotPasswordError({ error: 'Request failed. Please try again.' }));\n          })\n        )\n      )\n    )\n  );\n\n  changePassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthActions.changePassword),\n      tap(() => this.store.dispatch(AuthActions.changePasswordStart())),\n      switchMap(({ id, password }) =>\n        this.authService.activateNewPassword(id, password).pipe(\n          map(() => {\n            return AuthActions.changePasswordSuccess();\n          }),\n          catchError(() => {\n            return of(AuthActions.changePasswordError({ error: 'Request failed. Please try again.' }));\n          })\n        )\n      )\n    )\n  );\n\n  setPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthActions.setPassword),\n      tap(() => this.store.dispatch(AuthActions.setPasswordStart())),\n      switchMap(({ id, password }) =>\n        this.authService.setNewPassword(id, password).pipe(\n          map(() => {\n            return AuthActions.setPasswordSuccess();\n          }),\n          catchError(() => {\n            return of(AuthActions.setPasswordError({ error: 'Request failed. Please try again.' }));\n          })\n        )\n      )\n    )\n  );\n\n  syncLocalStorage$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(UserActions.saveUserDetailsSuccess),\n        tap(({ data }) => {\n          const loggedInUser = this.authService.getUser();\n\n          // If we have updated currently logged in user\n          if (loggedInUser.id === data.id) {\n            // We will persist the changes in the local storage\n            this.authService.setUser(data, loggedInUser.token);\n          }\n        })\n      ),\n    { dispatch: false }\n  );\n\n  loginSuccess$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AuthActions.loginSuccess),\n        withLatestFrom(this.store.select(selectQueryParam('redirectTo'))),\n        tap(([, redirectTo]) => {\n          // Show success message and redirect to application\n          this.store.dispatch(GlobalActions.showSuccessMessage({ message: 'Logged in successfully' }));\n          this.router.navigateByUrl(redirectTo || '/').then(noop);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  logoutSuccess$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AuthActions.logoutSuccess),\n        tap(({ message }) => {\n          // Show success message and redirect to the login page\n          this.store.dispatch(GlobalActions.showSuccessMessage({ message: message || 'Logged out successfully' }));\n          return this.router.navigate(['/auth/login']);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  showToast$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(\n          AuthActions.loginError,\n          AuthActions.logoutError,\n          AuthActions.forgotPasswordError,\n          AuthActions.changePasswordError,\n          AuthActions.setPasswordError\n        ),\n        tap(({ error }) => {\n          this.store.dispatch(GlobalActions.showErrorMessage({ message: error }));\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<AppState>,\n    private snackBar: MatSnackBar,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { map, catchError, tap, switchMap } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { AppState } from '../reducers';\nimport { BillingRequestActions } from '../actions/billing-requests.actions';\nimport { BillingRequestService } from '../services/billing-request.service';\nimport { BillingRequest, BillingRequestStatus } from '../models/billing-request.model';\nimport { GlobalActions } from '../actions/global.actions';\nimport { PaginationData } from '../models/pagination.model';\n\n@Injectable()\nexport class BillingRequestEffects {\n  loadBillingRequests$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(BillingRequestActions.loadRequests),\n      tap(() => this.store.dispatch(BillingRequestActions.loadRequestsStart())),\n      switchMap(({ params }) =>\n        this.billingRequestService.list(params).pipe(\n          map((response: { data: BillingRequest[]; pagination: PaginationData }) => {\n            return BillingRequestActions.loadRequestsSuccess({ data: response.data, pagination: response.pagination });\n          }),\n          catchError(() => {\n            return of(\n              BillingRequestActions.loadRequestsError({\n                error: 'Billing requests could not be loaded. Please try again.',\n              })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  changeBillingRequestStatus$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(BillingRequestActions.changeStatus),\n      tap(() => this.store.dispatch(BillingRequestActions.changeStatusStart())),\n      switchMap(({ data }) =>\n        this.billingRequestService.update(data).pipe(\n          map(() => {\n            const statusMap = {\n              [BillingRequestStatus.ENABLED]: 'approved',\n              [BillingRequestStatus.BLOCKED]: 'blocked',\n              [BillingRequestStatus.DENIED]: 'denied',\n            };\n\n            this.store.dispatch(\n              GlobalActions.showSuccessMessage({\n                message: `Billing request ${statusMap[data.billingProfileRequestStatus]}`,\n              })\n            );\n            return BillingRequestActions.changeStatusSuccess({ data });\n          }),\n          catchError(() => {\n            return of(\n              BillingRequestActions.changeStatusError({ error: 'Billing request update failed. Please try again.' })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  showToast$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(BillingRequestActions.loadRequestsError, BillingRequestActions.changeStatusError),\n        tap((action) => {\n          this.store.dispatch(GlobalActions.showErrorMessage({ message: action.error }));\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<AppState>,\n    private billingRequestService: BillingRequestService\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { map, catchError, tap, switchMap } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { AppState } from '../reducers';\nimport { BookingActions } from '../actions/bookings.actions';\nimport { BookingService } from '../services/booking.service';\nimport { Booking } from '../models/booking.model';\nimport { GlobalActions } from '../actions/global.actions';\nimport { BookingListItem } from '../models/booking-list-item.model';\nimport { PaginationData } from '../models/pagination.model';\n\n@Injectable()\nexport class BookingEffects {\n  loadBookings$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(BookingActions.loadBookings),\n      tap(() => this.store.dispatch(BookingActions.loadBookingsStart())),\n      switchMap((action) =>\n        this.bookingService.list(action.params).pipe(\n          map((response: { data: BookingListItem[]; pagination: PaginationData }) => {\n            return BookingActions.loadBookingsSuccess({ data: response.data, pagination: response.pagination });\n          }),\n          catchError(() => {\n            return of(BookingActions.loadBookingsError({ error: 'Bookings could not be loaded. Please try again.' }));\n          })\n        )\n      )\n    )\n  );\n\n  loadBooking$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(BookingActions.loadBooking),\n      tap(() => this.store.dispatch(BookingActions.loadBookingStart())),\n      switchMap((action) =>\n        this.bookingService.getDetails(action.id).pipe(\n          map((response: Booking) => {\n            return BookingActions.loadBookingSuccess({ data: response });\n          }),\n          catchError(() => {\n            return of(\n              BookingActions.loadBookingError({ error: 'Booking details could not be loaded. Please try again.' })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  loadAndSelectBooking$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(BookingActions.loadAndSelectBooking),\n      tap(() => this.store.dispatch(BookingActions.loadAndSelectBookingStart())),\n      switchMap((action) =>\n        this.bookingService.getDetails(action.id).pipe(\n          map((response: Booking) => {\n            return BookingActions.loadAndSelectBookingSuccess({ data: response });\n          }),\n          catchError(() => {\n            return of(\n              BookingActions.loadAndSelectBookingError({\n                error: 'Booking details could not be loaded. Please try again.',\n              })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  saveBookingDetails$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(BookingActions.saveBookingDetails),\n      tap(() => this.store.dispatch(BookingActions.saveBookingDetailsStart())),\n      switchMap((action) =>\n        this.bookingService.update(action.data).pipe(\n          map((response) => {\n            this.store.dispatch(GlobalActions.showSuccessMessage({ message: `Booking details saved.` }));\n            return BookingActions.saveBookingDetailsSuccess({ data: response });\n          }),\n          catchError(() => {\n            return of(\n              BookingActions.saveBookingDetailsError({ error: 'Booking details could not be saved. Please try again.' })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  getReferenceTypes$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(BookingActions.loadReferenceTypes),\n      tap(() => this.store.dispatch(BookingActions.loadReferenceTypesStart())),\n      switchMap(() =>\n        this.bookingService.getReferenceTypes().pipe(\n          map((response) => {\n            return BookingActions.loadReferenceTypesSuccess({ data: response });\n          }),\n          catchError(() => {\n            return of(\n              BookingActions.loadReferenceTypesError({\n                error: 'Reference types could not be loaded. Please try again.',\n              })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  showToast$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(\n          BookingActions.loadBookingsError,\n          BookingActions.loadBookingError,\n          BookingActions.loadAndSelectBookingError,\n          BookingActions.saveBookingDetailsError,\n          BookingActions.loadReferenceTypesError\n        ),\n        tap((action) => {\n          this.store.dispatch(GlobalActions.showErrorMessage({ message: action.error }));\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(private actions$: Actions, private store: Store<AppState>, private bookingService: BookingService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { map, catchError, tap, switchMap } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { AppState } from '../reducers';\nimport { CompanyUserActions } from '../actions/company-users.actions';\nimport { CompanyUserService } from '../services/company-user.service';\nimport { CompanyUser } from '../models/company-user.model';\nimport { GlobalActions } from '../actions/global.actions';\nimport { PaginationData } from '../models/pagination.model';\n\n@Injectable()\nexport class CompanyUserEffects {\n  loadCompanyUsers$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(CompanyUserActions.loadCompanyUsers),\n      tap(() => this.store.dispatch(CompanyUserActions.loadCompanyUsersStart())),\n      switchMap((action) =>\n        this.companyUserService.list(action.params).pipe(\n          map((response: { data: CompanyUser[]; pagination: PaginationData }) => {\n            return CompanyUserActions.loadCompanyUsersSuccess({ data: response.data, pagination: response.pagination });\n          }),\n          catchError(() => {\n            return of(\n              CompanyUserActions.loadCompanyUsersError({\n                error: 'Company users could not be loaded. Please try again.',\n              })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  loadCompanyUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(CompanyUserActions.loadCompanyUser),\n      tap(() => this.store.dispatch(CompanyUserActions.loadCompanyUserStart())),\n      switchMap((action) =>\n        this.companyUserService.getDetails(action.id).pipe(\n          map((response: CompanyUser) => {\n            return CompanyUserActions.loadCompanyUserSuccess({ data: response });\n          }),\n          catchError(() => {\n            return of(\n              CompanyUserActions.loadCompanyUserError({\n                error: 'Company user details could not be loaded. Please try again.',\n              })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  loadAndSelectCompanyUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(CompanyUserActions.loadAndSelectCompanyUser),\n      tap(() => this.store.dispatch(CompanyUserActions.loadAndSelectCompanyUserStart())),\n      switchMap((action) =>\n        this.companyUserService.getDetails(action.id).pipe(\n          map((response: CompanyUser) => {\n            return CompanyUserActions.loadAndSelectCompanyUserSuccess({ data: response });\n          }),\n          catchError(() => {\n            return of(\n              CompanyUserActions.loadAndSelectCompanyUserError({\n                error: 'Company user details could not be loaded. Please try again.',\n              })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  saveCompanyUserDetails$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(CompanyUserActions.saveCompanyUserDetails),\n      tap(() => this.store.dispatch(CompanyUserActions.saveCompanyUserDetailsStart())),\n      switchMap((action) =>\n        this.companyUserService.saveDetails(action.data).pipe(\n          map((response) => {\n            this.store.dispatch(GlobalActions.showSuccessMessage({ message: `Company user details saved.` }));\n            return CompanyUserActions.saveCompanyUserDetailsSuccess({ data: response });\n          }),\n          catchError(() => {\n            return of(\n              CompanyUserActions.saveCompanyUserDetailsError({\n                error: 'Company user details could not be saved. Please try again.',\n              })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  showToast$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(\n          CompanyUserActions.loadCompanyUsersError,\n          CompanyUserActions.loadCompanyUserError,\n          CompanyUserActions.loadAndSelectCompanyUserError,\n          CompanyUserActions.saveCompanyUserDetailsError\n        ),\n        tap((action) => {\n          this.store.dispatch(GlobalActions.showErrorMessage({ message: action.error }));\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<AppState>,\n    private companyUserService: CompanyUserService\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { map, catchError, tap, switchMap } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { AppState } from '../reducers';\nimport { CompanyActions } from '../actions/companies.actions';\nimport { CompanyService } from '../services/company.service';\nimport { Company } from '../models/company.model';\nimport { GlobalActions } from '../actions/global.actions';\nimport { PaginationData } from '../models/pagination.model';\n\n@Injectable()\nexport class CompanyEffects {\n  loadCompanies$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(CompanyActions.loadCompanies),\n      tap(() => this.store.dispatch(CompanyActions.loadCompaniesStart())),\n      switchMap((action) =>\n        this.companyService.list(action.params).pipe(\n          map((response: { data: Company[]; pagination: PaginationData }) => {\n            return CompanyActions.loadCompaniesSuccess({ data: response.data, pagination: response.pagination });\n          }),\n          catchError(() => {\n            return of(CompanyActions.loadCompaniesError({ error: 'Companies could not be loaded. Please try again.' }));\n          })\n        )\n      )\n    )\n  );\n\n  loadCompany$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(CompanyActions.loadCompany),\n      tap(() => this.store.dispatch(CompanyActions.loadCompanyStart())),\n      switchMap((action) =>\n        this.companyService.getDetails(action.id).pipe(\n          map((response: Company) => {\n            return CompanyActions.loadCompanySuccess({ data: response });\n          }),\n          catchError(() => {\n            return of(\n              CompanyActions.loadCompanyError({ error: 'Company details could not be loaded. Please try again.' })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  saveCompanyDetails$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(CompanyActions.saveCompanyDetails),\n      tap(() => this.store.dispatch(CompanyActions.saveCompanyDetailsStart())),\n      switchMap((action) =>\n        this.companyService.saveDetails(action.data).pipe(\n          map((response) => {\n            this.store.dispatch(GlobalActions.showSuccessMessage({ message: `Company details saved.` }));\n            return CompanyActions.saveCompanyDetailsSuccess({ data: response });\n          }),\n          catchError(() => {\n            return of(\n              CompanyActions.saveCompanyDetailsError({ error: 'Company details could not be saved. Please try again.' })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  deleteCompany$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(CompanyActions.deleteCompany),\n      tap(() => this.store.dispatch(CompanyActions.deleteCompanyStart())),\n      switchMap((action) =>\n        this.companyService.delete(action.data).pipe(\n          map(() => {\n            this.store.dispatch(GlobalActions.showSuccessMessage({ message: `Company successfully deleted.` }));\n            return CompanyActions.deleteCompanySuccess({ data: action.data });\n          }),\n          catchError(() => {\n            return of(CompanyActions.deleteCompanyError({ error: 'Company could not be deleted. Please try again.' }));\n          })\n        )\n      )\n    )\n  );\n\n  toggleCompanySubscriptionStatus$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(CompanyActions.toggleCompanySubscriptionStatus),\n      tap(() => this.store.dispatch(CompanyActions.toggleCompanySubscriptionStatusStart())),\n      switchMap(({ data }) =>\n        this.companyService.toggleSubscriptionStatus(data).pipe(\n          map((company) => {\n            this.store.dispatch(GlobalActions.showSuccessMessage({ message: `Company status successfully changed.` }));\n            return CompanyActions.toggleCompanySubscriptionStatusSuccess({ data: company });\n          }),\n          catchError(() => {\n            return of(\n              CompanyActions.toggleCompanySubscriptionStatusError({\n                error: 'Company status could not be changed. Please try again.',\n              })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  showToast$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(\n          CompanyActions.loadCompaniesError,\n          CompanyActions.loadCompanyError,\n          CompanyActions.saveCompanyDetailsError,\n          CompanyActions.toggleCompanySubscriptionStatusError,\n          CompanyActions.deleteCompanyError\n        ),\n        tap((action) => {\n          this.store.dispatch(GlobalActions.showErrorMessage({ message: action.error }));\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(private actions$: Actions, private store: Store<AppState>, private companyService: CompanyService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { tap } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AppState } from '../reducers';\nimport { ConfirmationDialogActions } from '../actions/confirmation-dialog.actions';\nimport { ConfirmationComponent } from '../dialog/confirmation/confirmation.component';\n\n@Injectable()\nexport class ConfirmationDialogEffects {\n  showDialog$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(ConfirmationDialogActions.show),\n        tap((action) => {\n          const dialogRef = this.dialog.open(ConfirmationComponent, {\n            maxWidth: 500,\n            minWidth: 300,\n            data: action.data,\n          });\n\n          dialogRef.afterClosed().subscribe((confirmed) => {\n            if (confirmed === true && action.ok) action.ok();\n            if (confirmed === false && action.cancel) action.cancel();\n          });\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(private actions$: Actions, private store: Store<AppState>, private dialog: MatDialog) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { map, catchError, tap, switchMap } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { AppState } from '../reducers';\nimport { CountryService } from '../services/country.service';\nimport { GlobalActions } from '../actions/global.actions';\nimport { CountryActions } from '../actions/countries.actions';\n\n@Injectable()\nexport class CountryEffects {\n  loadCountries$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(CountryActions.loadCountries),\n      tap(() => this.store.dispatch(CountryActions.loadCountriesStart())),\n      switchMap(() =>\n        this.countryService.list().pipe(\n          map((countries) => {\n            return CountryActions.loadCountriesSuccess({ data: countries });\n          }),\n          catchError(() => {\n            return of(CountryActions.loadCountriesError({ error: 'Countries could not be loaded. Please try again.' }));\n          })\n        )\n      )\n    )\n  );\n\n  showToast$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(CountryActions.loadCountriesError),\n        tap(({ error }) => {\n          this.store.dispatch(GlobalActions.showErrorMessage({ message: error }));\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(private actions$: Actions, private store: Store<AppState>, private countryService: CountryService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { map, catchError, tap, switchMap } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { AppState } from '../reducers';\nimport { FeatureService } from '../services/feature.service';\nimport { GlobalActions } from '../actions/global.actions';\nimport { FeatureActions } from '../actions/features.actions';\n\n@Injectable()\nexport class FeatureEffects {\n  loadFeatures$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(FeatureActions.loadFeatures),\n      tap(() => this.store.dispatch(FeatureActions.loadFeaturesStart())),\n      switchMap(() =>\n        this.featureService.list().pipe(\n          map((features) => {\n            return FeatureActions.loadFeaturesSuccess({ data: features });\n          }),\n          catchError(() => {\n            return of(FeatureActions.loadFeaturesError({ error: 'Features could not be loaded. Please try again.' }));\n          })\n        )\n      )\n    )\n  );\n\n  toggleFeatureStatus$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(FeatureActions.toggleFeatureStatus),\n      tap(() => this.store.dispatch(FeatureActions.toggleFeatureStatusStart())),\n      switchMap(({ data }) =>\n        this.featureService.toggleStatus(data).pipe(\n          map((feature) => {\n            const status = feature.enabled ? 'enabled' : 'disabled';\n            this.store.dispatch(GlobalActions.showSuccessMessage({ message: `Feature successfully ${status}.` }));\n            return FeatureActions.toggleFeatureStatusSuccess({ data: feature });\n          }),\n          catchError(() => {\n            return of(\n              FeatureActions.toggleFeatureStatusError({\n                error: 'Feature status could not be changed. Please try again.',\n              })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  showToast$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(FeatureActions.loadFeaturesError, FeatureActions.toggleFeatureStatusError),\n        tap(({ error }) => {\n          this.store.dispatch(GlobalActions.showErrorMessage({ message: error }));\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(private actions$: Actions, private store: Store<AppState>, private featureService: FeatureService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { tap } from 'rxjs/operators';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GlobalActions } from '../actions/global.actions';\n\n@Injectable()\nexport class GlobalEffects {\n  showSuccessToast$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(GlobalActions.showSuccessMessage),\n        tap((action) => {\n          // If no action button label is sent we default to null, which means there will be no button\n          const buttonLabel = action.action === undefined ? null : action.action;\n\n          // Default is 4000ms\n          const duration = action.duration === undefined ? 4000 : action.duration;\n\n          return this.snackBar.open(action.message, buttonLabel, {\n            duration,\n            panelClass: ['snackbar-success'],\n            horizontalPosition: 'center',\n            verticalPosition: 'bottom',\n          });\n        })\n      ),\n    { dispatch: false }\n  );\n\n  showErrorToast$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(GlobalActions.showErrorMessage),\n        tap((action) => {\n          // If no action button label is sent we default to OK, but user can still send null to remove action button\n          const buttonLabel = action.action === undefined ? 'OK' : action.action;\n\n          // Default is 10000ms\n          const duration = action.duration === undefined ? 10000 : action.duration;\n\n          return this.snackBar.open(action.message, buttonLabel, {\n            duration,\n            panelClass: ['snackbar-error'],\n            horizontalPosition: 'center',\n            verticalPosition: 'bottom',\n          });\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(private actions$: Actions, private snackBar: MatSnackBar) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { map, catchError, tap, switchMap } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { AppState } from '../reducers';\nimport { ProductService } from '../services/product.service';\nimport { Product } from '../models/product.model';\nimport { GlobalActions } from '../actions/global.actions';\nimport { PaginationData } from '../models/pagination.model';\nimport { ProductActions } from '../actions/products.actions';\n\n@Injectable()\nexport class ProductEffects {\n  loadProducts$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ProductActions.loadProducts),\n      tap(() => this.store.dispatch(ProductActions.loadProductsStart())),\n      switchMap(({ params }) =>\n        this.productService.list(params).pipe(\n          map((response: { data: Product[]; pagination: PaginationData }) => {\n            return ProductActions.loadProductsSuccess({ data: response.data, pagination: response.pagination });\n          }),\n          catchError(() => {\n            return of(ProductActions.loadProductsError({ error: 'Products could not be loaded. Please try again.' }));\n          })\n        )\n      )\n    )\n  );\n\n  saveProductDetails$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ProductActions.saveProductDetails),\n      tap(() => this.store.dispatch(ProductActions.saveProductDetailsStart())),\n      switchMap(({ data }) =>\n        this.productService.saveDetails(data).pipe(\n          map((product) => {\n            this.store.dispatch(GlobalActions.showSuccessMessage({ message: `Product details saved.` }));\n            return ProductActions.saveProductDetailsSuccess({ data: product });\n          }),\n          catchError(() => {\n            return of(\n              ProductActions.saveProductDetailsError({ error: 'Product details could not be saved. Please try again.' })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  toggleProductStatus$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ProductActions.toggleProductStatus),\n      tap(() => this.store.dispatch(ProductActions.toggleProductStatusStart())),\n      switchMap(({ data }) =>\n        this.productService.toggleStatus(data).pipe(\n          map((product) => {\n            this.store.dispatch(GlobalActions.showSuccessMessage({ message: `Product status successfully changed.` }));\n            return ProductActions.toggleProductStatusSuccess({ data: product });\n          }),\n          catchError(() => {\n            return of(\n              ProductActions.toggleProductStatusError({\n                error: 'Product status could not be changed. Please try again.',\n              })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  showToast$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(\n          ProductActions.loadProductsError,\n          ProductActions.saveProductDetailsError,\n          ProductActions.toggleProductStatusError\n        ),\n        tap((action) => {\n          this.store.dispatch(GlobalActions.showErrorMessage({ message: action.error }));\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(private actions$: Actions, private store: Store<AppState>, private productService: ProductService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { map, catchError, tap, switchMap } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { AppState } from '../reducers';\nimport { SystemMessageService } from '../services/system-message.service';\nimport { SystemMessage } from '../models/system-message.model';\nimport { GlobalActions } from '../actions/global.actions';\nimport { PaginationData } from '../models/pagination.model';\nimport { SystemMessageActions } from '../actions/system-messages.actions';\n\n@Injectable()\nexport class SystemMessageEffects {\n  loadSystemMessages$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(SystemMessageActions.loadSystemMessages),\n      tap(() => this.store.dispatch(SystemMessageActions.loadSystemMessagesStart())),\n      switchMap(({ params }) =>\n        this.systemMessageService.list(params).pipe(\n          map((response: { data: SystemMessage[]; pagination: PaginationData }) => {\n            return SystemMessageActions.loadSystemMessagesSuccess({\n              data: response.data,\n              pagination: response.pagination,\n            });\n          }),\n          catchError(() => {\n            return of(\n              SystemMessageActions.loadSystemMessagesError({\n                error: 'System messages could not be loaded. Please try again.',\n              })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  loadSystemMessage$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(SystemMessageActions.loadSystemMessage),\n      tap(() => this.store.dispatch(SystemMessageActions.loadSystemMessageStart())),\n      switchMap(({ id }) =>\n        this.systemMessageService.getDetails(id).pipe(\n          map((message: SystemMessage) => {\n            return SystemMessageActions.loadSystemMessageSuccess({ data: message });\n          }),\n          catchError(() => {\n            return of(\n              SystemMessageActions.loadSystemMessageError({\n                error: 'System message details could not be loaded. Please try again.',\n              })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  saveSystemMessage$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(SystemMessageActions.saveSystemMessage),\n      tap(() => this.store.dispatch(SystemMessageActions.saveSystemMessageStart())),\n      switchMap(({ data }) =>\n        this.systemMessageService.saveDetails(data).pipe(\n          map((message) => {\n            this.store.dispatch(GlobalActions.showSuccessMessage({ message: `System message details saved.` }));\n            return SystemMessageActions.saveSystemMessageSuccess({ data: message });\n          }),\n          catchError(() => {\n            return of(\n              SystemMessageActions.saveSystemMessageError({\n                error: 'System message details could not be saved. Please try again.',\n              })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  deleteSystemMessage$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(SystemMessageActions.deleteSystemMessage),\n      tap(() => this.store.dispatch(SystemMessageActions.deleteSystemMessageStart())),\n      switchMap(({ data }) =>\n        this.systemMessageService.delete(data).pipe(\n          map(() => {\n            this.store.dispatch(GlobalActions.showSuccessMessage({ message: `System message successfully deleted.` }));\n            return SystemMessageActions.deleteSystemMessageSuccess({ data });\n          }),\n          catchError(() => {\n            return of(\n              SystemMessageActions.deleteSystemMessageError({\n                error: 'System message could not be deleted. Please try again.',\n              })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  showToast$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(\n          SystemMessageActions.loadSystemMessagesError,\n          SystemMessageActions.loadSystemMessageError,\n          SystemMessageActions.saveSystemMessageError,\n          SystemMessageActions.deleteSystemMessageError\n        ),\n        tap(({ error }) => {\n          this.store.dispatch(GlobalActions.showErrorMessage({ message: error }));\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<AppState>,\n    private systemMessageService: SystemMessageService\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { map, catchError, tap, switchMap } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { AppState } from '../reducers';\n\nimport { TenantActions } from '../actions/tenant.actions';\nimport { TenantService } from '../services/tenant.service';\n\n@Injectable()\nexport class TenantEffects {\n  loadPrimaryTenants$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(TenantActions.loadPrimaryTenants),\n      tap(() => this.store.dispatch(TenantActions.loadPrimaryTenantsStart())),\n      switchMap(() =>\n        this.tenantService.getPrimaryTenants().pipe(\n          map((tenants) => {\n            return TenantActions.loadPrimaryTenantsSuccess({ data: tenants });\n          }),\n          catchError(() => {\n            return of(\n              TenantActions.loadPrimaryTenantsError({\n                error: 'Tenants list could not be loaded. Refresh the page to try again.',\n              })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  constructor(private actions$: Actions, private store: Store<AppState>, private tenantService: TenantService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { map, catchError, tap, switchMap, withLatestFrom } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { AppState } from '../reducers';\nimport { UserService } from '../services/user.service';\nimport { User } from '../models/user.model';\nimport { GlobalActions } from '../actions/global.actions';\nimport { ConfirmationDialogActions } from '../actions/confirmation-dialog.actions';\nimport { tmc } from '../config/tmc';\nimport { PaginationData } from '../models/pagination.model';\nimport { UserActions } from '../actions/users.actions';\n\n@Injectable()\nexport class UserEffects {\n  loadUsers$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.loadUsers),\n      tap(() => this.store.dispatch(UserActions.loadUsersStart())),\n      switchMap(({ params }) =>\n        this.userService.list(params).pipe(\n          map((response: { data: User[]; pagination: PaginationData }) => {\n            return UserActions.loadUsersSuccess({ data: response.data, pagination: response.pagination });\n          }),\n          catchError(() => {\n            return of(UserActions.loadUsersError({ error: 'Users could not be loaded. Please try again.' }));\n          })\n        )\n      )\n    )\n  );\n\n  loadUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.loadUser),\n      tap(() => this.store.dispatch(UserActions.loadUserStart())),\n      switchMap(({ id }) =>\n        this.userService.getById(id).pipe(\n          map((user) => {\n            return UserActions.loadUserSuccess({ data: user });\n          }),\n          catchError(() => {\n            return of(UserActions.loadUserError({ error: 'User could not be loaded. Please try again.' }));\n          })\n        )\n      )\n    )\n  );\n\n  saveUserDetails$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.saveUserDetails),\n      tap(() => this.store.dispatch(UserActions.saveUserDetailsStart())),\n      switchMap(({ data }) =>\n        this.userService.saveDetails(data).pipe(\n          map((user) => {\n            this.store.dispatch(GlobalActions.showSuccessMessage({ message: `User details saved.` }));\n            return UserActions.saveUserDetailsSuccess({ data: user });\n          }),\n          catchError(() => {\n            return of(\n              UserActions.saveUserDetailsError({ error: 'User details could not be saved. Please try again.' })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  changeUserPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.changeUserPassword),\n      tap(() => this.store.dispatch(UserActions.changeUserPasswordStart())),\n      switchMap(({ data }) =>\n        this.userService.changeUserPassword(data).pipe(\n          map((user) => {\n            this.store.dispatch(GlobalActions.showSuccessMessage({ message: `Password successfully changed.` }));\n            return UserActions.changeUserPasswordSuccess({ data: user });\n          }),\n          catchError(() => {\n            return of(\n              UserActions.changeUserPasswordError({ error: 'Could not change User password. Please try again.' })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  getOverrideToken$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.getOverrideToken),\n      tap(() => this.store.dispatch(UserActions.getOverrideTokenStart())),\n      switchMap(({ username, redirectPath }) =>\n        this.userService.getOverrideToken(username).pipe(\n          map(({ token }) => {\n            return UserActions.getOverrideTokenSuccess({ token, username, redirectPath });\n          }),\n          catchError(() => {\n            return of(UserActions.getOverrideTokenError({ error: 'Could not get override token. Please try again.' }));\n          })\n        )\n      )\n    )\n  );\n\n  showToast$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(\n          UserActions.loadUsersError,\n          UserActions.saveUserDetailsError,\n          UserActions.changeUserPasswordError,\n          UserActions.getOverrideTokenError\n        ),\n        tap((action) => {\n          this.store.dispatch(GlobalActions.showErrorMessage({ message: action.error }));\n        })\n      ),\n    { dispatch: false }\n  );\n\n  agentOverride$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(UserActions.getOverrideTokenSuccess),\n        withLatestFrom(this.store.select(tmc)),\n        tap(([{ token, username, redirectPath }, tmc]) => {\n          this.store.dispatch(\n            ConfirmationDialogActions.show({\n              data: {\n                template: `\n                Are you sure you want to navigate to Travel Portal?\n                <br><br>\n                New browser tab will open and you will be automatically logged in as\n                <strong>${username}</strong>.\n                Your current session with will stay intact.\n              `,\n                confirm: {\n                  label: `Go to Travel Portal`,\n                  color: 'primary',\n                },\n              },\n              ok: () => {\n                const params: string[] = [`accessToken=${token}`];\n\n                // Add redirect param before access token so that generated URL is easier to read\n                if (redirectPath) params.unshift(`redirectTo=${redirectPath}`);\n\n                // Open new session in new browser tab, so we can preserve current session\n                window.open(`https://${tmc.platformLink}/jwt-login-redirection?${params.join('&')}`, '_blank');\n              },\n            })\n          );\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(private actions$: Actions, private store: Store<AppState>, private userService: UserService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { map, catchError, tap, switchMap } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { AppState } from '../reducers';\nimport { VatCategoryService } from '../services/vat-category.service';\nimport { VatCategory } from '../models/vat-category.model';\nimport { GlobalActions } from '../actions/global.actions';\nimport { PaginatedData } from '../models/pagination.model';\nimport { VatCategoryActions } from '../actions/vat-categories.actions';\n\n@Injectable()\nexport class VatCategoryEffects {\n  loadVatCategories$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(VatCategoryActions.loadVatCategories),\n      tap(() => this.store.dispatch(VatCategoryActions.loadVatCategoriesStart())),\n      switchMap(({ params }) =>\n        this.vatCategoryService.list(params).pipe(\n          map((response: PaginatedData<VatCategory>) => {\n            return VatCategoryActions.loadVatCategoriesSuccess({\n              data: response.data,\n              pagination: response.pagination,\n            });\n          }),\n          catchError(() => {\n            return of(\n              VatCategoryActions.loadVatCategoriesError({\n                error: 'Vat categories could not be loaded. Please try again.',\n              })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  toggleVatCategoryStatus$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(VatCategoryActions.toggleVatCategoryStatus),\n      tap(() => this.store.dispatch(VatCategoryActions.toggleVatCategoryStatusStart())),\n      switchMap(({ data }) =>\n        this.vatCategoryService.toggleStatus(data).pipe(\n          map((vatCategory) => {\n            this.store.dispatch(\n              GlobalActions.showSuccessMessage({ message: `Vat category status successfully changed.` })\n            );\n            return VatCategoryActions.toggleVatCategoryStatusSuccess({ data: vatCategory });\n          }),\n          catchError(() => {\n            return of(\n              VatCategoryActions.toggleVatCategoryStatusError({\n                error: 'Vat category status could not be changed. Please try again.',\n              })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  saveVatCategoryDetails$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(VatCategoryActions.saveVatCategoryDetails),\n      tap(() => this.store.dispatch(VatCategoryActions.saveVatCategoryDetailsStart())),\n      switchMap(({ data }) =>\n        this.vatCategoryService.saveDetails(data).pipe(\n          map((vatCategory) => {\n            this.store.dispatch(GlobalActions.showSuccessMessage({ message: `Vat category details saved.` }));\n            return VatCategoryActions.saveVatCategoryDetailsSuccess({ data: vatCategory });\n          }),\n          catchError(() => {\n            return of(\n              VatCategoryActions.saveVatCategoryDetailsError({\n                error: 'Vat category details could not be saved. Please try again.',\n              })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  showToast$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(\n          VatCategoryActions.loadVatCategoriesError,\n          VatCategoryActions.toggleVatCategoryStatusError,\n          VatCategoryActions.saveVatCategoryDetailsError\n        ),\n        tap((action) => {\n          this.store.dispatch(GlobalActions.showErrorMessage({ message: action.error }));\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<AppState>,\n    private vatCategoryService: VatCategoryService\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { map, catchError, tap, switchMap } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { AppState } from '../reducers';\nimport { VendorsPaymentProviderService } from '../services/vendors-payment-provider.service';\nimport { VendorsPaymentProvider } from '../models/vendors-payment-provider.model';\nimport { GlobalActions } from '../actions/global.actions';\nimport { PaginationData } from '../models/pagination.model';\nimport { VendorsPaymentProviderActions } from '../actions/vendors-payment-providers.actions';\n\n@Injectable()\nexport class VendorsPaymentProviderEffects {\n  loadVendorsPaymentProviders$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(VendorsPaymentProviderActions.loadVendorsPaymentProviders),\n      tap(() => this.store.dispatch(VendorsPaymentProviderActions.loadVendorsPaymentProvidersStart())),\n      switchMap(({ params }) =>\n        this.vendorPaymentProviderService.list(params).pipe(\n          map((response: { data: VendorsPaymentProvider[]; pagination: PaginationData }) => {\n            return VendorsPaymentProviderActions.loadVendorsPaymentProvidersSuccess({\n              data: response.data,\n              pagination: response.pagination,\n            });\n          }),\n          catchError(() => {\n            return of(\n              VendorsPaymentProviderActions.loadVendorsPaymentProvidersError({\n                error: 'Vendors payment providers could not be loaded. Please try again.',\n              })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  saveVendorsPaymentProviderDetails$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(VendorsPaymentProviderActions.saveVendorsPaymentProviderDetails),\n      tap(() => this.store.dispatch(VendorsPaymentProviderActions.saveVendorsPaymentProviderDetailsStart())),\n      switchMap(({ data }) =>\n        this.vendorPaymentProviderService.saveDetails(data).pipe(\n          map((item) => {\n            this.store.dispatch(\n              GlobalActions.showSuccessMessage({ message: `Vendors payment provider details saved.` })\n            );\n            return VendorsPaymentProviderActions.saveVendorsPaymentProviderDetailsSuccess({ data: item });\n          }),\n          catchError(() => {\n            return of(\n              VendorsPaymentProviderActions.saveVendorsPaymentProviderDetailsError({\n                error: 'Vendors payment provider details could not be saved. Please try again.',\n              })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  toggleVendorsPaymentProviderStatus$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(VendorsPaymentProviderActions.toggleVendorsPaymentProviderStatus),\n      tap(() => this.store.dispatch(VendorsPaymentProviderActions.toggleVendorsPaymentProviderStatusStart())),\n      switchMap(({ data }) =>\n        this.vendorPaymentProviderService.toggleStatus(data).pipe(\n          map((product) => {\n            this.store.dispatch(\n              GlobalActions.showSuccessMessage({ message: `Vendors payment provider status successfully changed.` })\n            );\n            return VendorsPaymentProviderActions.toggleVendorsPaymentProviderStatusSuccess({ data: product });\n          }),\n          catchError(() => {\n            return of(\n              VendorsPaymentProviderActions.toggleVendorsPaymentProviderStatusError({\n                error: 'Vendors payment provider status could not be changed. Please try again.',\n              })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  showToast$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(\n          VendorsPaymentProviderActions.loadVendorsPaymentProvidersError,\n          VendorsPaymentProviderActions.saveVendorsPaymentProviderDetailsError\n        ),\n        tap((action) => {\n          this.store.dispatch(GlobalActions.showErrorMessage({ message: action.error }));\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<AppState>,\n    private vendorPaymentProviderService: VendorsPaymentProviderService\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { map, catchError, tap, switchMap } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { AppState } from '../reducers';\nimport { VendorService } from '../services/vendor.service';\nimport { Vendor } from '../models/vendor.model';\nimport { GlobalActions } from '../actions/global.actions';\nimport { PaginationData } from '../models/pagination.model';\nimport { VendorActions } from '../actions/vendors.actions';\n\n@Injectable()\nexport class VendorEffects {\n  loadVendors$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(VendorActions.loadVendors),\n      tap(() => this.store.dispatch(VendorActions.loadVendorsStart())),\n      switchMap(({ params }) =>\n        this.vendorService.list(params).pipe(\n          map((response: { data: Vendor[]; pagination: PaginationData }) => {\n            return VendorActions.loadVendorsSuccess({ data: response.data, pagination: response.pagination });\n          }),\n          catchError(() => {\n            return of(VendorActions.loadVendorsError({ error: 'Vendors could not be loaded. Please try again.' }));\n          })\n        )\n      )\n    )\n  );\n\n  saveVendorDetails$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(VendorActions.saveVendorDetails),\n      tap(() => this.store.dispatch(VendorActions.saveVendorDetailsStart())),\n      switchMap(({ data }) =>\n        this.vendorService.saveDetails(data).pipe(\n          map((vendor) => {\n            this.store.dispatch(GlobalActions.showSuccessMessage({ message: `Vendor details saved.` }));\n            return VendorActions.saveVendorDetailsSuccess({ data: vendor });\n          }),\n          catchError(() => {\n            return of(\n              VendorActions.saveVendorDetailsError({ error: 'Vendor details could not be saved. Please try again.' })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  deleteVendor$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(VendorActions.deleteVendor),\n      tap(() => this.store.dispatch(VendorActions.deleteVendorStart())),\n      switchMap(({ data }) =>\n        this.vendorService.delete(data).pipe(\n          map(() => {\n            this.store.dispatch(GlobalActions.showSuccessMessage({ message: `Vendor successfully deleted.` }));\n            return VendorActions.deleteVendorSuccess({ data });\n          }),\n          catchError(() => {\n            return of(VendorActions.deleteVendorError({ error: 'Vendor could not be deleted. Please try again.' }));\n          })\n        )\n      )\n    )\n  );\n\n  toggleVendorStatus$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(VendorActions.toggleVendorStatus),\n      tap(() => this.store.dispatch(VendorActions.toggleVendorStatusStart())),\n      switchMap(({ data }) =>\n        this.vendorService.toggleStatus(data).pipe(\n          map((product) => {\n            this.store.dispatch(GlobalActions.showSuccessMessage({ message: `Vendor status successfully changed.` }));\n            return VendorActions.toggleVendorStatusSuccess({ data: product });\n          }),\n          catchError(() => {\n            return of(\n              VendorActions.toggleVendorStatusError({ error: 'Vendor status could not be changed. Please try again.' })\n            );\n          })\n        )\n      )\n    )\n  );\n\n  showToast$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(\n          VendorActions.loadVendorsError,\n          VendorActions.saveVendorDetailsError,\n          VendorActions.deleteVendorError,\n          VendorActions.toggleVendorStatusError\n        ),\n        tap(({ error }) => {\n          this.store.dispatch(GlobalActions.showErrorMessage({ message: error }));\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(private actions$: Actions, private store: Store<AppState>, private vendorService: VendorService) {}\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'dib-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BreadcrumbComponent {\n  @Input() label: string;\n  @Input() route: string = null;\n  @Input() title: string = null;\n  @Input() loading = false;\n}\n","<div class=\"px-1\">\n  <span class=\"m-0 flex p-0 text-current xs:text-xs\" *ngIf=\"loading; else showBreadcrumb\">\n    <dib-dot-loader size=\"small\" color=\"current\"></dib-dot-loader>\n  </span>\n  <ng-template #showBreadcrumb>\n    <span class=\"m-0 flex p-0 text-current xs:text-xs\" [attr.title]=\"title\" *ngIf=\"!route; else breadcrumbWithLink\">\n      {{ label }}\n    </span>\n    <ng-template #breadcrumbWithLink>\n      <a class=\"m-0 flex p-0 text-current no-underline hover:text-emerald-600 xs:text-xs\" [attr.title]=\"title\" [routerLink]=\"route\">\n        {{ label }}\n      </a>\n    </ng-template>\n  </ng-template>\n</div>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'dib-breadcrumbs',\n  templateUrl: './breadcrumbs.component.html',\n  styleUrls: ['./breadcrumbs.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BreadcrumbsComponent {}\n","<div class=\"sticky top-0 z-20 flex flex-wrap items-center justify-start border-b bg-white px-5\">\n  <ng-content></ng-content>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { BreadcrumbsComponent } from './breadcrumbs.component';\nimport { BreadcrumbComponent } from './breadcrumb/breadcrumb.component';\nimport { DotLoaderModule } from '../dot-loader/dot-loader.module';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, DotLoaderModule],\n  declarations: [BreadcrumbsComponent, BreadcrumbComponent],\n  providers: [],\n  exports: [BreadcrumbsComponent, BreadcrumbComponent],\n})\nexport class BreadcrumbsModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'dib-dialog-title',\n  templateUrl: 'dialog-title.template.html',\n})\nexport class DialogTitleComponent {\n  @Input() closable = true;\n}\n","<h2 mat-dialog-title class=\"flex items-center justify-between\">\n  <ng-content></ng-content>\n  <i\n    *ngIf=\"closable\"\n    class=\"material-icons cursor-pointer text-gray-500 hover:text-dib-green-600\"\n    matTooltip=\"Close dialog\"\n    matTooltipPosition=\"left\"\n    [mat-dialog-close]=\"false\"\n  >\n    close\n  </i>\n</h2>\n","import { NgModule } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { CommonModule } from '@angular/common';\nimport { DialogTitleComponent } from './dialog-title.component';\n\n@NgModule({\n  declarations: [DialogTitleComponent],\n  imports: [MatDialogModule, MatTooltipModule, CommonModule],\n  exports: [DialogTitleComponent],\n})\nexport class DialogModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'dib-dot-loader',\n  styleUrls: ['./dot-loader.style.scss'],\n  templateUrl: 'dot-loader.template.html',\n})\nexport class DotLoaderComponent {\n  @Input() size: 'small' | 'default' = 'default';\n  @Input() color: 'gray' | 'green' | 'current' = 'green';\n}\n","<div class=\"spinner\">\n  <div class=\"bounce1\"></div>\n  <div class=\"bounce2\"></div>\n  <div class=\"bounce3\"></div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { DotLoaderComponent } from './dot-loader.component';\n\n@NgModule({\n  declarations: [DotLoaderComponent],\n  imports: [],\n  exports: [DotLoaderComponent],\n})\nexport class DotLoaderModule {}\n","import { PaginatedResponse } from '../../models/pagination.model';\n\nexport interface ApiResponse {\n  errors: [];\n  valid: boolean;\n}\n\nexport const createSuccessResponse = { errors: [], valid: true } as ApiResponse;\nexport function createFullApiResponse<T>(content: T[], page = 1, pageSize = 10, total = 10): PaginatedResponse<T> {\n  return {\n    content,\n    currentPage: page,\n    pageSize,\n    totalItems: total,\n    totalPages: Math.ceil(total || 10 / content.length),\n  };\n}\n","import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { BaseComponent } from '../../base.component';\nimport { sidenavIsVisible } from '../../reducers/layout.reducer';\nimport { AppState } from '../../reducers';\nimport { LayoutActions } from '../../actions/layout.actions';\nimport { isLoggedIn, loggedInUser } from '../../reducers/auth.reducer';\n\n@Component({\n  template: '',\n})\nexport abstract class BaseLayoutComponent extends BaseComponent {\n  sidenavIsVisible$ = this.store.select(sidenavIsVisible);\n  isLoggedIn$ = this.store.select(isLoggedIn);\n  loggedInUser$ = this.store.select(loggedInUser);\n\n  constructor(protected store: Store<AppState>) {\n    super();\n  }\n\n  open(): void {\n    this.store.dispatch(LayoutActions.toggleSidenav({ visible: true }));\n  }\n\n  close(): void {\n    this.store.dispatch(LayoutActions.toggleSidenav({ visible: false }));\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Store } from '@ngrx/store';\nimport { first } from 'rxjs/operators';\nimport { BaseLayoutComponent } from '../base-layout.component';\nimport { UserModel } from '../../../models/user.model';\nimport { UserFormComponent } from '../../../users/user-form.component';\nimport { UserActions } from '../../../actions/users.actions';\nimport { UserPasswordFormComponent } from '../../../users/user-password-form.component';\nimport { AppState } from '../../../reducers';\nimport { AuthActions } from '../../../actions/auth.actions';\nimport { ConfirmationDialogActions } from '../../../actions/confirmation-dialog.actions';\nimport { tmc, TmcModel } from '../../../config/tmc';\nimport { loggedInUser } from '../../../reducers/auth.reducer';\nimport { TenantActions } from '../../../actions/tenant.actions';\nimport { selectTenants } from '../../../reducers/tenants.reducer';\n\n@Component({\n  selector: 'dib-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HeaderComponent extends BaseLayoutComponent {\n  tmc: TmcModel;\n  loggedInUser$ = this.store.select(loggedInUser);\n  tenants$ = this.store.select(selectTenants);\n\n  constructor(public dialog: MatDialog, protected store: Store<AppState>) {\n    super(store);\n\n    this.store\n      .select(tmc)\n      .pipe(first())\n      .subscribe((tmc) => {\n        this.tmc = tmc;\n      });\n\n    this.store.dispatch(TenantActions.loadPrimaryTenants());\n  }\n\n  logout(): void {\n    this.store.dispatch(AuthActions.logout());\n  }\n\n  edit(user: UserModel): void {\n    const dialogRef = this.dialog.open(UserFormComponent, {\n      data: { user },\n    });\n\n    dialogRef.afterClosed().subscribe((confirmed) => {\n      if (confirmed && confirmed !== false) {\n        this.store.dispatch(UserActions.saveUserDetails({ data: confirmed }));\n      }\n    });\n  }\n\n  changeUserPassword(user: UserModel): void {\n    const dialogRef = this.dialog.open(UserPasswordFormComponent, {\n      data: { user },\n    });\n\n    dialogRef.afterClosed().subscribe((confirmed) => {\n      if (confirmed && confirmed !== false) {\n        this.store.dispatch(UserActions.changeUserPassword({ data: confirmed }));\n      }\n    });\n  }\n\n  changeTenant(tenant: TmcModel): void {\n    this.store.dispatch(\n      ConfirmationDialogActions.show({\n        data: {\n          template: `\n            Are you sure you want to navigate to <strong>${tenant.name}</strong> tenant?\n            <br><br>\n            New browser tab will open with asking you to login to a different TMC Console.\n            Your current session with <strong>${this.tmc.name}</strong> will stay intact.\n          `,\n          confirm: {\n            label: `Go to ${tenant.name}`,\n            color: 'primary',\n          },\n        },\n        ok: () => {\n          // Open new session in new browser tab, so we can preserve current session\n          window.open(`https://${tenant.adminLink}/`, '_blank');\n        },\n      })\n    );\n  }\n}\n","<mat-toolbar *ngIf=\"loggedInUser$ | async as user\" class=\"flex-nowrap border-b bg-white p-0 shadow-sm\">\n  <div class=\"ml-6\">\n    <a class=\"block\" [routerLink]=\"'/'\" title=\"Go to Dashboard\">\n      <i class=\"material-icons self-start text-dib-green-600 text-4xl\">policy</i>\n    </a>\n  </div>\n\n  <div class=\"mr-6 flex flex-auto items-center justify-end\">\n    <button\n      mat-button\n      color=\"accent\"\n      data-id=\"tenant-menu-button\"\n      class=\"flex items-center rounded border border-gray-500 p-2 text-gray-500 no-underline xs:text-xs\"\n      [matMenuTriggerFor]=\"tmcMenu\"\n      *ngIf=\"(loggedInUser$ | async).isSuperAdmin()\"\n    >\n      {{ tmc.name }}\n      <i class=\"material-icons ml-2 text-xl text-gray-400 xs:ml-0.5 xs:-mt-0.5 xs:text-xs\">keyboard_arrow_down</i>\n\n      <mat-menu #tmcMenu=\"matMenu\" xPosition=\"before\">\n        <div data-id=\"tenant-menu\" class=\"user-menu-dropdown\">\n          <button\n            class=\"flex items-center justify-between\"\n            *ngFor=\"let tenant of (tenants$ | async).data\"\n            mat-menu-item\n            (click)=\"changeTenant(tenant)\"\n          >\n            <span>{{ tenant.name }}</span>\n            <span class=\"flex h-full flex-1 justify-end py-4 pl-4\">\n              <img [src]=\"tenant.logoInverted\" [alt]=\"tenant.name\" class=\"h-auto max-h-full w-auto max-w-full\" />\n            </span>\n          </button>\n          <div class=\"m-4 flex\" *ngIf=\"(tenants$ | async).error as error\">\n            <i class=\"material-icons mr-4 text-red-600\">error_outline</i>\n            <span class=\"flex-1\">{{ error }}</span>\n          </div>\n        </div>\n      </mat-menu>\n    </button>\n    <button\n      mat-button\n      color=\"accent\"\n      data-id=\"user-menu-button\"\n      class=\"flex items-center rounded border border-gray-500 p-2 text-gray-500 no-underline xs:text-xs\"\n      [matMenuTriggerFor]=\"userMenu\"\n    >\n      <span class=\"material-icons mr-2 text-gray-400 xs:mr-0.5 xs:-mt-0.5 xs:text-xs\">account_circle</span>\n      {{ user.fullName }}\n\n      <mat-menu #userMenu=\"matMenu\" xPosition=\"before\">\n        <div data-id=\"user-menu\" class=\"user-menu-dropdown m-4 flex flex-col border-b pb-4\">\n          <div class=\"flex items-center text-gray-500\">\n            <span class=\"material-icons mr-2 text-gray-400\">account_circle</span>\n            <div class=\"flex flex-col overflow-hidden\">\n              <span [title]=\"user.fullName\" class=\"overflow-hidden text-ellipsis whitespace-nowrap\">{{ user.fullName }}</span>\n              <span [title]=\"user.username\" class=\"overflow-hidden text-ellipsis\">{{ user.username }}</span>\n            </div>\n          </div>\n          <div class=\"mt-4\">\n            <button data-id=\"user-menu-logout\" mat-stroked-button class=\"text-xs-button\" color=\"accent\" (click)=\"logout()\">Log out</button>\n          </div>\n        </div>\n        <button data-id=\"user-menu-change-password\" mat-menu-item (click)=\"changeUserPassword(user)\">\n          <span>Change password</span>\n        </button>\n        <button data-id=\"user-menu-edit-profile\" mat-menu-item (click)=\"edit(user)\">\n          <span>Edit profile</span>\n        </button>\n      </mat-menu>\n    </button>\n    <button data-id=\"sidebar-menu\" class=\"text-decoration-none -mr-4 inline-flex py-1 px-3 text-emerald-600\" (click)=\"open()\">\n      <span class=\"material-icons\">menu</span>\n    </button>\n  </div>\n</mat-toolbar>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { EffectsModule } from '@ngrx/effects';\nimport { SidenavComponent } from './sidenav/sidenav.component';\nimport { HeaderComponent } from './header/header.component';\nimport { TenantEffects } from '../../effects/tenant.effects';\n\n@NgModule({\n  imports: [\n    RouterModule,\n    CommonModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatListModule,\n    MatSelectModule,\n    EffectsModule.forFeature([TenantEffects]),\n  ],\n  declarations: [HeaderComponent, SidenavComponent],\n  providers: [],\n  exports: [HeaderComponent, SidenavComponent],\n})\nexport class LayoutModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BaseLayoutComponent } from '../base-layout.component';\n\n@Component({\n  selector: 'dib-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SidenavComponent extends BaseLayoutComponent {}\n","<mat-sidenav-container (backdropClick)=\"close()\">\n  <mat-sidenav\n    *ngIf=\"isLoggedIn$ | async\"\n    [fixedInViewport]=\"true\"\n    [autoFocus]=\"false\"\n    [opened]=\"sidenavIsVisible$ | async\"\n    mode=\"over\"\n    position=\"end\"\n  >\n    <mat-nav-list class=\"pt-0\">\n      <div class=\"sidenav-logo-wrapper mb-4 flex flex-col justify-center\">\n        <div class=\"mx-6 flex items-center justify-between\">\n          <i class=\"material-icons self-start text-dib-green-600 text-4xl\">policy</i>\n          <button class=\"text-decoration-none -mr-4 inline-flex py-1 px-3 text-emerald-600\" (click)=\"close()\">\n            <span class=\"material-icons\">clear</span>\n          </button>\n        </div>\n      </div>\n\n      <a\n        mat-list-item\n        [routerLink]=\"'/dashboard'\"\n        routerLinkActive=\"active bg-emerald-600 text-white\"\n        (click)=\"close()\"\n        class=\"px-2 xs:h-8 xs:text-sm\"\n      >\n        Dashboard\n      </a>\n\n      <span class=\"mx-2 mt-6 mb-2 block border-b px-4 pb-2 text-xs uppercase text-dib-green-600 xs:mt-4 xs:text-2xs\">TMC Operations</span>\n\n      <a\n        mat-list-item\n        [routerLink]=\"'/billing-requests'\"\n        routerLinkActive=\"active bg-emerald-600 text-white\"\n        (click)=\"close()\"\n        class=\"px-2 xs:h-8 xs:text-sm\"\n      >\n        Billing Requests\n      </a>\n      <a\n        mat-list-item\n        [routerLink]=\"'/companies'\"\n        routerLinkActive=\"active bg-emerald-600 text-white\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n        (click)=\"close()\"\n        class=\"px-2 xs:h-8 xs:text-sm\"\n      >\n        Companies\n      </a>\n      <a\n        mat-list-item\n        [routerLink]=\"'/companies/users'\"\n        routerLinkActive=\"active bg-emerald-600 text-white\"\n        (click)=\"close()\"\n        class=\"px-2 xs:h-8 xs:text-sm\"\n      >\n        Company Users\n      </a>\n      <a\n        mat-list-item\n        [routerLink]=\"'/companies/bookings'\"\n        routerLinkActive=\"active bg-emerald-600 text-white\"\n        (click)=\"close()\"\n        class=\"px-2 xs:h-8 xs:text-sm\"\n      >\n        Bookings\n      </a>\n      <a\n        mat-list-item\n        [routerLink]=\"'/system-messages'\"\n        routerLinkActive=\"active bg-emerald-600 text-white\"\n        (click)=\"close()\"\n        class=\"px-2 xs:h-8 xs:text-sm\"\n      >\n        System Messages\n      </a>\n\n      <span\n        class=\"mx-2 mt-6 mb-2 block border-b px-4 pb-2 text-xs uppercase text-dib-green-600 xs:mt-4 xs:text-2xs\"\n        *ngIf=\"(loggedInUser$ | async).hasAdminAccess()\"\n      >\n        TMC Configurations\n      </span>\n\n      <a\n        mat-list-item\n        *ngIf=\"(loggedInUser$ | async).hasAdminAccess()\"\n        [routerLink]=\"'/users'\"\n        routerLinkActive=\"active bg-emerald-600 text-white\"\n        (click)=\"close()\"\n        class=\"px-2 xs:h-8 xs:text-sm\"\n      >\n        Users\n      </a>\n\n      <span\n        class=\"mx-2 mt-6 mb-2 block border-b px-4 pb-2 text-xs uppercase text-dib-green-600 xs:mt-4 xs:text-2xs\"\n        *ngIf=\"(loggedInUser$ | async).isSuperAdmin()\"\n      >\n        Travel Portal Settings\n      </span>\n\n      <a\n        mat-list-item\n        *ngIf=\"(loggedInUser$ | async).isSuperAdmin()\"\n        [routerLink]=\"'/products'\"\n        routerLinkActive=\"active bg-emerald-600 text-white\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n        (click)=\"close()\"\n        class=\"px-2 xs:h-8 xs:text-sm\"\n      >\n        Products\n      </a>\n      <a\n        mat-list-item\n        *ngIf=\"(loggedInUser$ | async).isSuperAdmin()\"\n        [routerLink]=\"'/products/vat-categories'\"\n        routerLinkActive=\"active bg-emerald-600 text-white\"\n        (click)=\"close()\"\n        class=\"px-2 xs:h-8 xs:text-sm\"\n      >\n        Product Vat Categories\n      </a>\n      <a\n        mat-list-item\n        *ngIf=\"(loggedInUser$ | async).isSuperAdmin()\"\n        [routerLink]=\"'/products/vendors'\"\n        routerLinkActive=\"active bg-emerald-600 text-white\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n        (click)=\"close()\"\n        class=\"px-2 xs:h-8 xs:text-sm\"\n      >\n        Product Vendors\n      </a>\n      <a\n        mat-list-item\n        *ngIf=\"(loggedInUser$ | async).isSuperAdmin()\"\n        [routerLink]=\"'/products/vendors/payment-providers'\"\n        routerLinkActive=\"active bg-emerald-600 text-white\"\n        (click)=\"close()\"\n        class=\"px-2 xs:h-8 xs:text-sm\"\n      >\n        Vendors Payment Providers\n      </a>\n      <a\n        mat-list-item\n        *ngIf=\"(loggedInUser$ | async).isSuperAdmin()\"\n        [routerLink]=\"'/features'\"\n        routerLinkActive=\"active bg-emerald-600 text-white\"\n        (click)=\"close()\"\n        class=\"px-2 xs:h-8 xs:text-sm\"\n      >\n        Features\n      </a>\n    </mat-nav-list>\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n    <ng-content></ng-content>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'dib-wrapper-listing-total',\n  templateUrl: './wrapper-listing-total.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WrapperListingTotalComponent {\n  @Input() total: number;\n}\n","<span *ngIf=\"total; else emptyTotal\">{{ total }} items</span>\n<ng-template #emptyTotal><span>&nbsp;</span></ng-template>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n/** Example Usage\n<dib-wrapper-listing>\n  <ng-container slot=\"title\"></ng-container>\n  <ng-container slot=\"filters\"></ng-container>\n  <ng-container slot=\"total\"></ng-container>\n  <ng-container slot=\"actions\"></ng-container>\n  <ng-container slot=\"table\"></ng-container>\n  <ng-container slot=\"pagination\"></ng-container>\n</dib-wrapper-listing>\n*/\n@Component({\n  selector: 'dib-wrapper-listing',\n  templateUrl: './wrapper-listing.component.html',\n  styleUrls: ['./wrapper-listing.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WrapperListingComponent {\n  // Padded option is used on listing page and has some additional spacing around the content\n  // Un-padded version is to be used when embedded inside other paged, ie. details page\n  @Input() padded = true;\n}\n","<div class=\"relative flex flex-col\" [ngClass]=\"{ 'm-6 rounded-lg shadow-sm': padded }\">\n  <!-- To make tables responsive, we are hiding some columns on smaller screens. -->\n  <!-- This message should appear whenever a column is hidden and is controlled from the listing template -->\n  <div class=\"absolute right-2 -top-4 text-2xs font-normal italic leading-none text-gray-500 empty:hidden\">\n    <ng-content select=\"[slot='hidden-columns-message']\"></ng-content>\n  </div>\n\n  <div class=\"grid grid-cols-1 items-start justify-between gap-8 rounded-t-lg bg-white p-4\">\n    <div class=\"text-xl font-medium empty:hidden\">\n      <ng-content select=\"[slot='title']\"></ng-content>\n    </div>\n\n    <div class=\"flex items-start justify-between\">\n      <div class=\"mr-4 grid auto-cols-auto grid-flow-col items-center gap-4\">\n        <div class=\"filters-wrapper flex flex-wrap gap-4 empty:hidden\">\n          <ng-content select=\"[slot='filters']\"></ng-content>\n        </div>\n\n        <div class=\"flex h-11 items-center self-start text-xs uppercase text-gray-500 empty:hidden\">\n          <ng-content select=\"[slot='total']\"></ng-content>\n        </div>\n      </div>\n\n      <div class=\"actions-wrapper empty:hidden\">\n        <ng-content select=\"[slot='actions']\"></ng-content>\n      </div>\n    </div>\n  </div>\n\n  <ng-content select=\"[slot='table']\"></ng-content>\n  <div class=\"overflow-hidden rounded-b-lg empty:hidden\">\n    <ng-content select=\"[slot='pagination']\"></ng-content>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { WrapperListingComponent } from './wrapper-listing.component';\nimport { WrapperListingTotalComponent } from './total/wrapper-listing-total.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [WrapperListingComponent, WrapperListingTotalComponent],\n  providers: [],\n  exports: [WrapperListingComponent, WrapperListingTotalComponent],\n})\nexport class WrapperListingModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n/** Example Usage\n<dib-wrapper-main>\n</dib-wrapper-main>\n*/\n@Component({\n  selector: 'dib-wrapper-main',\n  templateUrl: './wrapper-main.component.html',\n  styles: [':host { display: block; position: relative; }'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WrapperMainComponent {}\n","<dib-header></dib-header>\n<dib-sidenav>\n  <ng-content></ng-content>\n</dib-sidenav>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { WrapperMainComponent } from './wrapper-main.component';\nimport { LayoutModule } from '../../layout/layout.module';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, LayoutModule],\n  declarations: [WrapperMainComponent],\n  providers: [],\n  exports: [WrapperMainComponent],\n})\nexport class WrapperMainModule {}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { isEqual, pick } from 'lodash-es';\nimport { AppState } from '../../../reducers';\nimport { BaseComponent } from '../../../base.component';\n\n@Component({\n  template: '',\n})\nexport abstract class BaseSearchComponent extends BaseComponent {\n  form: UntypedFormGroup;\n\n  @Input() textColor: 'dark' | 'light' = 'dark';\n  @Output() onSearch = new EventEmitter<Record<string, string>>();\n  @Output() onReset = new EventEmitter();\n\n  constructor(\n    protected formBuilder: UntypedFormBuilder,\n    protected route: ActivatedRoute,\n    public store: Store<AppState>\n  ) {\n    super();\n  }\n\n  search(): void {\n    this.onSearch.emit(this.form.value);\n  }\n\n  reset($event: MouseEvent): void {\n    // We need this in order to be able to collapse the panel since we also\n    // have a click event on parent element that would do the opposite\n    $event.stopPropagation();\n\n    // If form is not touched there is no need to refresh the data at all\n    // Performance is the key, and this will save us a few API calls :)\n    if (this.form.dirty) {\n      this.form.reset();\n      this.search();\n    }\n\n    this.onReset.emit();\n  }\n\n  populateFormValuesFromRoute(columns: string[], defaults?: Record<string, string>): void {\n    columns.forEach((column) => {\n      let value = this.route.snapshot.queryParamMap.get(column);\n\n      // Remove extra whitespaces and convert to string\n      value = (value || '').trim();\n\n      if (value) {\n        this.form.controls[column].patchValue(value);\n        this.form.markAsDirty();\n      } else if (defaults?.[column]) {\n        this.form.controls[column].patchValue(defaults[column]);\n        this.form.markAsDirty();\n      }\n    });\n  }\n\n  syncFormWithRouteParams({\n    params,\n    resetForm = true,\n    afterHook = () => {},\n  }: {\n    params: string[];\n    resetForm?: boolean;\n    afterHook?: () => void;\n  }): void {\n    // Update form values every time URL changes to keep them in sync\n    this.subscriptions.add(\n      this.route.queryParams\n        .pipe(\n          // Subscribe only if one of the selected params is changed. We don't care about the others\n          distinctUntilChanged((prev, current) => {\n            // TODO: Possibly replace with JSON.stringify(prev, params) === JSON.stringify(current, params)\n            return isEqual(pick(prev, params), pick(current, params));\n          })\n        )\n        .subscribe(() => {\n          // This will be triggered on the initial page load and whenever one of the params we are watching is changed\n          if (resetForm) this.form.reset();\n          this.populateFormValuesFromRoute(params);\n\n          // Execute after hook as there can be some component specific logic that needs to be executed\n          afterHook();\n        })\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n\n@Component({\n  selector: 'dib-green-search-wrapper',\n  templateUrl: './green-search-wrapper.component.html',\n  animations: [\n    // Animate elements height\n    trigger('openClose', [\n      state('open', style({})),\n      state('close', style({ opacity: 0, height: 0 })),\n      transition('open => close', [animate('200ms ease-in')]),\n      transition('close => open', [animate('400ms cubic-bezier(.62,-0.11,.25,1.66)')]),\n    ]),\n    // Hide element by setting it to display none\n    trigger('showHide', [\n      state('show', style({})),\n      state('hide', style({ opacity: 0, display: 'none' })),\n      transition('show => hide', [animate(0)]),\n      transition('hide => show', [animate('200ms ease-out')]),\n    ]),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GreenSearchWrapperComponent {\n  isOpen = false;\n\n  @Output() searchCompanies = new EventEmitter<Record<string, string>>();\n  @Output() searchUsers = new EventEmitter<Record<string, string>>();\n  @Output() searchBookings = new EventEmitter<Record<string, string>>();\n\n  @Input() filters: Record<string, string> = {};\n  @Input() activeTab: 'companies' | 'users' | 'bookings' = 'companies';\n\n  /**\n   * Convert object into array of values to be used in ngFor\n   *\n   * { searchColumn: 'query' } => [{ name: 'searchColumn', value: 'query' }]\n   */\n  get selectedFilters(): { name: string; value: string }[] {\n    // TODO: find a better way to move this to the module component\n    //  level so that every module can have different ignore list\n    const ignoreFilters = new Set(['referenceType']);\n\n    return (\n      Object.keys(this.filters)\n        // Do not display ignored filters in the list of selected filters\n        .filter((filter) => !ignoreFilters.has(filter))\n        .map((name) => ({ name, value: this.filters[name] }))\n    );\n  }\n\n  toggleSearch(): void {\n    this.isOpen = !this.isOpen;\n  }\n\n  filterCompanies(params: Record<string, string>): void {\n    this.searchCompanies.emit(params);\n  }\n\n  filterUsers(params: Record<string, string>): void {\n    this.searchUsers.emit(params);\n  }\n\n  filterBookings(params: Record<string, string>): void {\n    this.searchBookings.emit(params);\n  }\n}\n","<div class=\"mb-4 bg-emerald-600 text-sm xs:text-xs\">\n  <div class=\"relative flex\">\n    <div\n      (click)=\"!isOpen && toggleSearch()\"\n      class=\"flex flex-1 flex-col py-3 px-6\"\n      [ngClass]=\"{ 'cursor-pointer transition-colors duration-500 hover:bg-emerald-700': !isOpen }\"\n    >\n      <div [@showHide]=\"isOpen ? 'hide' : 'show'\" class=\"flex-1 text-white\">\n        <div class=\"flex items-baseline space-x-2 divide-x divide-white divide-opacity-25 pr-6\">\n          <span class=\"text-xs font-light uppercase\">Quick Search</span>\n          <div class=\"flex items-baseline space-x-2 pl-2\" *ngFor=\"let filter of selectedFilters\">\n            <span class=\"text-xs font-light uppercase opacity-75\">{{ filter.name | dibCamelCaseToSpaces }}</span>\n            <span>{{ filter.value }}</span>\n          </div>\n        </div>\n      </div>\n      <div [@openClose]=\"isOpen ? 'open' : 'close'\" class=\"flex flex-col overflow-hidden\">\n        <div class=\"flex whitespace-nowrap text-white\">\n          <span\n            [ngClass]=\"[activeTab === 'companies' ? 'border-b border-white' : 'opacity-50']\"\n            class=\"block cursor-pointer p-2 pt-0 uppercase\"\n            (click)=\"activeTab = 'companies'\"\n          >\n            Companies\n          </span>\n          <span\n            [ngClass]=\"[activeTab === 'users' ? 'cursor-pointer border-b border-white' : 'opacity-50']\"\n            class=\"block cursor-pointer p-2 pt-0 uppercase\"\n            (click)=\"activeTab = 'users'\"\n          >\n            Company Users\n          </span>\n          <span\n            [ngClass]=\"[activeTab === 'bookings' ? 'cursor-pointer border-b border-white' : 'opacity-50']\"\n            class=\"block cursor-pointer p-2 pt-0 uppercase\"\n            (click)=\"activeTab = 'bookings'\"\n          >\n            Bookings\n          </span>\n        </div>\n\n        <dib-search-companies\n          textColor=\"light\"\n          *ngIf=\"activeTab === 'companies'\"\n          (onSearch)=\"filterCompanies($event)\"\n          (onReset)=\"toggleSearch()\"\n        ></dib-search-companies>\n\n        <dib-search-users\n          textColor=\"light\"\n          *ngIf=\"activeTab === 'users'\"\n          (onSearch)=\"filterUsers($event)\"\n          (onReset)=\"toggleSearch()\"\n        ></dib-search-users>\n\n        <dib-search-bookings\n          textColor=\"light\"\n          *ngIf=\"activeTab === 'bookings'\"\n          (onSearch)=\"filterBookings($event)\"\n          (onReset)=\"toggleSearch()\"\n        ></dib-search-bookings>\n      </div>\n    </div>\n\n    <span\n      class=\"material-icons absolute top-2 right-4 cursor-pointer text-white\"\n      (click)=\"toggleSearch()\"\n      [matTooltip]=\"isOpen ? 'Hide filters' : 'Show filters'\"\n      matTooltipPosition=\"left\"\n    >\n      {{ isOpen ? 'arrow_drop_up' : 'arrow_drop_down' }}\n    </span>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { pickBy, mapValues } from 'lodash-es';\n\n@Component({\n  selector: 'dib-quick-search-wrapper',\n  templateUrl: './quick-search-wrapper.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuickSearchWrapperComponent {\n  @Output() searchCompanies = new EventEmitter<Record<string, string>>();\n  @Output() searchUsers = new EventEmitter<Record<string, string>>();\n  @Output() searchBookings = new EventEmitter<Record<string, string>>();\n\n  @Input() activeTab: 'companies' | 'users' | 'bookings' = 'companies';\n\n  filterCompanies(params: Record<string, string>): void {\n    const data = this.removeEmpty(params);\n\n    if (Object.keys(data).length) {\n      this.searchCompanies.emit(data);\n    }\n  }\n\n  filterUsers(params: Record<string, string>): void {\n    const data = this.removeEmpty(params);\n\n    if (Object.keys(data).length) {\n      this.searchUsers.emit(data);\n    }\n  }\n\n  filterBookings(params: Record<string, string>): void {\n    const data = this.removeEmpty(params);\n\n    if (Object.keys(data).length) {\n      this.searchBookings.emit(data);\n    }\n  }\n\n  private removeEmpty(params: Record<string, string>): Record<string, string> {\n    // Remove extra space and make sure we always have string values\n    const data = mapValues(params, (value) => (value || '').trim());\n\n    // Remove falsy values (null, undefined, etc.)\n    return pickBy(data, (value) => !!value);\n  }\n}\n","<div class=\"mt-4 flex flex-col text-sm xs:text-xs\">\n  <div class=\"z-0 -mb-0.5 flex whitespace-nowrap px-3\">\n    <span\n      [ngClass]=\"[activeTab === 'companies' ? 'border-b-2 border-dib-green-600' : 'opacity-50']\"\n      class=\"cursor-pointer p-2 pt-0 uppercase\"\n      (click)=\"activeTab = 'companies'\"\n    >\n      Companies\n    </span>\n    <span\n      [ngClass]=\"[activeTab === 'users' ? 'cursor-pointer border-b-2 border-dib-green-600' : 'opacity-50']\"\n      class=\"cursor-pointer p-2 pt-0 uppercase\"\n      (click)=\"activeTab = 'users'\"\n    >\n      Company Users\n    </span>\n    <span\n      [ngClass]=\"[activeTab === 'bookings' ? 'cursor-pointer border-b-2 border-dib-green-600' : 'opacity-50']\"\n      class=\"cursor-pointer p-2 pt-0 uppercase\"\n      (click)=\"activeTab = 'bookings'\"\n    >\n      Bookings\n    </span>\n  </div>\n\n  <div class=\"rounded-lg bg-dib-gray-100 px-4\">\n    <dib-search-companies *ngIf=\"activeTab === 'companies'\" (onSearch)=\"filterCompanies($event)\"></dib-search-companies>\n    <dib-search-users *ngIf=\"activeTab === 'users'\" (onSearch)=\"filterUsers($event)\"></dib-search-users>\n    <dib-search-bookings *ngIf=\"activeTab === 'bookings'\" (onSearch)=\"filterBookings($event)\"></dib-search-bookings>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { filter, map } from 'rxjs/operators';\nimport { elementCrossFade } from '../../../../utils/animations/element-cross-fade';\nimport { BaseSearchComponent } from '../base-search.component';\nimport { BookingReferenceTypes, BookingStatus, bookingStatusMap } from '../../../../models/booking.model';\nimport { BookingActions } from '../../../../actions/bookings.actions';\nimport { referenceTypesLoading, selectReferenceTypes } from '../../../../reducers/bookings.reducer';\n\n@Component({\n  selector: 'dib-search-bookings',\n  templateUrl: './search-bookings.component.html',\n  animations: [elementCrossFade],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SearchBookingsComponent extends BaseSearchComponent implements OnInit {\n  statuses: BookingStatus[] = Object.keys(bookingStatusMap) as BookingStatus[];\n  referenceTypes = [];\n  referenceTypesLoading = false;\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      tripId: [],\n      companyName: [],\n      status: [],\n      traveler: [],\n      referenceType: [{ value: undefined, disabled: this.referenceTypesLoading || !!this.referenceTypes.length }],\n      bookingReference: [],\n      flightTicketNumber: [],\n    });\n\n    this.store.dispatch(BookingActions.loadReferenceTypes());\n\n    this.subscriptions.add(\n      this.store.select(referenceTypesLoading).subscribe((loading) => {\n        this.referenceTypesLoading = loading;\n      })\n    );\n\n    this.subscriptions.add(\n      this.store\n        .select(selectReferenceTypes)\n        .pipe(\n          filter((types) => types.length > 0),\n          map((types) => {\n            // Sort the values by putting main categories first\n            // TODO: This needs to be revisited once we determine whats the correct order we want to display\n            return types.reduce((acc: string[], element: string) => {\n              if ([...(Object.values(BookingReferenceTypes) as string[])].includes(element)) {\n                return [element, ...acc];\n              }\n              return [...acc, element];\n            }, []);\n          })\n        )\n        .subscribe((types) => {\n          this.referenceTypes = types;\n\n          // Sync form here since values are loaded from the API and we have to wait until all loaded\n          // Filters input will change whenever URL changes, and we have to watch for changes here\n          // This is a subscriber and will keep updating form whenever route params changes\n          super.syncFormWithRouteParams({\n            params: [\n              'tripId',\n              'companyName',\n              'status',\n              'traveler',\n              'referenceType',\n              'bookingReference',\n              'flightTicketNumber',\n            ],\n            resetForm: false,\n            afterHook: () => {\n              // Preselect Flights by default if nothing is selected\n              if (!this.form.get('referenceType').value) {\n                this.form.controls['referenceType'].patchValue(BookingReferenceTypes.Flight);\n              }\n            },\n          });\n        })\n    );\n  }\n\n  get showSearchByFlightTicketNumber(): boolean {\n    return (this.form.get('referenceType').value || '') === BookingReferenceTypes.Flight;\n  }\n\n  onTypeChange(type: string): void {\n    if (!type) {\n      // Clear values if no product type is selected\n      this.form.controls['bookingReference'].reset();\n      this.form.controls['flightTicketNumber'].reset();\n    } else if (type !== BookingReferenceTypes.Flight) {\n      // Clear flight ticket number since its only applicable for Flight referenceType\n      this.form.controls['flightTicketNumber'].reset();\n    }\n  }\n}\n","<form @elementCrossFade [formGroup]=\"form\" class=\"mt-5 flex flex-col items-start space-y-2\">\n  <div class=\"flex w-full items-end justify-between xs:flex-wrap\">\n    <div class=\"flex flex-wrap xs:w-full\">\n      <mat-form-field appearance=\"fill\" class=\"small white-fill mr-6 xs:mr-0 xs:w-full\">\n        <mat-label>Trip ID</mat-label>\n        <input matInput name=\"tripId\" formControlName=\"tripId\" autocomplete=\"off\" />\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"small white-fill mr-6 xs:mr-0 xs:w-full\">\n        <mat-label>Company Name</mat-label>\n        <input matInput name=\"companyName\" formControlName=\"companyName\" autocomplete=\"off\" />\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"small white-fill mr-6 xs:mr-0 xs:w-full\">\n        <mat-label>Cart Status</mat-label>\n        <mat-select formControlName=\"status\">\n          <mat-option>Show All</mat-option>\n          <mat-option *ngFor=\"let status of statuses\" [value]=\"status\">{{ status | dibDashesToSpaces }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n\n  <span class=\"ml-2 text-xs font-light uppercase\" [class.text-white]=\"textColor === 'light'\">Secondary Search</span>\n  <div class=\"flex w-full items-end justify-between xs:flex-wrap\">\n    <div class=\"flex flex-wrap xs:w-full\">\n      <mat-form-field appearance=\"fill\" class=\"small white-fill mr-6 xs:mr-0 xs:w-full\">\n        <mat-label>Traveler Name</mat-label>\n        <input matInput name=\"traveler\" formControlName=\"traveler\" autocomplete=\"off\" />\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"small white-fill mr-6 xs:mr-0 xs:w-full\">\n        <mat-label>Product Type</mat-label>\n        <mat-select formControlName=\"referenceType\" (selectionChange)=\"onTypeChange($event.value)\">\n          <mat-option>Show All</mat-option>\n          <mat-option *ngFor=\"let type of referenceTypes\" [value]=\"type\">{{ type }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field *ngIf=\"form.get('referenceType').value\" appearance=\"fill\" class=\"small white-fill mr-6 xs:mr-0 xs:w-full\">\n        <mat-label>Booking Reference</mat-label>\n        <input matInput name=\"bookingReference\" formControlName=\"bookingReference\" autocomplete=\"off\" />\n      </mat-form-field>\n\n      <mat-form-field *ngIf=\"showSearchByFlightTicketNumber\" appearance=\"fill\" class=\"small white-fill mr-6 xs:mr-0 xs:w-full\">\n        <mat-label>Flight Ticket Number</mat-label>\n        <input matInput name=\"flightTicketNumber\" formControlName=\"flightTicketNumber\" autocomplete=\"off\" placeholder=\"117-2485720958\" />\n      </mat-form-field>\n    </div>\n\n    <div class=\"mb-4 flex justify-end space-x-2 xs:w-full\">\n      <button\n        *ngIf=\"form.dirty\"\n        type=\"reset\"\n        mat-button\n        class=\"py-1 px-4\"\n        [class.text-white]=\"textColor === 'light'\"\n        (click)=\"reset($event)\"\n      >\n        Reset\n      </button>\n      <button\n        type=\"submit\"\n        mat-flat-button\n        color=\"primary\"\n        class=\"py-1 px-4 text-white\"\n        (click)=\"search()\"\n        [class.bg-dib-green-500]=\"form.valid\"\n        [disabled]=\"form.invalid\"\n      >\n        Search\n      </button>\n    </div>\n  </div>\n</form>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { CompanyStatus, SubscriptionStatus } from '../../../../models/company.model';\nimport { elementCrossFade } from '../../../../utils/animations/element-cross-fade';\nimport { BaseSearchComponent } from '../base-search.component';\n\n@Component({\n  selector: 'dib-search-companies',\n  templateUrl: './search-companies.component.html',\n  animations: [elementCrossFade],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SearchCompaniesComponent extends BaseSearchComponent implements OnInit {\n  companyStatuses: CompanyStatus[] = [CompanyStatus.NONE, CompanyStatus.AT_RISK, CompanyStatus.VIP];\n  subscriptionStatuses: SubscriptionStatus[] = [\n    SubscriptionStatus.ACTIVE,\n    SubscriptionStatus.DISABLED,\n    SubscriptionStatus.PENDING,\n    SubscriptionStatus.DUNNING,\n    SubscriptionStatus.SUSPEND,\n    SubscriptionStatus.COMPLETED,\n    SubscriptionStatus.CANCELLED,\n  ];\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      corporationName: [],\n      registrationNumber: [],\n      status: [],\n      subscriptionStatus: [],\n    });\n\n    // Filters input will change whenever URL changes, and we have to watch for changes here\n    super.syncFormWithRouteParams({\n      params: ['corporationName', 'registrationNumber', 'status', 'subscriptionStatus'],\n    });\n  }\n}\n","<form @elementCrossFade [formGroup]=\"form\" class=\"mt-5 flex flex-col items-start space-y-2\">\n  <mat-form-field appearance=\"fill\" class=\"small white-fill mr-6 xs:mr-0 xs:w-full\">\n    <mat-label>Corporation name</mat-label>\n    <input matInput name=\"corporationName\" formControlName=\"corporationName\" autocomplete=\"off\" />\n  </mat-form-field>\n\n  <span class=\"ml-2 text-xs font-light uppercase\" [class.text-white]=\"textColor === 'light'\">Secondary Search</span>\n  <div class=\"flex w-full items-end justify-between xs:flex-wrap\">\n    <div class=\"flex flex-wrap xs:w-full\">\n      <mat-form-field appearance=\"fill\" class=\"small white-fill mr-6 xs:mr-0 xs:w-full\">\n        <mat-label>Registration Number</mat-label>\n        <input matInput name=\"registrationNumber\" formControlName=\"registrationNumber\" autocomplete=\"off\" />\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"small white-fill mr-6 xs:mr-0 xs:w-full\">\n        <mat-label>Company Status</mat-label>\n        <mat-select formControlName=\"status\">\n          <mat-option>All statuses</mat-option>\n          <mat-option *ngFor=\"let status of companyStatuses\" [value]=\"status\">{{ status | dibDashesToSpaces }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"small white-fill mr-6 xs:mr-0 xs:w-full\">\n        <mat-label>Subscription Status</mat-label>\n        <mat-select formControlName=\"subscriptionStatus\">\n          <mat-option>All statuses</mat-option>\n          <mat-option *ngFor=\"let status of subscriptionStatuses\" [value]=\"status\">{{ status | dibDashesToSpaces }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n\n    <div class=\"mb-4 flex justify-end space-x-2 xs:w-full\">\n      <button\n        type=\"reset\"\n        mat-button\n        class=\"py-1 px-4\"\n        *ngIf=\"form.dirty\"\n        [class.text-white]=\"textColor === 'light'\"\n        (click)=\"reset($event)\"\n      >\n        Reset\n      </button>\n      <button type=\"submit\" mat-flat-button color=\"primary\" class=\"bg-dib-green-500 py-1 px-4 text-white\" (click)=\"search()\">Search</button>\n    </div>\n  </div>\n</form>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { elementCrossFade } from '../../../../utils/animations/element-cross-fade';\nimport { CompanyUserRole } from '../../../../models/company-user.model';\nimport { BaseSearchComponent } from '../base-search.component';\n\n@Component({\n  selector: 'dib-search-users',\n  templateUrl: './search-users.component.html',\n  animations: [elementCrossFade],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SearchUsersComponent extends BaseSearchComponent implements OnInit {\n  userRoles: CompanyUserRole[] = [CompanyUserRole.ADMIN, CompanyUserRole.TRAVELLER];\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      firstname: [],\n      lastname: [],\n      username: [],\n      phone: [],\n      role: [],\n      companyName: [],\n    });\n\n    // Filters input will change whenever URL changes, and we have to watch for changes here\n    super.syncFormWithRouteParams({ params: ['firstname', 'lastname', 'username', 'phone', 'role', 'companyName'] });\n  }\n}\n","<form @elementCrossFade [formGroup]=\"form\" class=\"mt-5 flex flex-col items-start space-y-2\">\n  <div class=\"flex w-full items-end justify-between xs:flex-wrap\">\n    <div class=\"flex flex-wrap xs:w-full\">\n      <mat-form-field appearance=\"fill\" class=\"small white-fill mr-6 xs:mr-0 xs:w-full\">\n        <mat-label>First Name</mat-label>\n        <input matInput name=\"firstname\" formControlName=\"firstname\" autocomplete=\"off\" />\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"small white-fill mr-6 xs:mr-0 xs:w-full\">\n        <mat-label>Last Name</mat-label>\n        <input matInput name=\"lastname\" formControlName=\"lastname\" autocomplete=\"off\" />\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"small white-fill mr-6 xs:mr-0 xs:w-full\">\n        <mat-label>Role</mat-label>\n        <mat-select formControlName=\"role\">\n          <mat-option>Show All</mat-option>\n          <mat-option *ngFor=\"let role of userRoles\" [value]=\"role\">{{ role | dibDashesToSpaces }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n\n  <span class=\"ml-2 text-xs font-light uppercase\" [class.text-white]=\"textColor === 'light'\">Secondary Search</span>\n  <div class=\"flex w-full items-end justify-between xs:flex-wrap\">\n    <div class=\"flex flex-wrap xs:w-full\">\n      <mat-form-field appearance=\"fill\" class=\"small white-fill mr-6 xs:mr-0 xs:w-full\">\n        <mat-label>Email</mat-label>\n        <input matInput name=\"username\" formControlName=\"username\" autocomplete=\"off\" />\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"small white-fill mr-6 xs:mr-0 xs:w-full\">\n        <mat-label>Phone</mat-label>\n        <input matInput name=\"phone\" formControlName=\"phone\" autocomplete=\"off\" />\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"small white-fill mr-6 xs:mr-0 xs:w-full\">\n        <mat-label>Company</mat-label>\n        <input matInput name=\"companyName\" formControlName=\"companyName\" autocomplete=\"off\" />\n      </mat-form-field>\n    </div>\n\n    <div class=\"mb-4 flex justify-end space-x-2 xs:w-full\">\n      <button\n        *ngIf=\"form.dirty\"\n        type=\"reset\"\n        mat-button\n        class=\"py-1 px-4\"\n        [class.text-white]=\"textColor === 'light'\"\n        (click)=\"reset($event)\"\n      >\n        Reset\n      </button>\n      <button type=\"submit\" mat-flat-button color=\"primary\" class=\"bg-dib-green-500 py-1 px-4 text-white\" (click)=\"search()\">Search</button>\n    </div>\n  </div>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DibPipesModule } from '../../../utils/pipes/pipes.module';\nimport { SearchCompaniesComponent } from './search-companies/search-companies.component';\nimport { SearchUsersComponent } from './search-users/search-users.component';\nimport { QuickSearchWrapperComponent } from './quick-search-wrapper/quick-search-wrapper.component';\nimport { GreenSearchWrapperComponent } from './green-search-wrapper/green-search-wrapper.component';\nimport { SearchBookingsComponent } from './search-bookings/search-bookings.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTooltipModule,\n    MatSelectModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    DibPipesModule,\n  ],\n  declarations: [\n    GreenSearchWrapperComponent,\n    QuickSearchWrapperComponent,\n    SearchCompaniesComponent,\n    SearchUsersComponent,\n    SearchBookingsComponent,\n  ],\n  providers: [],\n  exports: [\n    GreenSearchWrapperComponent,\n    QuickSearchWrapperComponent,\n    SearchCompaniesComponent,\n    SearchUsersComponent,\n    SearchBookingsComponent,\n  ],\n})\nexport class WrapperSearchModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'dib-wrapper-stat',\n  templateUrl: './wrapper-stat.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WrapperStatComponent {\n  @Input() loading: boolean;\n  @Input() count: number;\n  @Input() link: string;\n  @Input() title: string;\n}\n","<div class=\"group max-w-[120px] cursor-pointer\" [routerLink]=\"link\">\n  <h3 class=\"text-3xl text-gray-500 sm:text-2xl xs:text-xl\">\n    <ng-container *ngIf=\"!loading; else showLoader\">\n      {{ count || '-' }}\n    </ng-container>\n    <ng-template #showLoader>\n      <dib-dot-loader size=\"small\" color=\"current\"></dib-dot-loader>\n    </ng-template>\n  </h3>\n\n  <a class=\"text-sm font-medium text-emerald-600 group-hover:underline sm:text-xs\">{{ title }}</a>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { WrapperStatComponent } from './wrapper-stat.component';\nimport { DotLoaderModule } from '../../dot-loader/dot-loader.module';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, DotLoaderModule],\n  declarations: [WrapperStatComponent],\n  providers: [],\n  exports: [WrapperStatComponent],\n})\nexport class WrapperStatModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n/** Example Usage\n<dib-wrapper-widget>\n  <ng-container slot=\"title\"></ng-container>\n  <ng-container slot=\"content\"></ng-container>\n</dib-wrapper-widget>\n*/\n@Component({\n  selector: 'dib-wrapper-widget',\n  templateUrl: './wrapper-widget.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WrapperWidgetComponent {}\n","<div class=\"overflow-hidden rounded-lg shadow-sm\">\n  <div class=\"grid gap-4 bg-white p-6 sm:p-4\">\n    <div class=\"text-xl font-medium sm:text-lg xs:text-sm\">\n      <ng-content select=\"[slot='title']\"></ng-content>\n    </div>\n    <ng-content select=\"[slot='content']\"></ng-content>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { WrapperWidgetComponent } from './wrapper-widget.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [WrapperWidgetComponent],\n  providers: [],\n  exports: [WrapperWidgetComponent],\n})\nexport class WrapperWidgetModule {}\n","import { HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { first, mergeMap, withLatestFrom } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { AppState } from '../reducers';\nimport { tmc, TmcModel } from '../config/tmc';\nimport { authToken } from '../reducers/auth.reducer';\n\n@Injectable()\nexport class AddHeaderInterceptor implements HttpInterceptor {\n  constructor(private store: Store<AppState>) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return this.store.select(authToken).pipe(\n      first(),\n      withLatestFrom(this.store.select(tmc)),\n      mergeMap(([token, tenant]: [string, TmcModel]) => {\n        // Clone the request to add the new headers and URL\n        // Pass the cloned request instead of the original request to the next handle\n        return next.handle(\n          req.clone({\n            url: AddHeaderInterceptor.setUrl(req),\n            headers: AddHeaderInterceptor.setHeaders(req, token, tenant),\n          })\n        );\n      })\n    );\n  }\n\n  private static setHeaders(req: HttpRequest<any>, token: string, tenant: TmcModel): HttpHeaders {\n    let headers = req.headers.set('Application', 'tmcc');\n\n    // We will skip authorisation with DIB tokens for all direct api calls unless they have /api/ in the endpoint\n    // All relative API urls (they don't start with http) are internal calls and definitely require authorisation\n    // All DFS urls require token since they do not have unified api prefixes (some do, some don't)\n    const requiresAuthorization =\n      !req.url.startsWith('http') || req.url.includes('/api/') || req.url.includes(environment.api.dfs);\n\n    if (token && requiresAuthorization) {\n      headers = headers.set('Authorization', `Bearer ${token}`);\n    }\n\n    if (tenant?.id) {\n      // Set tenant related key in every API request\n      headers = headers.set('tenant-key', tenant.id);\n    }\n\n    return headers;\n  }\n\n  private static setUrl(req: HttpRequest<any>): string {\n    if (req.url.startsWith('/')) {\n      return environment.api.backend + req.url;\n    }\n\n    return req.url;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpRequest,\n  HttpInterceptor,\n  HttpHandler,\n  HttpContextToken,\n  HttpContext,\n  HttpResponse,\n  HttpStatusCode,\n} from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { startWith, tap } from 'rxjs/operators';\nimport { ApiCache } from '../services/api-cache.service';\nimport { environment } from '../../environments/environment';\n\ninterface CacheOptions {\n  group?: string;\n  refresh?: boolean;\n  clearGroups?: string[];\n}\n\nconst CACHE_OPTIONS = new HttpContextToken<CacheOptions>(() => null);\n\nexport function cache(options: CacheOptions = {}): HttpContext {\n  return new HttpContext().set(CACHE_OPTIONS, options);\n}\n\n/**\n * Helper method to only set a cache group without setting up other params\n */\nexport function cacheGroup(group: CacheOptions['group']): HttpContext {\n  return cache({ group });\n}\n\n/**\n * Helper method when we only need to clear groups related to this cache\n */\nexport function clearGroups(groups: CacheOptions['clearGroups']): HttpContext {\n  return cache({ clearGroups: groups });\n}\n\n@Injectable()\nexport class CacheInterceptor implements HttpInterceptor {\n  constructor(private requestCache: ApiCache) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const options = req.context.get(CACHE_OPTIONS);\n\n    // Continue if caching is not enabled\n    if (!environment.api.cache.enabled || !options) return next.handle(req);\n\n    // Check if we have some caches that are related to this APi call and clear them\n    options.clearGroups?.forEach((group) => {\n      this.requestCache.clearByGroupName(group);\n    });\n\n    // Only GET requests are cacheable - continue if request is not cacheable\n    if (req.method !== 'GET') return next.handle(req);\n\n    const cachedResponseBody = this.requestCache.get(req);\n    const cachedResponse = new HttpResponse({ status: HttpStatusCode.Ok, body: cachedResponseBody });\n\n    // Refresh the caches\n    const response$ = next.handle(req).pipe(\n      tap((event) => {\n        // There may be other events besides the response.\n        if (event instanceof HttpResponse) {\n          // TODO: Check if need to handle BE errors where we will receive status 200 response with some error message\n          //  Issue is that this error will be cached with no way to refresh until cache expires or page is reloaded\n          this.requestCache.put(req, event, req.context.get(CACHE_OPTIONS)?.group); // Update the cache.\n        }\n      })\n    );\n\n    if (options.refresh) {\n      // TODO: Think about returning only new data (ie. remove startWith(cachedResponse) pipe)\n      return cachedResponseBody ? response$.pipe(startWith(cachedResponse)) : response$;\n    }\n\n    // Return cached response if it is found or load new data if not\n    return cachedResponseBody ? of(cachedResponse) : response$;\n  }\n}\n","import { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport * as Chance from 'chance';\nimport { environment } from '../../environments/environment';\nimport { mockedRequests } from '../../../mock/mocked-requests';\n\nconst chance = Chance.Chance();\n\nexport class MockedRequestsInterceptor implements HttpInterceptor {\n  intercept(httpRequest: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const mock = mockedRequests.getMockedRequest(httpRequest.method, decodeURIComponent(httpRequest.urlWithParams));\n\n    if (mock) {\n      mock.setRequestBody(httpRequest.body);\n\n      if (environment.mock.debugMode) {\n        mock.log({ httpRequest });\n      }\n\n      return of(new HttpResponse({ status: 200, body: mock.getResponse() })).pipe(\n        // Add a small but random delay and use Nullish coalescing operator (??) because delay of 0ms is valid\n        delay(mock.request?.delay ?? chance.natural({ min: 70, max: 800 }))\n      );\n    }\n\n    return next.handle(httpRequest);\n  }\n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpParams, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SplitSortParamInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req.clone({ params: SplitSortParamInterceptor.splitSortParam(req.params) }));\n  }\n\n  private static splitSortParam(params: HttpParams): HttpParams {\n    if (params.has('sort') && params.get('sort').includes('|')) {\n      // Cache the sort value\n      const sort = params.get('sort');\n\n      // Remove it from params list\n      params = params.delete('sort');\n\n      // And repopulate with each individual sort value separately\n      sort.split('|').forEach((sortBy) => {\n        params = params.append('sort', sortBy);\n      });\n    }\n\n    return params;\n  }\n}\n","import { HttpHandler, HttpInterceptor, HttpRequest, HttpStatusCode } from '@angular/common/http';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { catchError, map, takeUntil } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../reducers';\nimport { AuthActions } from '../actions/auth.actions';\nimport { selectUrl } from '../reducers/router.reducer';\n\n@Injectable()\nexport class UnauthenticatedInterceptor implements HttpInterceptor {\n  private cancelAllPendingRequests = new Subject<void>();\n\n  constructor(private store: Store<AppState>) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<any> {\n    return next.handle(req).pipe(\n      takeUntil(this.cancelAllPendingRequests),\n      catchError((err) => {\n        // We are only interested in 401 code here, so throw regular error if anything else happens\n        if (err.status !== HttpStatusCode.Unauthorized) return throwError(err);\n\n        return this.store.select(selectUrl).pipe(\n          takeUntil(this.cancelAllPendingRequests),\n          map((url) => {\n            if (!url.startsWith('/auth/login')) {\n              // Auto logout if 401 response returned from API\n              this.store.dispatch(AuthActions.logout('Session expired'));\n\n              // Cancel any pending requests since we are redirecting user to the login page\n              this.cancelAllPendingRequests.next();\n            }\n\n            return throwError(err);\n          })\n        );\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Adapter } from './adapter';\nimport { MemberIds } from './member-ids.model';\nimport { PaymentType } from './payment.model';\n\nexport enum InvoiceSplit {\n  NONE = 'NONE',\n  COST_CENTER = 'COST_CENTER',\n  YOUR_REFERENCE = 'YOUR_REFERENCE',\n}\n\nexport enum InvoiceSplitProcessStatus {\n  PENDING = 'PENDING',\n  COMPLETED = 'COMPLETED',\n  IGNORED = 'IGNORED',\n}\n\nexport interface PendingInvoiceSplitType {\n  id: string;\n  invoiceSplitType: InvoiceSplit;\n  status: InvoiceSplitProcessStatus;\n}\n\nexport interface BillingProfile extends MemberIds {\n  id: string;\n  city: string;\n  contactEmail: string;\n  contactFirstName: string;\n  contactLastName: string;\n  countryId: string;\n  countryName: string;\n  currency: string;\n  legalName: string;\n  streetName: string;\n  taxId: string;\n  zipcode: string;\n  invoiceSplitType: InvoiceSplit;\n  pendingInvoiceSplitType?: PendingInvoiceSplitType;\n  vatNumber?: string;\n  invoiceRecipientEmail?: string;\n  billingAddress?: string;\n  billingPeriod?: string;\n  backOfficeCustomerId?: string;\n  memberCount?: number;\n}\n\nexport class BillingProfileModel implements BillingProfile {\n  paymentType: PaymentType = PaymentType.BILLING_PROFILE;\n\n  constructor(\n    public id: string,\n    public city: string,\n    public contactEmail: string,\n    public contactFirstName: string,\n    public contactLastName: string,\n    public countryId: string,\n    public countryName: string,\n    public currency: string,\n    public legalName: string,\n    public streetName: string,\n    public taxId: string,\n    public zipcode: string,\n    public invoiceSplitType: InvoiceSplit,\n    public pendingInvoiceSplitType: PendingInvoiceSplitType,\n    public vatNumber: string,\n    public invoiceRecipientEmail: string,\n    public billingAddress: string,\n    public billingPeriod: string,\n    public backOfficeCustomerId: string,\n    public memberCount: number,\n    public groupIds: string[],\n    public employeeIds: string[]\n  ) {}\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BillingProfileAdapter implements Adapter<BillingProfile> {\n  adapt(item: BillingProfile): BillingProfileModel {\n    return new BillingProfileModel(\n      item.id,\n      item.city,\n      item.contactEmail,\n      item.contactFirstName,\n      item.contactLastName,\n      item.countryId,\n      item.countryName,\n      item.currency,\n      item.legalName,\n      item.streetName,\n      item.taxId,\n      item.zipcode,\n      item.invoiceSplitType,\n      item?.pendingInvoiceSplitType,\n      item?.vatNumber,\n      item?.invoiceRecipientEmail,\n      item?.billingAddress,\n      item?.billingPeriod,\n      item.backOfficeCustomerId,\n      item?.memberCount,\n      item.groupIds,\n      item.employeeIds\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Adapter } from './adapter';\n\nexport enum BillingRequestStatus {\n  PENDING = 'PENDING',\n  ENABLED = 'ENABLED',\n  DENIED = 'DENIED',\n  BLOCKED = 'BLOCKED',\n}\n\nexport interface BillingRequest {\n  id: string;\n  active: boolean;\n  billingProfileRequestStatus: BillingRequestStatus;\n  corporationName: string;\n  hasCorporateRate: boolean;\n  stripeCustomerId?: string;\n}\n\nexport class BillingRequestModel implements BillingRequest {\n  constructor(\n    public id: string,\n    public active: boolean,\n    public billingProfileRequestStatus: BillingRequestStatus,\n    public corporationName: string,\n    public hasCorporateRate: boolean,\n    public stripeCustomerId?: string\n  ) {}\n\n  get isPending(): boolean {\n    return this.billingProfileRequestStatus === BillingRequestStatus.PENDING;\n  }\n\n  get isDenied(): boolean {\n    return this.billingProfileRequestStatus === BillingRequestStatus.DENIED;\n  }\n\n  get isApproved(): boolean {\n    return this.billingProfileRequestStatus === BillingRequestStatus.ENABLED;\n  }\n\n  get isBlocked(): boolean {\n    return this.billingProfileRequestStatus === BillingRequestStatus.BLOCKED;\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BillingRequestAdapter implements Adapter<BillingRequest> {\n  adapt(item: BillingRequest): BillingRequestModel {\n    return new BillingRequestModel(\n      item.id,\n      item.active,\n      item.billingProfileRequestStatus,\n      item.corporationName,\n      item.hasCorporateRate,\n      item.stripeCustomerId\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Adapter } from './adapter';\nimport { BookingStatus } from './booking.model';\n\nexport interface BookingListItem {\n  cartId: string;\n  tripId: string;\n  status: BookingStatus;\n  companyName: string;\n  travelers: string[];\n  bookerName: string;\n  startDate: string;\n  endDate: string;\n  price?: string;\n}\n\nexport class BookingListItemModel implements BookingListItem {\n  constructor(\n    public cartId: string,\n    public tripId: string,\n    public status: BookingStatus,\n    public companyName: string,\n    public travelers: string[],\n    public bookerName: string,\n    public startDate: string,\n    public endDate: string,\n    public price: string\n  ) {}\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BookingListItemAdapter implements Adapter<BookingListItem> {\n  adapt(item: Record<any, any>): BookingListItemModel {\n    return new BookingListItemModel(\n      item?.cartId,\n      item?.tripId,\n      item?.status,\n      item?.companyName,\n      item?.travelers.filter((traveler) => !!traveler), // Remove empty traveler values\n      item?.bookerName,\n      item?.startDate,\n      item?.endDate,\n      item?.price\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Adapter } from './adapter';\nimport { productTypeIconsMap } from './constants/product-type-icons.constants';\n\nexport enum BookingMode {\n  ONLINE = 'ONLINE',\n  OFFLINE = 'OFFLINE',\n}\n\nexport enum BookingReferenceTypes {\n  Hotel = 'Hotel',\n  Flight = 'Flight',\n  Train = 'Train',\n  RentalCar = 'Rental Car',\n  Taxi = 'Taxi',\n  Bus = 'Bus',\n}\n\n// TODO: Review these statuses and cross compare with BookingStatusV2 list, since there are a lot of differences\nexport const bookingStatusMap = {\n  DRAFT: 'Total price of trip',\n  COMPLETED: 'Paid & confirmed',\n  REJECTED: 'Rejected by the approver',\n  FAILED: 'Failed',\n  PENDING: 'Pending',\n  EDITED: 'Edited',\n  PAYMENT_INITIATED: 'Payment initiated',\n  ORDER_PROCESSING: 'Order Processing',\n  PENDING_APPROVAL: 'Pending Approval',\n  INTERNAL_ERROR: 'Booking issue - contact customer support',\n};\n\nexport type BookingStatus = keyof typeof bookingStatusMap;\n\nexport enum BookingUserType {\n  ADMINISTRATOR = 'ADMINISTRATOR',\n  PROVIDER = 'PROVIDER',\n  CUSTOMER = 'CUSTOMER',\n  AGENT = 'AGENT',\n}\n\nexport enum BookingAction {\n  CANCELLABLE = 'CANCELLABLE',\n  NONE = 'NONE',\n  DELETABLE = 'DELETABLE',\n  REFUNDABLE = 'REFUNDABLE',\n}\n\nexport enum BookingType {\n  CM_BOOKING = 'CM_BOOKING',\n  FLIGHT = 'FLIGHT',\n  TRAIN = 'TRAIN',\n  GENERICPRODUCT = 'GENERICPRODUCT',\n  TAXI = 'TAXI',\n  CAR = 'CAR',\n}\n\nexport enum BookingPaymentStatus {\n  UNPAID = 'UNPAID',\n  RESERVED = 'RESERVED',\n  COMPLETED = 'COMPLETED',\n  REFUNDED = 'REFUNDED',\n  NONE = 'NONE',\n}\n\nexport interface BookingCompany {\n  id: string;\n  name: string;\n}\n\nexport interface BookingTraveler {\n  id: string;\n  name: string;\n  username: string;\n}\n\nexport interface Booking {\n  cartId: string;\n  tripId: string;\n  tripName: string;\n  status: BookingStatus;\n  company: BookingCompany;\n  booker: BookingTraveler;\n  travelers: BookingTraveler[];\n  productTypes: string[];\n  numberOfItems: number;\n  startDate: string;\n  endDate: string;\n  agentNote: string;\n}\n\nexport class BookingModel implements Booking {\n  constructor(\n    public cartId: string,\n    public tripId: string,\n    public tripName: string,\n    public status: BookingStatus,\n    public company: BookingCompany,\n    public booker: BookingTraveler,\n    public travelers: BookingTraveler[],\n    public productTypes: string[],\n    public numberOfItems: number,\n    public startDate: string,\n    public endDate: string,\n    public agentNote: string\n  ) {}\n\n  /**\n   * Due to some CI issue sometimes BE will return a traveller where all the values are null\n   * including the name. We want to filter those travelers out.\n   */\n  allTravelers(): BookingTraveler[] {\n    return this.travelers.filter((item) => item.name);\n  }\n\n  /**\n   * Return only list of valid traveler profiles identified by ID\n   * Also keep the list unique by comparing the ID\n   */\n  travelerProfiles(): BookingTraveler[] {\n    return this.allTravelers()\n      .filter((item) => item.id)\n      .reduce((travelers, traveler) => {\n        // Filter out duplicate travelers by comparing traveler ID\n        if (!travelers.some((item) => item.id === traveler.id)) {\n          travelers.push(traveler);\n        }\n\n        return travelers;\n      }, []);\n  }\n\n  productIcon(product: string): string {\n    return productTypeIconsMap[product?.toLowerCase()] || productTypeIconsMap.default;\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BookingAdapter implements Adapter<Booking> {\n  adapt(item: Record<any, any>): BookingModel {\n    return new BookingModel(\n      item?.cartId,\n      item?.tripId,\n      item?.tripName,\n      item?.status,\n      item?.company,\n      item?.booker,\n      item?.travelers || [],\n      item?.productTypes || [],\n      item?.numberOfItems,\n      item?.startDate,\n      item?.endDate,\n      item?.agentNote\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { compareAsc } from 'date-fns';\nimport { Adapter } from '../adapter';\nimport { BookingAction, BookingPaymentStatus, BookingStatus } from '../booking.model';\nimport { Flight, FlightAdapter, FlightModel, FlightSegment } from './flight.model';\nimport { FlightTraveler, FlightTravelerAdapter, FlightTravelerModel } from './flight-traveler.model';\n\nexport interface BookingReference {\n  reference: string;\n  source: string;\n}\n\nexport interface FlightBooking {\n  id: string;\n  totalPrice: number;\n  currency: string;\n  co2EmissionInGrams: number;\n  departingFlightDeparture: string;\n  departingFlightDuration: number;\n  arrivingFlightDuration: number;\n  numberOfStops: number;\n  flights: Flight[];\n  travelers: FlightTraveler[];\n  bookingReference: BookingReference;\n  status: BookingStatus;\n  action: BookingAction | BookingAction[];\n  paymentStatus: BookingPaymentStatus;\n  hasExchange: boolean;\n  exchanged: boolean;\n  packageId?: string;\n}\n\nexport class FlightBookingModel implements FlightBooking {\n  constructor(\n    public id: string,\n    public totalPrice: number,\n    public currency: string,\n    public co2EmissionInGrams: number,\n    public departingFlightDeparture: string,\n    public departingFlightDuration: number,\n    public arrivingFlightDuration: number,\n    public numberOfStops: number,\n    public flights: FlightModel[],\n    public travelers: FlightTravelerModel[],\n    public bookingReference: BookingReference,\n    public status: BookingStatus,\n    public action: BookingAction | BookingAction[],\n    public paymentStatus: BookingPaymentStatus,\n    public hasExchange: boolean,\n    public exchanged: boolean,\n    public packageId: string\n  ) {}\n\n  get firstFlight(): FlightModel {\n    return this.flights[0];\n  }\n\n  get lastFlight(): FlightModel {\n    return this.flights[this.flights.length - 1];\n  }\n\n  // Get all segments in one place. Useful when we need to quickly filter through all flight segments\n  get segments(): FlightSegment[] {\n    return this.flights.flatMap(({ segments }) => segments);\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FlightBookingAdapter implements Adapter<FlightBooking> {\n  adapt(item: FlightBooking): FlightBookingModel {\n    return new FlightBookingModel(\n      item?.id,\n      item?.totalPrice,\n      item?.currency,\n      item?.co2EmissionInGrams,\n      item?.departingFlightDeparture,\n      item?.departingFlightDuration,\n      item?.arrivingFlightDuration,\n      item?.numberOfStops,\n      (item?.flights || [])\n        .map((item) => new FlightAdapter().adapt(item))\n        .sort((a: FlightModel, b: FlightModel) => {\n          // BE can return flights in random order, so we need to make sure they are always sorted by date\n          return compareAsc(new Date(a.firstSegment.departure.time), new Date(b.firstSegment.departure.time));\n        }),\n      (item?.travelers || []).map((item) => new FlightTravelerAdapter().adapt(item)),\n      item?.bookingReference,\n      item?.status,\n      item?.action,\n      item?.paymentStatus,\n      item?.hasExchange,\n      item?.exchanged,\n      item?.packageId\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Adapter } from '../adapter';\nimport { FlightSegment } from './flight.model';\nimport { Traveler, TravelerReferenceFields, TravelerType, UserTitle } from './shared.model';\n\nexport interface FlightTicket {\n  ticketNo: string;\n  segment: FlightSegment[];\n}\n\nexport interface FlightTraveler extends Traveler {\n  userId: string;\n  title: UserTitle;\n  middleName: string;\n  birthday: string;\n  loyaltyCardProvider: string;\n  loyaltyCardNumber: string;\n  emailConfirmation: boolean;\n  travelerType: TravelerType;\n  flightTickets: FlightTicket[];\n  costCenterId: string;\n  addons?: [];\n  exchanged?: boolean;\n}\n\nexport class FlightTravelerModel implements FlightTraveler {\n  constructor(\n    public id: string,\n    public userId: string,\n    public title: UserTitle,\n    public firstName: string,\n    public lastName: string,\n    public middleName: string,\n    public birthday: string,\n    public loyaltyCardProvider: string,\n    public loyaltyCardNumber: string,\n    public email: string,\n    public emailConfirmation: boolean,\n    public travelerType: TravelerType,\n    public flightTickets: FlightTicket[],\n    public costCenterId: string,\n    public addons: [],\n    public exchanged: boolean,\n    public travelerReferenceFields: TravelerReferenceFields\n  ) {}\n\n  get fullName(): string {\n    return `${this.firstName} ${this.lastName}`;\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FlightTravelerAdapter implements Adapter<FlightTraveler> {\n  adapt(item: FlightTraveler): FlightTravelerModel {\n    return new FlightTravelerModel(\n      item?.id,\n      item?.userId,\n      item?.title,\n      item?.firstName,\n      item?.lastName,\n      item?.middleName,\n      item?.birthday,\n      item?.loyaltyCardProvider,\n      item?.loyaltyCardNumber,\n      item?.email,\n      item?.emailConfirmation,\n      item?.travelerType,\n      item?.flightTickets,\n      item?.costCenterId,\n      item?.addons,\n      item?.exchanged,\n      item?.travelerReferenceFields\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Adapter } from '../adapter';\nimport { Airline, BaggageAllowance, CabinClass } from './shared.model';\n\nexport interface FlightDestination {\n  time: string;\n  airportCode: string;\n  airportName: string;\n  airportCountryCode: string;\n  terminal: string;\n  flightTaxiOption: boolean;\n}\n\nexport interface FlightSegment {\n  id: string;\n  duration: number;\n  marketingCarrier: string;\n  marketingAirline: Airline;\n  operatingCarrier: string;\n  operatingAirline: Airline;\n  flightNumber: string;\n  flightTicketNumber?: string; // Will only be available for completed and confirmed bookings\n  aircraftModel: string;\n  arrival: FlightDestination;\n  departure: FlightDestination;\n  airportChange: boolean;\n  layover: any; // TODO: Check for type (can we use FlightLayoverData or this can be a number as well?)\n  shortLayover: boolean;\n  longLayover: boolean;\n  differentDay: boolean;\n  cabinClass: CabinClass;\n  baggageAllowance: BaggageAllowance;\n}\n\nexport interface Flight {\n  duration: number;\n  co2EmissionInGrams: number;\n  segments: FlightSegment[];\n}\n\nexport class FlightModel implements Flight {\n  constructor(public duration: number, public co2EmissionInGrams: number, public segments: FlightSegment[]) {}\n\n  get firstSegment(): FlightSegment {\n    return this.segments[0];\n  }\n\n  get lastSegment(): FlightSegment {\n    return this.segments[this.segments.length - 1];\n  }\n\n  get cabinClassLabel(): string {\n    // Get unique cabin classes from all segments\n    const classes = [...new Set(this.segments.map((segment) => segment.cabinClass))];\n    if (classes.length === 1) return classes[0];\n    return `${classes[0]} + ${classes.length - 1}`;\n  }\n\n  get marketingAirlineLabel(): string {\n    // Get unique airline names from all segments\n    const airlines = [...new Set(this.segments.map((segment) => segment.marketingAirline.name))];\n    if (airlines.length === 1) return airlines[0];\n    return `${airlines[0]} + ${airlines.length - 1}`;\n  }\n\n  get midSegments(): FlightSegment[] {\n    return this.segments.slice(1, -1);\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FlightAdapter implements Adapter<Flight> {\n  adapt(item: Flight): FlightModel {\n    return new FlightModel(item?.duration, item?.co2EmissionInGrams, item?.segments);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { differenceInDays } from 'date-fns';\nimport { Adapter } from '../adapter';\nimport { BookingAction, BookingPaymentStatus, BookingStatus, BookingType } from '../booking.model';\n\nexport const genericProductTypeMap = {\n  GP_FIT_FLIGHTS: 'FIT Flights',\n  GP_FIT_HOTELROOM: 'FIT Hotelroom',\n  GP_FIT_TRAIN: 'FIT Train',\n  GP_FIT_OTHER: 'FIT Other',\n  GP_GROUP_FLIGHTS: 'GROUP (9+) Flights',\n  GP_GROUP_HOTELROOM: 'GROUP (9+) Hotelroom',\n  GP_GROUP_TRAIN: 'GROUP (9+) Train',\n  GP_GROUP_OTHER: 'GROUP (9+) Other',\n  GP_SAAS: 'Saas',\n};\n\nexport type GenericProductType = keyof typeof genericProductTypeMap;\n\nexport interface GPCustomer {\n  userId: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n}\n\nexport interface GPCreator {\n  createdByType: string;\n  createdById: string;\n  createdAt: string;\n  createdByName: string;\n}\n\nexport interface GenericProduct {\n  name: string;\n  description: string;\n  category: string;\n  categoryId: string;\n  productId: string;\n  productName: string;\n  requestId: string;\n  paymentCategory: string;\n  productType: GenericProductType;\n  bookingReferenceId: string;\n  vendorId: string;\n  transactionSalesModel: string;\n  paymentDate: string;\n  requestedCheckIn: string;\n  requestedCheckOut: string;\n  netCost: number;\n  purchaseCost: number;\n  currency: string;\n  purchaseCurrency: string;\n  countryCode: string;\n  countryName: string;\n  posCountryCode: string;\n  type: BookingType;\n  createdByDTO: GPCreator;\n  status: BookingStatus;\n  // TODO: Check with BE why are we not returning array of actions every time\n  action: BookingAction | BookingAction[];\n  paymentStatus: BookingPaymentStatus;\n  customer: GPCustomer;\n  customerId: string;\n  travelId: string;\n}\n\nexport class GenericProductModel implements GenericProduct {\n  constructor(\n    public name: string,\n    public description: string,\n    public category: string,\n    public categoryId: string,\n    public productId: string,\n    public productName: string,\n    public requestId: string,\n    public paymentCategory: string,\n    public productType: GenericProductType,\n    public bookingReferenceId: string,\n    public vendorId: string,\n    public transactionSalesModel: string,\n    public paymentDate: string,\n    public requestedCheckIn: string,\n    public requestedCheckOut: string,\n    public netCost: number,\n    public purchaseCost: number,\n    public currency: string,\n    public purchaseCurrency: string,\n    public countryCode: string,\n    public countryName: string,\n    public posCountryCode: string,\n    public type: BookingType,\n    public createdByDTO: GPCreator,\n    public status: BookingStatus,\n    public action: BookingAction | BookingAction[],\n    public paymentStatus: BookingPaymentStatus,\n    public customer: GPCustomer,\n    public customerId: string,\n    public travelId: string\n  ) {}\n\n  get productTypeLabel(): string {\n    return genericProductTypeMap[this.productType];\n  }\n\n  get totalStay(): number {\n    // We are counting days here, not nights, so we have to increase the result by +1\n    return differenceInDays(new Date(this.requestedCheckOut), new Date(this.requestedCheckIn)) + 1;\n  }\n\n  get bookingReference(): string {\n    return this.bookingReferenceId;\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GenericProductAdapter implements Adapter<GenericProduct> {\n  adapt(item: GenericProduct): GenericProductModel {\n    return new GenericProductModel(\n      item?.name,\n      item?.description,\n      item?.category,\n      item?.categoryId,\n      item?.productId,\n      item?.productName,\n      item?.requestId,\n      item?.paymentCategory,\n      item?.productType,\n      item?.bookingReferenceId,\n      item?.vendorId,\n      item?.transactionSalesModel,\n      item?.paymentDate,\n      item?.requestedCheckIn,\n      item?.requestedCheckOut,\n      item?.netCost,\n      item?.purchaseCost,\n      item?.currency,\n      item?.purchaseCurrency,\n      item?.countryCode,\n      item?.countryName,\n      item?.posCountryCode,\n      item?.type,\n      item?.createdByDTO,\n      item?.status,\n      item?.action || [],\n      item?.paymentStatus,\n      item?.customer,\n      item?.customerId,\n      item?.travelId\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { differenceInDays } from 'date-fns';\nimport { Adapter } from '../adapter';\nimport { BookingAction, BookingPaymentStatus, BookingStatus, BookingType } from '../booking.model';\nimport { HotelRoom, HotelRoomAdapter, HotelRoomModel } from './hotel-room.model';\nimport { Booker, CancellationPolicy, LocationPreferences, Position, Price } from './shared.model';\n\nexport enum ReservationType {\n  ID = 'ID',\n  PIN = 'PIN',\n}\n\ninterface ReservationCode {\n  reservationCode: string;\n  reservationType: ReservationType;\n}\n\ninterface HotelDescription {\n  position: Position;\n  hotelName: string;\n  address: string;\n  phoneNumber: string;\n  email: string;\n  hotelImage: string;\n  reservationCodes: ReservationCode[];\n  moreContentAvailable: boolean;\n  providerName: string;\n}\n\nexport interface HotelBooking {\n  id: string;\n  requestedCheckIn: string;\n  requestedCheckOut: string;\n  requestedRooms: HotelRoom[];\n  specialRequests: string;\n  locationPreferences: LocationPreferences;\n  hotelBooker: Booker;\n  stars: number;\n  gym: boolean;\n  pool: boolean;\n  breakfast: boolean;\n  requestedCurrency: string;\n  requestedPrice: number;\n  localTaxes: Price;\n  bookingAction: BookingAction;\n  bookingStatus: BookingStatus;\n  type: BookingType;\n  cancellationPolicies: CancellationPolicy[];\n  hotelDescription: HotelDescription;\n  paymentStatus: BookingPaymentStatus;\n  prePaid: boolean;\n  refundable: boolean;\n  corporateRate: boolean;\n  packageId?: string;\n}\n\nexport class HotelBookingModel implements HotelBooking {\n  constructor(\n    public id: string,\n    public requestedCheckIn: string,\n    public requestedCheckOut: string,\n    public requestedRooms: HotelRoomModel[],\n    public specialRequests: string,\n    public locationPreferences: LocationPreferences,\n    public hotelBooker: Booker,\n    public stars: number,\n    public gym: boolean,\n    public pool: boolean,\n    public breakfast: boolean,\n    public requestedCurrency: string,\n    public requestedPrice: number,\n    public localTaxes: Price,\n    public bookingAction: BookingAction,\n    public bookingStatus: BookingStatus,\n    public type: BookingType,\n    public cancellationPolicies: CancellationPolicy[],\n    public hotelDescription: HotelDescription,\n    public paymentStatus: BookingPaymentStatus,\n    public prePaid: boolean,\n    public refundable: boolean,\n    public corporateRate: boolean,\n    public packageId: string\n  ) {}\n\n  get totalNights(): number {\n    return differenceInDays(new Date(this.requestedCheckOut), new Date(this.requestedCheckIn));\n  }\n\n  get totalGuests(): number {\n    return this.requestedRooms.reduce((count, room) => {\n      return count + room.occupants.length;\n    }, 0);\n  }\n\n  get reservationCodes(): ReservationCode[] {\n    return this.hotelDescription.reservationCodes;\n  }\n\n  get reservationId(): string {\n    return this.reservationCodes?.find((code) => code.reservationType === ReservationType.ID)?.reservationCode;\n  }\n\n  get reservationPin(): string {\n    return this.reservationCodes?.find((code) => code.reservationType === ReservationType.PIN)?.reservationCode;\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HotelBookingAdapter implements Adapter<HotelBooking> {\n  adapt(item: HotelBooking): HotelBookingModel {\n    return new HotelBookingModel(\n      item?.id,\n      item?.requestedCheckIn,\n      item?.requestedCheckOut,\n      (item?.requestedRooms || []).map((item) => new HotelRoomAdapter().adapt(item)),\n      item?.specialRequests,\n      item?.locationPreferences,\n      item?.hotelBooker,\n      item?.stars,\n      item?.gym,\n      item?.pool,\n      item?.breakfast,\n      item?.requestedCurrency,\n      item?.requestedPrice,\n      item?.localTaxes,\n      item?.bookingAction,\n      item?.bookingStatus,\n      item?.type,\n      item?.cancellationPolicies,\n      item?.hotelDescription,\n      item?.paymentStatus,\n      item?.prePaid,\n      item?.refundable,\n      item?.corporateRate,\n      item?.packageId\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Adapter } from '../adapter';\nimport { Traveler } from './shared.model';\n\nexport enum RoomType {\n  ONE_OCCUPANT_ROOM = 'ONE_OCCUPANT_ROOM',\n  TWO_OCCUPANTS_ROOM = 'TWO_OCCUPANTS_ROOM',\n}\n\ninterface RoomOccupant extends Traveler {\n  userId: string;\n  phoneNumber: string;\n  companyName: string;\n  emailConfirmation: boolean;\n  costCenterId: string;\n  primaryOccupant: boolean;\n}\n\nexport interface HotelRoom {\n  requestedRoomId: string;\n  adults: number;\n  children: number;\n  infants: number;\n  bedType: string;\n  occupants: RoomOccupant[];\n  roomName: string;\n}\n\nexport class HotelRoomModel implements HotelRoom {\n  constructor(\n    public requestedRoomId: string,\n    public adults: number,\n    public children: number,\n    public infants: number,\n    public bedType: string,\n    public occupants: RoomOccupant[],\n    public roomName: string\n  ) {}\n\n  get roomType(): RoomType {\n    switch (this.adults) {\n      case 1:\n        return RoomType.ONE_OCCUPANT_ROOM;\n      case 2:\n        return RoomType.TWO_OCCUPANTS_ROOM;\n      default:\n        return undefined;\n    }\n  }\n\n  get isSingleRoom(): boolean {\n    return this.roomType === RoomType.ONE_OCCUPANT_ROOM;\n  }\n\n  /**\n   * Some old providers like HOTELBED could not be migrated. We have to keep\n   * this fallback in case we are looking at some old hotel bookings\n   */\n  get name(): string {\n    if (this.roomName) return this.roomName;\n\n    return this.isSingleRoom ? 'Single room' : 'Double room';\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HotelRoomAdapter implements Adapter<HotelRoom> {\n  adapt(item: HotelRoom): HotelRoomModel {\n    return new HotelRoomModel(\n      item?.requestedRoomId,\n      item?.adults,\n      item?.children,\n      item?.infants,\n      item?.bedType,\n      item?.occupants,\n      item?.roomName\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Traveler, UserTitle } from './shared.model';\nimport { BookingStatus } from '../booking.model';\nimport { Adapter } from '../adapter';\nimport { BookingStatusV2 } from '../constants/booking-status.constants';\n\nexport enum CarTransmissionType {\n  MANUAL = 'MANUAL GEARBOX',\n  AUTOMATIC = 'AUTOMATIC GEARBOX',\n}\n\nexport enum CarClass {\n  MINI = 'MINI',\n  ECONOMY = 'ECONOMY',\n  COMPACT = 'COMPACT',\n  INTERMEDIATE = 'INTERMEDIATE',\n  STANDARD = 'STANDARD',\n  FULL_SIZE = 'FULL_SIZE',\n  LUXURY = 'LUXURY',\n  OVERSIZE = 'OVERSIZE',\n}\n\nexport enum CarCompany {\n  HERTZ = 'HERTZ',\n  SIXT = 'SIXT',\n  AVIS = 'AVIS',\n  EUROPCAR = 'EUROPCAR',\n}\n\nexport enum AmountQualifier {\n  INCLUDED = 'included',\n  OPTIONAL = 'optional',\n}\n\n// TODO: This will be moved to Locize once implemented\nexport const carAgencyCancellationPolicyMap = {\n  cancellationDetails: 'Cancellation fees might apply on Corporate Rates, please contact Rental car provider',\n  dayBeforePickUpTime: 'Free Cancellation with full refund up until 24 hrs before the day of pickup',\n  untilPickUpTime: 'Free cancellation up until pick up time',\n};\n\nexport type CarAgencyCancellationPolicy = keyof typeof carAgencyCancellationPolicyMap;\n\nexport interface CarDetails {\n  model: string;\n  category: CarClass;\n  type: string;\n  transmission: CarTransmissionType;\n  driveType: string;\n  fuelAndDistance: string;\n  airConditioner: boolean;\n  typeCode: string;\n  information: CarInformation;\n}\n\nexport interface CarInformation {\n  passengerCapacity: number;\n  doorNumber: number;\n  bootSize: number;\n}\n\ninterface CarAgency {\n  code: string;\n  name: CarCompany;\n  termsAndConditions: string;\n  cancellation: CarCancellationPolicy;\n}\n\nexport interface CarCancellationPolicy {\n  fee: string;\n  policy: string;\n  policyKey: CarAgencyCancellationPolicy;\n  cancellationInfo?: string;\n  ratePolicy: string;\n  ratePolicyKey: CarAgencyCancellationPolicy;\n}\n\ninterface CarLocation {\n  dateAndTime: string;\n  latitude: number;\n  longitude: number;\n  significance: string;\n  unit: string;\n  value: string;\n  address: CarAgencyAddress;\n}\n\nexport interface CarAgencyAddress {\n  street: string;\n  city: string;\n  code: string;\n  name: string;\n  countryCode: string;\n}\n\nexport interface CarRatePrice {\n  identifier: string;\n  pnrIdentifier: string;\n  agencyIdentifier: string;\n  amount: number;\n  currency: string;\n  type: string;\n  amountQualifier: null;\n  code: string;\n  planIndicator: string;\n}\n\nexport interface CarMileagePolicy {\n  type: string;\n  qualifier: string;\n  quantity: number;\n  period: string;\n}\n\nexport interface CarExtras {\n  chargeType: string;\n  amount: number;\n  amountQualifier?: AmountQualifier;\n  quantity: number;\n  periodType?: string;\n  currency?: string;\n  chargeCode: string;\n  freeText: string;\n  unitPrice: number;\n}\n\nexport interface CarOfferPrice {\n  ratePrice: CarRatePrice;\n  associatedCharges: CarExtras[];\n  mileagePolicy: CarMileagePolicy;\n}\n\ninterface CarDriver extends Traveler {\n  userId: string;\n  title: UserTitle;\n  phoneNumber: string;\n  dateOfBirth: string;\n}\n\nexport interface RentalCarBooking {\n  id: string;\n  // TODO: Check Booking statuses since there is a lot of differences between V1 and V2\n  status: BookingStatus | BookingStatusV2;\n  vehicle: CarDetails;\n  carAgency: CarAgency;\n  pickup: CarLocation;\n  dropOff: CarLocation;\n  offerPriceInfo: CarOfferPrice[];\n  driver: CarDriver;\n  onlyBookerConfirmation: boolean;\n}\n\nexport class RentalCarBookingModel implements RentalCarBooking {\n  constructor(\n    public id: string,\n    public status: BookingStatus | BookingStatusV2,\n    public vehicle: CarDetails,\n    public carAgency: CarAgency,\n    public pickup: CarLocation,\n    public dropOff: CarLocation,\n    public offerPriceInfo: CarOfferPrice[],\n    public driver: CarDriver,\n    public onlyBookerConfirmation: boolean\n  ) {}\n\n  get extras(): CarExtras[] {\n    return this.offerPriceInfo[0].associatedCharges || [];\n  }\n\n  get includedExtras(): CarExtras[] {\n    return this.extras.filter((item) => item.amountQualifier === AmountQualifier.INCLUDED);\n  }\n\n  get optionalExtras(): CarExtras[] {\n    return this.extras.filter((item) => item.amountQualifier === AmountQualifier.OPTIONAL);\n  }\n\n  get basePrice(): number {\n    return this.offerPriceInfo[0].ratePrice.amount || 0;\n  }\n\n  get currency(): string {\n    return this.offerPriceInfo[0].ratePrice.currency;\n  }\n\n  get totalPrice(): number {\n    return this.basePrice + this.optionalExtras.reduce((total, charge) => total + charge.amount, 0);\n  }\n\n  get bookingReference(): string {\n    return this.offerPriceInfo?.[0].ratePrice?.pnrIdentifier;\n  }\n\n  get agencyLogo(): string {\n    return `assets/car-companies-logos/${this.carAgency.name.toLowerCase()}.png`;\n  }\n\n  get hasManualTransmission(): boolean {\n    return this.vehicle.transmission === CarTransmissionType.MANUAL;\n  }\n\n  get cancellationPolicy(): string {\n    return carAgencyCancellationPolicyMap?.[this.carAgency.cancellation?.policyKey];\n  }\n\n  get cancellationRate(): string {\n    return carAgencyCancellationPolicyMap?.[this.carAgency.cancellation?.ratePolicyKey];\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RentalCarBookingAdapter implements Adapter<RentalCarBooking> {\n  adapt(item: RentalCarBooking): RentalCarBookingModel {\n    return new RentalCarBookingModel(\n      item?.id,\n      item?.status,\n      item?.vehicle,\n      item?.carAgency,\n      item?.pickup,\n      item?.dropOff,\n      item?.offerPriceInfo,\n      item?.driver,\n      item?.onlyBookerConfirmation\n    );\n  }\n}\n","export enum UserTitle {\n  MR = 'MR',\n  MRS = 'MRS',\n  MS = 'MS',\n}\n\nexport enum TravelerType {\n  ADULT = 'ADULT',\n  CHILD = 'CHILD',\n  INFANT = 'INFANT',\n}\n\nexport enum CabinClass {\n  ECONOMY = 'ECONOMY',\n  PREMIUM = 'PREMIUM_ECONOMY',\n  BUSINESS = 'BUSINESS',\n  FIRST = 'FIRST',\n}\n\nexport interface User {\n  firstName: string;\n  lastName: string;\n  email?: string;\n}\n\nexport interface Booker extends User {\n  phoneNumber: string;\n  companyName?: string;\n}\n\nexport interface Traveler extends User {\n  id?: string;\n  phoneNumber?: string;\n  travelerReferenceFields: TravelerReferenceFields;\n}\n\nexport type TravelerReferenceFields = {\n  costCenter2Name?: string;\n  costCenterId?: string;\n  costCenterName?: string;\n  customerReference?: string;\n  organizationLevel1?: string;\n  organizationLevel2?: string;\n  organizationLevel3?: string;\n  organizationLevel4?: string;\n  requisitionNumber?: string;\n  travelerEmail?: string;\n  travelerEmployeeNumber?: string;\n  travelerName?: string;\n};\n\nexport interface LocationPreferences {\n  cityName: string;\n  hotelAddress: string;\n}\n\nexport interface Price {\n  amount: number;\n  currency: string;\n}\n\nexport interface Position {\n  latitude: number;\n  longitude: number;\n}\n\nexport interface Airline {\n  code: string;\n  name: string;\n  iconUrl: string;\n}\n\nexport interface BaggageAllowance {\n  quantity: number;\n  weight: {\n    value: string;\n    unit: string;\n  };\n}\n\nexport interface ClimateCompensation {\n  totalCO2Weight: number;\n  weightUnit: string;\n}\n\nexport interface Layover {\n  duration: number;\n  location: string;\n}\n\nexport interface CancellationPolicy {\n  costAmount: number;\n  refundAmount: number;\n  refundAmountPerNight: number;\n  currency: string;\n  fromDate: string;\n  toDate: string;\n  used: boolean;\n  fullRefundable: boolean;\n  cancellationFeeDetails: CancellationFeeDetails;\n}\n\nexport interface CancellationFeeDetails {\n  amount: number;\n  currency: string;\n  percent: number;\n  numberOfNights: number;\n}\n","import { Injectable } from '@angular/core';\nimport { Adapter } from '../adapter';\nimport {\n  TaxiLocationSegment,\n  TaxiServiceProvider,\n  TaxiTransferType,\n  TaxiTraveller,\n  TaxiType,\n  TaxiVehicle,\n} from './taxi.model';\nimport { BookingStatus, BookingType } from '../booking.model';\nimport { CancellationPolicy, Price } from './shared.model';\nimport { FlightBookingModel } from './flight-booking.model';\nimport { TrainBookingModel } from './train-booking.model';\n\nexport interface TaxiBooking {\n  id: string;\n  status: BookingStatus;\n  bookingReference: string;\n  type: BookingType.TAXI;\n  start: TaxiLocationSegment;\n  end: TaxiLocationSegment;\n  taxiType: TaxiType;\n  transferType: TaxiTransferType;\n  serviceProvider: TaxiServiceProvider;\n  offerId: string;\n  vehicle: TaxiVehicle;\n  travelers: TaxiTraveller[];\n  cancellationPolicies: CancellationPolicy[];\n  price: Price;\n\n  // TODO: [taxi] This is a placeholder for extraItems that we need to implement in future iteration\n  items: any[];\n\n  // Applicable for flights and trains - will be null for regular taxis\n  bookingId: string;\n  segmentId: string;\n}\n\nexport class TaxiBookingModel implements TaxiBooking {\n  constructor(\n    public id: string,\n    public status: BookingStatus,\n    public bookingReference: string,\n    public type: BookingType.TAXI,\n    public start: TaxiLocationSegment,\n    public end: TaxiLocationSegment,\n    public taxiType: TaxiType,\n    public transferType: TaxiTransferType,\n    public serviceProvider: TaxiServiceProvider,\n    public offerId: string,\n    public vehicle: TaxiVehicle,\n    public travelers: TaxiTraveller[],\n    public cancellationPolicies: CancellationPolicy[],\n    public price: Price,\n    public items: any[],\n    public bookingId: string,\n    public segmentId: string,\n    public stationName: string,\n    public fromStation: boolean\n  ) {}\n\n  get pickupLocation(): string {\n    return this.fromStation\n      ? `${this.stationName}, ${this.start.locationCode}`\n      : `${this.start.address}, ${this.start.city}`;\n  }\n\n  get dropOffLocation(): string {\n    return this.fromStation ? `${this.end.address}, ${this.end.city}` : `${this.stationName}, ${this.end.locationCode}`;\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaxiBookingAdapter implements Adapter<TaxiBooking> {\n  adapt(item: TaxiBooking, bookings?: (FlightBookingModel | TrainBookingModel)[]): TaxiBookingModel {\n    const fromStation = !!item.start.locationCode;\n    const stationName = this.getStationName(item, bookings, fromStation);\n\n    return new TaxiBookingModel(\n      item?.id,\n      item?.status,\n      item?.bookingReference,\n      item?.type,\n      item?.start,\n      item?.end,\n      item?.taxiType,\n      item?.transferType,\n      item?.serviceProvider,\n      item?.offerId,\n      item?.vehicle,\n      item?.travelers,\n      item?.cancellationPolicies,\n      item?.price,\n      item?.items,\n      item?.bookingId,\n      item?.segmentId,\n      stationName,\n      fromStation\n    );\n  }\n\n  private getStationName(\n    item: TaxiBooking,\n    bookings: (FlightBookingModel | TrainBookingModel)[],\n    fromStation: boolean\n  ) {\n    const booking = bookings.find(({ id }) => id === item.bookingId);\n\n    // Flight taxi\n    if (booking instanceof FlightBookingModel) {\n      const segment = booking.segments.find((segment) => segment.id === item.segmentId);\n\n      if (segment) {\n        return fromStation ? segment.arrival.airportName : segment.departure.airportName;\n      }\n    }\n\n    // Train taxi\n    if (booking instanceof TrainBookingModel) {\n      const segment = booking.segments.find((segment) => segment.uniqueSegmentId === item.segmentId);\n\n      if (segment) {\n        return fromStation ? segment.arrivalLocationName : segment.departureLocationName;\n      }\n    }\n\n    return undefined;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Booker, Price } from './shared.model';\nimport { BookingMode, BookingStatus } from '../booking.model';\nimport { Adapter } from '../adapter';\nimport { TrainJourney, TrainJourneyAdapter, TrainJourneyModel } from './train-journey.model';\nimport { TrainTraveler, TrainTravelerAdapter, TrainTravelerModel } from './train-traveler.model';\nimport { BookingStatusV2 } from '../constants/booking-status.constants';\nimport { TrainJourneyItinerarySegmentModel } from './train-journey-intinerary-segment.model';\n\nexport interface TrainBooking {\n  id: string;\n  preOrderId: string;\n  status: BookingStatus | BookingStatusV2;\n  bookingReference: string;\n  booker: Booker;\n  rebookable: boolean;\n  refundable: boolean;\n  dynamicCancellationPolicy: boolean;\n  cancelable: boolean;\n  travellers: TrainTraveler[];\n  journeys: TrainJourney[];\n  subTotalPrice: Price;\n  bookingMode: BookingMode;\n  co2EmissionInGrams: number;\n  integrationFee: number;\n}\n\nexport class TrainBookingModel implements TrainBooking {\n  constructor(\n    public id: string,\n    public preOrderId: string,\n    public status: BookingStatus | BookingStatusV2,\n    public bookingReference: string,\n    public booker: Booker,\n    public rebookable: boolean,\n    public refundable: boolean,\n    public dynamicCancellationPolicy: boolean,\n    public cancelable: boolean,\n    public travellers: TrainTravelerModel[],\n    public journeys: TrainJourneyModel[],\n    public subTotalPrice: Price,\n    public bookingMode: BookingMode,\n    public co2EmissionInGrams: number,\n    public integrationFee: number\n  ) {}\n\n  get firstJourney(): TrainJourneyModel {\n    return this.journeys[0];\n  }\n\n  // Get all segments in one place. Useful when we need to quickly filter through all train segments\n  get segments(): TrainJourneyItinerarySegmentModel[] {\n    return this.journeys.flatMap(({ itineraries }) => itineraries.flatMap(({ segments }) => segments));\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrainBookingAdapter implements Adapter<TrainBooking> {\n  adapt(item: TrainBooking): TrainBookingModel {\n    return new TrainBookingModel(\n      item?.id,\n      item?.preOrderId,\n      item?.status,\n      item?.bookingReference,\n      item?.booker,\n      item?.rebookable,\n      item?.refundable,\n      item?.dynamicCancellationPolicy,\n      item?.cancelable,\n      (item?.travellers || []).map((item) => new TrainTravelerAdapter().adapt(item)),\n      (item?.journeys || []).map((item) => new TrainJourneyAdapter().adapt(item)),\n      item?.subTotalPrice,\n      item?.bookingMode,\n      item?.co2EmissionInGrams,\n      item?.integrationFee\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { parseISO } from 'date-fns';\nimport { Adapter } from '../adapter';\nimport { Layover } from './shared.model';\n\nexport enum ItineraryPriceGroup {\n  FIRST_CLASS = '1 class',\n  SECOND_CLASS = '2 class',\n  SEAT = 'Seat',\n}\n\nexport interface TransportInformation {\n  code: string;\n  description: string;\n  category?: string;\n}\n\nexport interface TrainJourneyItinerarySegment {\n  segmentId: string; // This is just integer number (i.e. 1, 2, 3, 4)\n  uniqueSegmentId: string; // This is unique UUID\n  transportInformation: {\n    known: TransportInformation[];\n    unknown: TransportInformation[];\n  };\n  departureDateTime: string;\n  departureLocationName: string;\n  departureLocationNameLong: string;\n  departureTaxiOption: boolean;\n  departureStationCode: string;\n  arrivalDateTime: string;\n  arrivalLocationName: string;\n  arrivalLocationNameLong: string;\n  arrivalTaxiOption: boolean;\n  arrivalStationCode: string;\n  travelMethod: string;\n  productCode: string;\n  transportId: string;\n  segmentProducer: string;\n  serviceBrandName: string;\n  duration: number;\n  bookingClass?: string; // TODO: Check type (FIRST, SECOND, etc.)\n}\n\nexport class TrainJourneyItinerarySegmentModel implements TrainJourneyItinerarySegment {\n  constructor(\n    public segmentId: string,\n    public uniqueSegmentId: string,\n    public transportInformation: {\n      known: TransportInformation[];\n      unknown: TransportInformation[];\n    },\n    public departureDateTime: string,\n    public departureLocationName: string,\n    public departureLocationNameLong: string,\n    public departureTaxiOption: boolean,\n    public departureStationCode: string,\n    public arrivalDateTime: string,\n    public arrivalLocationName: string,\n    public arrivalLocationNameLong: string,\n    public arrivalTaxiOption: boolean,\n    public arrivalStationCode: string,\n    public travelMethod: string,\n    public productCode: string,\n    public transportId: string,\n    public segmentProducer: string,\n    public serviceBrandName: string,\n    public duration: number,\n    public bookingClass?: string,\n    public layover?: Layover\n  ) {}\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrainJourneyItinerarySegmentAdapter implements Adapter<TrainJourneyItinerarySegment> {\n  adapt(\n    item: TrainJourneyItinerarySegment,\n    nextItem?: TrainJourneyItinerarySegment\n  ): TrainJourneyItinerarySegmentModel {\n    return new TrainJourneyItinerarySegmentModel(\n      item?.segmentId,\n      item?.uniqueSegmentId,\n      item?.transportInformation,\n      item?.departureDateTime,\n      item?.departureLocationName,\n      item?.departureLocationNameLong,\n      item?.departureTaxiOption,\n      item?.departureStationCode,\n      item?.arrivalDateTime,\n      item?.arrivalLocationName,\n      item?.arrivalLocationNameLong,\n      item?.arrivalTaxiOption,\n      item?.arrivalStationCode,\n      item?.travelMethod,\n      item?.productCode,\n      item?.transportId,\n      item?.segmentProducer,\n      item?.serviceBrandName,\n      item?.duration,\n      item?.bookingClass,\n      this.getLayover(item, nextItem)\n    );\n  }\n\n  private getLayover(item: TrainJourneyItinerarySegment, nextItem: TrainJourneyItinerarySegment): Layover {\n    if (!nextItem) return null;\n\n    // Get time difference between this segment and the next segment\n    const start = parseISO(item.arrivalDateTime).getTime();\n    const end = parseISO(nextItem.departureDateTime).getTime();\n    const duration = end - start;\n\n    if (!duration) return null;\n\n    return {\n      // milliseconds to minutes\n      duration: duration ? Math.floor(duration / (60 * 1000)) : 0,\n      location: item.arrivalLocationName,\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { parseISO } from 'date-fns';\nimport { Adapter } from '../adapter';\nimport {\n  ItineraryPriceGroup,\n  TrainJourneyItinerarySegment,\n  TrainJourneyItinerarySegmentAdapter,\n  TrainJourneyItinerarySegmentModel,\n} from './train-journey-intinerary-segment.model';\nimport { Layover } from './shared.model';\n\nexport interface TrainJourneyItinerary {\n  itineraryId: number;\n  priceGroupType: ItineraryPriceGroup;\n  segments: TrainJourneyItinerarySegment[];\n}\n\nexport class TrainJourneyItineraryModel implements TrainJourneyItinerary {\n  constructor(\n    public itineraryId: number,\n    public priceGroupType: ItineraryPriceGroup,\n    public segments: TrainJourneyItinerarySegmentModel[],\n    public layover?: Layover\n  ) {}\n\n  get firstSegment(): TrainJourneyItinerarySegmentModel {\n    return this.segments[0];\n  }\n\n  get lastSegment(): TrainJourneyItinerarySegmentModel {\n    return this.segments[this.segments.length - 1];\n  }\n\n  get itineraryClassLabel(): string {\n    switch (this.priceGroupType) {\n      case ItineraryPriceGroup.FIRST_CLASS:\n        return '1st class';\n      case ItineraryPriceGroup.SECOND_CLASS:\n        return '2nd class';\n      default:\n        return this.priceGroupType;\n    }\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrainJourneyItineraryAdapter implements Adapter<TrainJourneyItinerary> {\n  adapt(item: TrainJourneyItinerary, nextItem?: TrainJourneyItinerary): TrainJourneyItineraryModel {\n    return new TrainJourneyItineraryModel(\n      item?.itineraryId,\n      item?.priceGroupType,\n      (item?.segments || []).map((segment, index) => {\n        return new TrainJourneyItinerarySegmentAdapter().adapt(segment, item.segments?.[index + 1]);\n      }),\n      this.getLayover(item, nextItem)\n    );\n  }\n\n  private getLayover(item: TrainJourneyItinerary, nextItem: TrainJourneyItinerary): Layover {\n    if (!nextItem) return null;\n\n    // Get time difference between last segment from the current itinerary\n    // and the first segment from the next itinerary\n    const start = parseISO(item.segments[item.segments.length - 1].arrivalDateTime).getTime();\n    const end = parseISO(nextItem.segments[0].departureDateTime).getTime();\n    const duration = end - start;\n\n    if (!duration) return null;\n\n    return {\n      // milliseconds to minutes\n      duration: duration ? Math.floor(duration / (60 * 1000)) : 0,\n      location: item.segments[item.segments.length - 1].arrivalLocationName,\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { parseISO } from 'date-fns';\nimport { Adapter } from '../adapter';\nimport {\n  TrainJourneyItinerary,\n  TrainJourneyItineraryAdapter,\n  TrainJourneyItineraryModel,\n} from './train-journey-intinerary.model';\nimport { TrainJourneyItinerarySegmentModel } from './train-journey-intinerary-segment.model';\n\nexport enum JourneyDirection {\n  IN = 'IN',\n  OUT = 'OUT',\n}\n\nexport interface TrainJourney {\n  journeyAdviceId: number;\n  direction: JourneyDirection;\n  itineraries: TrainJourneyItinerary[];\n}\n\nexport class TrainJourneyModel implements TrainJourney {\n  constructor(\n    public journeyAdviceId: number,\n    public direction: JourneyDirection,\n    public itineraries: TrainJourneyItineraryModel[]\n  ) {}\n\n  get firstItinerary(): TrainJourneyItineraryModel {\n    return this.itineraries[0];\n  }\n\n  get lastItinerary(): TrainJourneyItineraryModel {\n    return this.itineraries[this.itineraries.length - 1];\n  }\n\n  get firstSegment(): TrainJourneyItinerarySegmentModel {\n    return this.firstItinerary.firstSegment;\n  }\n\n  get lastSegment(): TrainJourneyItinerarySegmentModel {\n    return this.lastItinerary.lastSegment;\n  }\n\n  get totalDuration(): number {\n    if (!this.itineraries.length) return 0;\n\n    const start = parseISO(this.firstSegment.departureDateTime).getTime();\n    const end = parseISO(this.lastSegment.arrivalDateTime).getTime();\n\n    const duration = end - start;\n\n    // milliseconds to minutes\n    return duration ? Math.floor(duration / (60 * 1000)) : 0;\n  }\n\n  get operatedByLabel(): string {\n    // Get all unique operators from all different itinerary segments\n    const operators = new Set(\n      this.itineraries\n        .reduce((operators, itinerary) => {\n          return [...operators, ...itinerary.segments.map((segment) => segment.segmentProducer)];\n        }, [])\n        .filter(Boolean)\n    );\n\n    return operators.size > 1\n      ? `${operators.values().next().value} +${operators.size - 1}`\n      : operators.values().next().value;\n  }\n\n  get itineraryClassLabel(): string {\n    // Get all unique itinerary class labels\n    const labels = new Set(\n      this.itineraries\n        .reduce((labels, itinerary) => {\n          return [...labels, itinerary.itineraryClassLabel];\n        }, [])\n        .filter(Boolean)\n    );\n\n    return labels.size > 1 ? `${labels.values().next().value} +${labels.size - 1}` : labels.values().next().value;\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrainJourneyAdapter implements Adapter<TrainJourney> {\n  adapt(item: TrainJourney): TrainJourneyModel {\n    return new TrainJourneyModel(\n      item?.journeyAdviceId,\n      item?.direction,\n      (item?.itineraries || []).map((itinerary, index) => {\n        return new TrainJourneyItineraryAdapter().adapt(itinerary, item.itineraries?.[index + 1]);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Adapter } from '../adapter';\nimport { Traveler, TravelerReferenceFields } from './shared.model';\n\n// TODO: populate enum with other types of addon types received from the BE\nexport enum AddonRequestType {\n  TRAIN_ADDON = 'TRAIN_ADDON',\n}\n\nexport enum AddonType {\n  SEAT = 'SEAT', // TODO: Check if this is correct as it might be SEATING\n  SEATING = 'SEATING',\n  OPTION = 'OPTION',\n}\n\n// TODO: populate enum with other addon statuses received from the BE\nexport enum AddonStatus {\n  BOOKED = 'BOOKED',\n}\n\nexport interface TrainOptionSelection {\n  journeyId: number;\n  itineraryId: number;\n  segmentId: string;\n  type: string;\n  description: string;\n}\n\nexport interface TrainSeatingSelection {\n  journeyId: number;\n  itineraryId: number;\n  segmentId: string;\n  description: string;\n  carriage: string;\n  seat: string;\n  placementOrientation: string;\n  placementCharacteristics: string;\n}\n\nexport interface TrainTravelerAddon {\n  id: string;\n  itineraryId: number;\n  journeyId: number;\n  segmentId: string;\n  travellerId: string;\n  parentId: string;\n  price: number;\n  currency: string;\n  status: AddonStatus;\n  requestType: AddonRequestType;\n  addonType: AddonType;\n  description: string;\n  integrationFee: number;\n}\n\nexport interface TrainTraveler extends Traveler {\n  travellerNumber: number;\n  phoneNumber: string;\n  optionSelections: TrainOptionSelection[];\n  seatingSelections: TrainSeatingSelection[];\n  addons: TrainTravelerAddon[];\n  userId: string;\n  costCenterId?: string;\n}\n\nexport class TrainTravelerModel implements TrainTraveler {\n  constructor(\n    public id: string,\n    public travellerNumber: number,\n    public firstName: string,\n    public lastName: string,\n    public email: string,\n    public phoneNumber: string,\n    public optionSelections: TrainOptionSelection[],\n    public seatingSelections: TrainSeatingSelection[],\n    public addons: TrainTravelerAddon[],\n    public userId: string,\n    public costCenterId: string,\n    public travelerReferenceFields: TravelerReferenceFields\n  ) {}\n\n  get fullName(): string {\n    return `${this.firstName} ${this.lastName}`;\n  }\n\n  get seatingSelectionDescription(): string {\n    return this.seatingSelections?.[0]?.description || '';\n  }\n\n  get allOptionSelections(): string {\n    return this.optionSelections\n      .reduce((options, selection) => {\n        options.push(selection.type);\n\n        return options;\n      }, [])\n      .join(', ');\n  }\n\n  segmentSeatingSelection(\n    journeyId: TrainSeatingSelection['journeyId'],\n    itineraryId: TrainSeatingSelection['itineraryId'],\n    segmentId: TrainSeatingSelection['segmentId']\n  ): string {\n    return (\n      this.seatingSelections.find((item) => {\n        return item.journeyId === journeyId && item.itineraryId === itineraryId && item.segmentId === segmentId;\n      })?.description || ''\n    );\n  }\n\n  segmentOptionSelection(\n    journeyId: TrainSeatingSelection['journeyId'],\n    itineraryId: TrainSeatingSelection['itineraryId'],\n    segmentId: TrainSeatingSelection['segmentId']\n  ): string {\n    return this.optionSelections\n      .filter((item) => {\n        return item.journeyId === journeyId && item.itineraryId === itineraryId && item.segmentId === segmentId;\n      })\n      .reduce((options, selection) => {\n        options.push(selection.type);\n\n        return options;\n      }, [])\n      .join(', ');\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrainTravelerAdapter implements Adapter<TrainTraveler> {\n  adapt(item: TrainTraveler): TrainTravelerModel {\n    return new TrainTravelerModel(\n      item?.id,\n      item?.travellerNumber,\n      item?.firstName,\n      item?.lastName,\n      item?.email,\n      item?.phoneNumber,\n      item?.optionSelections,\n      item?.seatingSelections,\n      item?.addons,\n      item?.userId,\n      item?.costCenterId,\n      item?.travelerReferenceFields\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { compareAsc } from 'date-fns';\nimport { Adapter } from './adapter';\nimport { TaxiBooking, TaxiBookingAdapter, TaxiBookingModel } from './cart-items/taxi-booking.model';\nimport { HotelBooking, HotelBookingAdapter, HotelBookingModel } from './cart-items/hotel-booking.model';\nimport { BookingStatus, bookingStatusMap, BookingUserType } from './booking.model';\nimport { TrainBooking, TrainBookingAdapter, TrainBookingModel } from './cart-items/train-booking.model';\nimport { GenericProduct, GenericProductAdapter, GenericProductModel } from './cart-items/generic-product-booking.model';\nimport { PaymentStatus } from './constants/payment-status.constants';\nimport { FlightBooking, FlightBookingAdapter, FlightBookingModel } from './cart-items/flight-booking.model';\nimport {\n  RentalCarBooking,\n  RentalCarBookingAdapter,\n  RentalCarBookingModel,\n} from './cart-items/rental-car-booking.model';\n\nexport interface Payment {\n  orderId: string;\n  paymentDate: string;\n}\n\nexport interface PackageBooking {\n  id: string;\n  ownerId: string;\n  flights: FlightBooking[];\n  hotel: HotelBooking;\n  requestedCurrency: string;\n  requestedPrice: number;\n  isRefundable: boolean;\n  packageRate: boolean;\n}\n\nexport interface OrderReferenceFields {\n  bookerEmail?: string;\n  bookerEmployeeNumber?: string;\n  bookerName?: string;\n  projectId?: string;\n  projects?: string;\n  purposeOfTrip?: string;\n  purposeOfTripId?: string;\n  yourReference?: string;\n}\n\nexport type CartOrder = Partial<Cart> & { orderReferenceFields: OrderReferenceFields };\n\nexport interface Cart {\n  id: string;\n  customerId: string;\n  travelReference: string;\n  actionStates: string[]; // TODO: Extract type\n  status: BookingStatus;\n  tripId: string;\n  tripName: string;\n  additionalTripName: string;\n  requestApprovalDueDate: string;\n  cartApprovers: string[]; // TODO: Extract type\n  startDate: string;\n  endDate: string;\n  price: Record<any, any>; // TODO: Extract type\n  payments?: Payment[];\n  paymentMethod: string; // TODO: Check with BE and create a type\n  receiptAvailable: boolean;\n  bids: string[];\n  ibs: string[];\n  packages: PackageBooking[];\n  gps: HotelBooking[];\n  gos: string[];\n  tickets: string[];\n  flightBookings: FlightBooking[];\n  taxiBookings: TaxiBooking[];\n  genericProducts: GenericProduct[];\n  trainBookings: TrainBooking[];\n  rentalCarBookings: RentalCarBooking[];\n  labels: string[];\n  outOfPolicyChecker: Record<any, any>;\n  createdById: string;\n  createdByType: string;\n  createdAt: string;\n  yourReference: string;\n  currentOrder: CartOrder;\n}\n\nexport class CartModel implements Cart {\n  constructor(\n    public id: string,\n    public customerId: string,\n    public travelReference: string,\n    public actionStates: string[],\n    public status: BookingStatus,\n    public tripId: string,\n    public tripName: string,\n    public additionalTripName: string,\n    public requestApprovalDueDate: string,\n    public cartApprovers: string[],\n    public startDate: string,\n    public endDate: string,\n    public price: Record<any, any>,\n    public payments: Payment[],\n    public paymentMethod: string,\n    public receiptAvailable: boolean,\n    public bids: string[],\n    public ibs: string[],\n    public packages: PackageBooking[],\n    public gps: HotelBookingModel[],\n    public gos: string[],\n    public tickets: string[],\n    public flightBookings: FlightBookingModel[],\n    public taxiBookings: TaxiBookingModel[],\n    public genericProducts: GenericProductModel[],\n    public trainBookings: TrainBookingModel[],\n    public rentalCarBookings: RentalCarBookingModel[],\n    public labels: string[],\n    public outOfPolicyChecker: Record<any, any>,\n    public createdById: string,\n    public createdByType: BookingUserType,\n    public createdAt: string,\n    public yourReference: string,\n    public currentOrder: CartOrder\n  ) {}\n\n  get tripStatus(): string {\n    return bookingStatusMap[this.status];\n  }\n\n  get cartPaymentStatus(): PaymentStatus {\n    if (this.isCompletedByAgent) return PaymentStatus.COMPLETED_BY_AGENT;\n\n    // TODO: Implement isDifferentPaymentTypeBookings handle here\n    //  Reference: src/app/trip/components/cart-payment-section/cart-payment-section.component.ts\n    //  Method: getCartPaymentStatus()\n\n    return PaymentStatus[this.status];\n  }\n\n  get isCreatedByAgent(): boolean {\n    return this.createdByType === BookingUserType.AGENT;\n  }\n\n  get isCompletedByAgent(): boolean {\n    return this.isCreatedByAgent && this.status === PaymentStatus.COMPLETED;\n  }\n\n  get invoiceSentToAdmin(): boolean {\n    return this.status === PaymentStatus.COMPLETED && this.paymentMethod === 'PERSONAL_CREDIT_CARD';\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartAdapter implements Adapter<Cart> {\n  adapt(item: Record<any, any>): CartModel {\n    const flightBookingModels = this.adaptFlights(item);\n    const trainBookingModels = this.adaptTrains(item);\n\n    return new CartModel(\n      item?.id,\n      item?.customerId,\n      item?.travelReference,\n      item?.actionStates || [],\n      item?.status,\n      item?.tripId,\n      item?.tripName,\n      item?.additionalTripName,\n      item?.requestApprovalDueDate,\n      item?.cartApprovers || [],\n      item?.startDate,\n      item?.endDate,\n      item?.price,\n      item?.payments,\n      item?.paymentMethod,\n      item?.receiptAvailable,\n      item?.bids,\n      item?.ibs,\n      item?.packages,\n      this.adaptHotels(item),\n      item?.gos,\n      item?.tickets,\n      flightBookingModels,\n      this.adaptTaxis(item, [...flightBookingModels, ...trainBookingModels]),\n      this.adaptGenericProducts(item),\n      trainBookingModels,\n      this.adaptRentalCars(item),\n      item?.labels,\n      item?.outOfPolicyChecker,\n      item?.createdById,\n      item?.createdByType,\n      item?.createdAt,\n      item?.yourReference,\n      item?.currentOrder\n    );\n  }\n\n  private adaptHotels(item: Record<any, any>): HotelBookingModel[] {\n    const hotels = item?.gps || [];\n\n    item.packages?.forEach((packageBooking) => {\n      if (packageBooking.hotel) {\n        hotels.push({\n          ...packageBooking.hotel,\n          requestedPrice: packageBooking.requestedPrice,\n          packageId: packageBooking.id,\n        });\n      }\n    });\n\n    return hotels.map((item) => new HotelBookingAdapter().adapt(item));\n  }\n\n  private adaptRentalCars(item: Record<any, any>): RentalCarBookingModel[] {\n    return (item?.rentalCarBookings || [])\n      .map((item) => new RentalCarBookingAdapter().adapt(item))\n      .sort((a: RentalCarBookingModel, b: RentalCarBookingModel) => {\n        // BE can return rental cars in random order, so we need to make sure they are always sorted by date\n        return compareAsc(new Date(a.pickup.dateAndTime), new Date(b.pickup.dateAndTime));\n      });\n  }\n\n  private adaptTrains(item: Record<any, any>): TrainBookingModel[] {\n    return (item?.trainBookings || [])\n      .map((item) => new TrainBookingAdapter().adapt(item))\n      .sort((a: TrainBookingModel, b: TrainBookingModel) => {\n        // BE will return train journeys in random order, so we need to make sure they are always sorted by date\n        return compareAsc(\n          new Date(a.firstJourney.firstSegment.departureDateTime),\n          new Date(b.firstJourney.firstSegment.departureDateTime)\n        );\n      });\n  }\n\n  private adaptGenericProducts(item: Record<any, any>): GenericProductModel[] {\n    return (item?.genericProducts || []).map((item) => new GenericProductAdapter().adapt(item));\n  }\n\n  private adaptTaxis(\n    item: Record<any, any>,\n    bookingModels: (FlightBookingModel | TrainBookingModel)[]\n  ): TaxiBookingModel[] {\n    return (item?.taxiBookings || [])\n      .map((item) => new TaxiBookingAdapter().adapt(item, bookingModels))\n      .sort((a: TaxiBookingModel, b: TaxiBookingModel) => {\n        // BE will return taxi journeys in random order, so we need to make sure they are always sorted by date\n        return compareAsc(new Date(a.start.datetime), new Date(b.start.datetime));\n      });\n  }\n\n  private adaptFlights(item: Record<any, any>): FlightBookingModel[] {\n    const flights = item?.flightBookings || [];\n\n    item.packages?.forEach((packageBooking) => {\n      packageBooking.flights.forEach((flightBooking) => {\n        flights.push({\n          ...flightBooking,\n          totalPrice: packageBooking.requestedPrice,\n          packageId: packageBooking.id,\n        });\n      });\n    });\n\n    return flights\n      .map((item) => new FlightBookingAdapter().adapt(item))\n      .sort((a: FlightBookingModel, b: FlightBookingModel) => {\n        // BE will return flights in random order, so we need to make sure they are always sorted by date\n        return compareAsc(\n          new Date(a.firstFlight.firstSegment.departure.time),\n          new Date(b.firstFlight.firstSegment.departure.time)\n        );\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Adapter } from './adapter';\nimport { PaymentType } from './payment.model';\n\nexport interface ReferenceFieldItem {\n  description: string;\n  id: string;\n  name: string;\n  type: string;\n}\n\nexport interface CheckoutOptionsResponse {\n  paymentOptions: { name: PaymentType; selected: boolean }[];\n  project?: {\n    mandatory: boolean;\n    label: string;\n    items: ReferenceFieldItem[];\n  };\n  purposeOfTrip?: {\n    mandatory: boolean;\n    label: string;\n    items: ReferenceFieldItem[];\n  };\n  yourReference?: {\n    mandatory: boolean;\n    label: string;\n  };\n}\n\nexport interface CheckoutOptions extends CheckoutOptionsResponse {}\n\nexport class CheckoutOptionsModel implements CheckoutOptions {\n  // TODO: Add proper types\n  constructor(public paymentOptions: any, public project: any, public purposeOfTrip: any, public yourReference: any) {}\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutOptionsAdapter implements Adapter<CheckoutOptions> {\n  adapt(item: CheckoutOptions): CheckoutOptionsModel {\n    return new CheckoutOptionsModel(item.paymentOptions, item?.project, item?.purposeOfTrip, item?.yourReference);\n  }\n}\n\nexport type BookingChannelsResponse = string[];\n\nexport class BookingChannelModel {\n  constructor(public name: string, public value: string) {}\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BookingChannelsAdapter implements Adapter<BookingChannelModel> {\n  adapt(item: string): BookingChannelModel {\n    return new BookingChannelModel(item, item);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Adapter } from './adapter';\n\nexport enum CompanyUserStatus {\n  PENDING = 'PENDING', // User is created but invitation email is not sent\n  INVITED = 'INVITED', // Invitation email is sent to the user\n  ACCEPTED = 'ACCEPTED', // User has used the email link and has activated profile by setting up a password\n  EXPIRED = 'EXPIRED', // Invitation email is sent but token is expired before it is used\n}\n\nexport enum CompanyUserRole {\n  ADMIN = 'ADMIN',\n  TRAVELLER = 'TRAVELLER',\n}\n\nexport enum TravelDocumentType {\n  PASSPORT = 'PASSPORT',\n  ID_CARD = 'ID_CARD',\n}\n\nexport enum Gender {\n  MALE = 'MALE',\n  FEMALE = 'FEMALE',\n}\n\nexport interface TravelDocument {\n  id: string;\n  customerId: string;\n  idNumber: string;\n  issuingDate: string;\n  expiryDate: string;\n  firstName: string;\n  lastName: string;\n  type: TravelDocumentType;\n  dateOfBirth: string;\n  countryOfIssuance: string;\n  gender: Gender;\n  nationality: string;\n  defaultDocument: boolean;\n  completed: boolean;\n}\n\nexport interface CompanyUser {\n  id: string;\n  role: CompanyUserRole;\n  active: boolean;\n  status: CompanyUserStatus;\n  birthDate: string;\n  createdDate: string;\n  username: string;\n  firstname: string;\n  lastname: string;\n  phone: string;\n  address: string;\n  city: string;\n  zipcode: string;\n  country: string;\n  language: string;\n  currency: string;\n  agentNote: string;\n  companyId: string;\n  companyName: string;\n  travelDocuments: TravelDocument[];\n}\n\nexport class CompanyUserModel implements CompanyUser {\n  constructor(\n    public id: string,\n    public role: CompanyUserRole,\n    public active: boolean,\n    public status: CompanyUserStatus,\n    public birthDate: string,\n    public createdDate: string,\n    public username: string,\n    public firstname: string,\n    public lastname: string,\n    public phone: string,\n    public address: string,\n    public city: string,\n    public zipcode: string,\n    public country: string,\n    public language: string,\n    public currency: string,\n    public agentNote: string,\n    public companyId: string,\n    public companyName: string,\n    public travelDocuments: TravelDocument[]\n  ) {}\n\n  get fullName(): string {\n    return `${this.firstname} ${this.lastname}`;\n  }\n\n  // Try to get date of birth from the object or one of the documents\n  get dateOfBirth(): string {\n    return this.birthDate || this.idCard?.dateOfBirth || this.passport?.dateOfBirth;\n  }\n\n  get idCard(): TravelDocument {\n    return this.travelDocuments.find((item) => item.type === TravelDocumentType.ID_CARD);\n  }\n\n  get passport(): TravelDocument {\n    return this.travelDocuments.find((item) => item.type === TravelDocumentType.PASSPORT);\n  }\n}\n\n@Injectable({ providedIn: 'root' })\nexport class CompanyUserAdapter implements Adapter<CompanyUser> {\n  adapt(item: Record<any, any>): CompanyUserModel {\n    return new CompanyUserModel(\n      item?.id,\n      item?.role,\n      item?.active,\n      item?.status,\n      item?.birthDate,\n      item?.createdDate,\n      item?.username,\n      item?.firstname,\n      item?.lastname,\n      item?.phone,\n      item?.address,\n      item?.city,\n      item?.zipcode,\n      item?.country,\n      item?.language,\n      item?.currency,\n      item?.agentNote,\n      item?.companyId,\n      item?.companyName,\n      item?.travelDocuments || []\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Adapter } from './adapter';\n\nexport enum CompanyStatus {\n  NONE = 'NONE',\n  AT_RISK = 'AT_RISK',\n  VIP = 'VIP',\n}\n\nexport enum SubscriptionStatus {\n  PENDING = 'PENDING',\n  ACTIVE = 'ACTIVE',\n  DUNNING = 'DUNNING',\n  CANCELLED = 'CANCELLED',\n  SUSPEND = 'SUSPEND',\n  DISABLED = 'DISABLED',\n  COMPLETED = 'COMPLETED',\n}\n\nexport interface Company {\n  id: string;\n  corporationName: string;\n  // Can be null in some cases, though it is not expected since it is a required value\n  registrationNumber: string;\n  // Can be null in some cases, though it is not expected since it is auto-generated\n  activatedAt: string;\n  agentNote: string;\n  status: CompanyStatus;\n  subscriptionStatus: SubscriptionStatus;\n}\n\nexport class CompanyModel implements Company {\n  constructor(\n    public id: string,\n    public corporationName: string,\n    public registrationNumber: string,\n    public activatedAt: string,\n    public agentNote: string,\n    public status: CompanyStatus,\n    public subscriptionStatus: SubscriptionStatus\n  ) {}\n\n  get isDisabled(): boolean {\n    return this.subscriptionStatus === SubscriptionStatus.DISABLED;\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompanyAdapter implements Adapter<Company> {\n  adapt(item: Company): CompanyModel {\n    return new CompanyModel(\n      item?.id,\n      item?.corporationName,\n      item?.registrationNumber,\n      item?.activatedAt,\n      item?.agentNote,\n      // TODO: Since this is new column, check with BE if they can return NONE by default for old companies\n      item?.status || CompanyStatus.NONE,\n      item?.subscriptionStatus\n    );\n  }\n}\n","export enum BookingStatusV2 {\n  DRAFT = 'DRAFT',\n  PENDING = 'PENDING',\n  COMPLETED = 'COMPLETED',\n  CANCELLED = 'CANCELLED',\n  EXPIRED = 'EXPIRED',\n  INTERNAL_ERROR = 'INTERNAL_ERROR',\n  CUSTOMER_ACCEPTED = 'CUSTOMER_ACCEPTED',\n  ADMIN_REJECTED = 'ADMIN_REJECTED',\n  UNAVAILABLE = 'UNAVAILABLE',\n  CUSTOMER_REFUNDED = 'CUSTOMER_REFUNDED',\n\n  // refunded automatically -> when you have approval process and trip is rejected by approver,\n  REFUNDED_AUTOMATICALLY = 'REFUNDED_AUTOMATICALLY',\n  COMPLETED_BY_AGENT = 'COMPLETED_BY_AGENT',\n\n  // train booking statuses -- they are different from other booking statuses\n  REQUEST = 'REQUEST',\n  COMPLETION = 'COMPLETION',\n  CANCELLATION = 'CANCELLATION',\n  EXPIRATION = 'EXPIRATION',\n  REBOOK = 'REBOOK',\n\n  // Validation error received from be and mapped in booking status\n  NOT_AVAILABLE_ANYMORE = 'NOT_AVAILABLE_ANYMORE',\n  NON_EQUAL_CURRENCY_AS_CART = 'NON_EQUAL_CURRENCY_AS_CART',\n  PRICE_UPDATED = 'PRICE_UPDATED',\n\n  // Validation error received from be during payment, not mapped in booking status\n  COST_CENTER_IS_MANDATORY = 'COST_CENTER_IS_MANDATORY',\n  COST_CENTER_IS_NOT_VALID = 'COST_CENTER_IS_NOT_VALID',\n}\n","// TODO check with be which statuses are related to old booking and remove them\nexport enum PaymentStatus {\n  OUT_OF_POLICY = 'OUT_OF_POLICY',\n  APPROVAL_NEEDED = 'APPROVAL_NEEDED',\n  PAYABLE = 'PAYABLE',\n  COMPLETED_BY_AGENT = 'COMPLETED_BY_AGENT',\n  APPROVAL_ACCEPTED = 'APPROVAL_ACCEPTED',\n  APPROVAL_APPROVED = 'APPROVAL_APPROVED',\n  APPROVAL_PENDING = 'APPROVAL_PENDING',\n  APPROVAL_REJECTED = 'APPROVAL_REJECTED',\n  DRAFT = 'DRAFT',\n  LOCKED = 'LOCKED',\n  COMPLETED = 'COMPLETED',\n  PROCESSING_PURCHASE = 'PROCESSING_PURCHASE',\n  REFUNDED = 'REFUNDED',\n  PENDING_CONFIRMATION = 'PENDING_CONFIRMATION',\n  COMPLETED_EMPTY = 'COMPLETED_EMPTY',\n  PENDING = 'PENDING',\n  DONE = 'DONE',\n  EMPTY = 'EMPTY',\n  DELETABLE = 'DELETABLE',\n  SEND_GO_REQUEST = 'SEND_GO_REQUEST',\n  UNDEFINED = 'UNDEFINED',\n  DIFFERENT_PAYMENT = 'DIFFERENT_PAYMENT',\n  REJECTED = 'REJECTED',\n  PENDING_APPROVAL = 'PENDING_APPROVAL',\n  ORDER_PROCESSING = 'ORDER_PROCESSING',\n  PAY_NOW = 'PAY_NOW',\n}\n","export const productTypeIconsMap = {\n  hotel: 'hotel',\n  flight: 'flight',\n  bus: 'directions_bus',\n  train: 'train',\n  taxi: 'local_taxi',\n  'rental car': 'directions_car',\n\n  // Default icon to be used if no match is found\n  default: 'person_outline',\n};\n","import { Injectable } from '@angular/core';\nimport { Adapter } from './adapter';\n\nexport interface TravelerCostCenterResponse {\n  customerId: string;\n  // TODO: Check if we need CompanyCostCenterRequest[] here\n  companyCostCenterDTOList: CostCenter[];\n}\n\nexport interface CostCenter {\n  id: string;\n  name: string;\n  description: string;\n  userIds: string[];\n  groupIds: string[];\n  createdAt: string; // TODO: BE to rename this prop from created to createdAt\n  deletedAt: string; // TODO: BE to rename this prop from deleteAt to deletedAt\n  archived: boolean;\n}\n\nexport interface CostCentersSettings {\n  areCostCentersMandatory: boolean;\n  areCostCentersVisibleToAll: boolean;\n  costCenterExists: boolean;\n}\n\nexport class TravellerCostCentersModel {\n  constructor(public customerId: string, public costCenters: CostCenter[]) {}\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TravellerCostCentersAdapter implements Adapter<TravellerCostCentersModel> {\n  adapt(item: TravelerCostCenterResponse): TravellerCostCentersModel {\n    return new TravellerCostCentersModel(item.customerId, item.companyCostCenterDTOList);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Adapter } from './adapter';\n\nexport interface Feature {\n  id: string;\n  description: string;\n  enabled: boolean;\n}\n\nexport class FeatureModel implements Feature {\n  constructor(public id: string, public description: string, public enabled: boolean) {}\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FeatureAdapter implements Adapter<Feature> {\n  adapt(item: Feature): FeatureModel {\n    return new FeatureModel(item.id, item.description, item.enabled);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Adapter } from './adapter';\nimport { MemberIds } from './member-ids.model';\nimport { PaymentType } from './payment.model';\nimport { Country } from './country.model';\n\nexport enum LodgeCardProviderCode {\n  CCDC = 'CCDC',\n  CCTP = 'CCTP',\n  CCCA = 'CCCA',\n  CCAX = 'CCAX',\n}\n\nexport interface LodgeCard extends MemberIds {\n  id: string;\n  name: string;\n  creditCardNumber: string;\n  expiryDate: string;\n  provider: LodgeCardProviderCode;\n  currency: string;\n  country: Country;\n  contactFirstName: string;\n  contactLastName: string;\n  contactEmail: string;\n  vatNumber: string;\n  invoiceRecipientEmail: string;\n  clientCorporationId: string;\n  addressLine: string;\n  city: string;\n  companyLegalName: string;\n  companyRegistrationNumber: string;\n  postalCode: string;\n  expiryDateTrailingValue: string;\n  backOfficeCustomerId?: string;\n  isOnboarded: boolean;\n  memberCount: number;\n}\n\nexport class LodgeCardModel implements LodgeCard {\n  paymentType: PaymentType = PaymentType.LODGE_CARD;\n\n  constructor(\n    public id: string,\n    public name: string,\n    public creditCardNumber: string,\n    public expiryDate: string,\n    public provider: LodgeCardProviderCode,\n    public currency: string,\n    public country: Country,\n    public contactFirstName: string,\n    public contactLastName: string,\n    public contactEmail: string,\n    public vatNumber: string,\n    public invoiceRecipientEmail: string,\n    public clientCorporationId: string,\n    public addressLine: string,\n    public city: string,\n    public companyLegalName: string,\n    public companyRegistrationNumber: string,\n    public postalCode: string,\n    public expiryDateTrailingValue: string,\n    public backOfficeCustomerId: string,\n    public isOnboarded: boolean,\n    public memberCount: number,\n    public groupIds: string[],\n    public employeeIds: string[]\n  ) {}\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LodgeCardAdapter implements Adapter<LodgeCard> {\n  adapt(item: LodgeCard): LodgeCardModel {\n    return new LodgeCardModel(\n      item.id,\n      item.name,\n      item.creditCardNumber,\n      item.expiryDate,\n      item.provider,\n      item.currency,\n      item.country,\n      item.contactFirstName,\n      item.contactLastName,\n      item.contactEmail,\n      item.vatNumber,\n      item.invoiceRecipientEmail,\n      item.clientCorporationId,\n      item.addressLine,\n      item.city,\n      item.companyLegalName,\n      item.companyRegistrationNumber,\n      item.postalCode,\n      item.expiryDateTrailingValue,\n      item.backOfficeCustomerId,\n      item.isOnboarded,\n      item.memberCount,\n      item.groupIds,\n      item.employeeIds\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Adapter } from './adapter';\n\nexport interface PaginationData {\n  size: number;\n  number: number;\n  numberOfElements: number;\n  totalElements: number;\n  totalPages: number;\n}\n\nexport interface PaginatedData<T> {\n  data: T[];\n  pagination: PaginationData;\n}\n\nexport interface PaginatedResponse<T> {\n  content: T[];\n  currentPage: number;\n  pageSize: number;\n  totalItems: number;\n  totalPages: number;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaginatedDataAdapter<T> implements Adapter<PaginatedData<T>> {\n  adapt(data: PaginatedResponse<T>): PaginatedData<T> {\n    return {\n      data: data.content,\n      pagination: {\n        size: data.pageSize,\n        number: data.currentPage - 1, // We use 0 index for pagination\n        numberOfElements: data.content.length,\n        totalElements: data.totalItems,\n        totalPages: data.totalPages,\n      } as PaginationData,\n    };\n  }\n}\n","export enum PaymentType {\n  CREDIT_CARD = 'CREDIT_CARD',\n  BILLING_PROFILE = 'BILLING_PROFILE',\n  LODGE_CARD = 'LODGE_CARD',\n}\n\nexport enum SalesModel {\n  PASS_THROUGH = 'PASS_THROUGH',\n  ADD_MARKUP = 'ADD_MARKUP',\n}\n","import { Injectable } from '@angular/core';\nimport { compareAsc } from 'date-fns';\nimport { FormArray, FormControl, FormGroup } from '@angular/forms';\nimport { Adapter } from './adapter';\nimport { BookingReference } from './cart-items/flight-booking.model';\nimport { Flight, FlightAdapter, FlightDestination, FlightModel } from './cart-items/flight.model';\nimport { UserTitle } from './cart-items/shared.model';\nimport { PaymentType } from './payment.model';\nimport { CostCenter } from './cost-center.model';\nimport { BillingProfile } from './billing-profile.model';\nimport { LodgeCard } from './lodge-card.model';\nimport { VendorPaymentPresentation, VendorsPaymentProvider } from './vendors-payment-provider.model';\nimport { BookingChannelModel, ReferenceFieldItem } from './checkout-options.model';\n\n// Flight PNR Confirmation\nexport interface FlightPNRConfirmationRequest {\n  tripName: string;\n  bookingReference: BookingReference;\n  bookerId: string;\n  finalDestination: string;\n  travellers: {\n    id: string;\n    externalId: string;\n    costCenterId: string;\n    phone: string;\n    email: string;\n  }[];\n  paymentInfo: {\n    // TODO: vendorPaymentPresentation should not be needed, but since backend can not get paymentProvider simply\n    //  by it's ID, this was a quick workaround. Check with Vlada P. about a potential refactor in the future.\n    vendorPaymentPresentation: string;\n    vendorPaymentProviderId: string;\n    vendorPaymentId: string;\n    customerPaymentType: PaymentType;\n    customerPaymentId: string;\n    sellPrice: number;\n    exchangePenalty: number;\n    residualValue: number;\n  };\n  referenceFields: {\n    projectId: string;\n    projectName: string;\n    purposeOfTripId: string;\n    purposeOfTripName: string;\n    yourReference: string;\n  };\n  agentFee: string;\n  agentNote: string;\n}\n\nexport interface FlightPNRConfirmationForm {\n  travellers: FormArray<\n    FormGroup<{\n      id: FormControl<string>;\n      externalId: FormControl<string>;\n      costCenter: FormControl<CostCenter>;\n      phone: FormControl<string>;\n      email: FormControl<string>;\n    }>\n  >;\n  vendorsPaymentProvider: FormControl<VendorsPaymentProvider>;\n  vendorsLodgeCard?: FormControl<LodgeCard>;\n  referenceId?: FormControl<string>;\n  salesModel: FormControl<string>;\n  purchasePrice?: FormControl<number>;\n  sellPrice: FormControl<number>;\n  residualValue?: FormControl<number>;\n  exchangePenalty?: FormControl<number>;\n  paymentMethod: FormControl<string>;\n  billingProfile?: FormControl<BillingProfile>;\n  lodgeCard?: FormControl<LodgeCard>;\n  project: FormControl<ReferenceFieldItem>;\n  purposeOfTrip: FormControl<ReferenceFieldItem>;\n  yourReference: FormControl<string>;\n  agentFee: FormControl<BookingChannelModel>;\n  note: FormControl<string>;\n}\n\nexport interface FlightPNRConfirmation {\n  cartId: string;\n}\n\n// Flight PNR Validation\nexport interface FlightPNRValidationRequest {\n  bookingReference: {\n    reference: string;\n    source: string;\n  };\n  bookerId: string;\n}\n\nexport enum FlightPNRValidationState {\n  NEW = 'NEW',\n  EXISTING = 'EXISTING',\n  CANCELED = 'CANCELED',\n}\n\nexport interface PNRValidationTraveler {\n  externalId: string;\n  title: UserTitle;\n  firstName: string;\n  lastName: string;\n  email?: string; // Optional and only available for existing PNRs\n}\n\nexport enum FormOfPaymentType {\n  CASH = 'Cash',\n  CREDIT_CARD = 'CreditCard',\n}\n\nexport enum CreditCardVendor {\n  DINERS = 'Diners',\n  MASTERCARD = 'Mastercard',\n}\n\nexport interface FormOfPaymentCache {\n  type: FormOfPaymentType.CASH;\n}\n\nexport interface FormOfPaymentCreditCard {\n  type: FormOfPaymentType.CREDIT_CARD;\n  creditCard: {\n    vendor: CreditCardVendor;\n    number: string;\n    expiry: string;\n  };\n}\n\nexport type FormOfPayment = FormOfPaymentCache | FormOfPaymentCreditCard;\n\nexport interface FlightPNRValidation {\n  totalPrice: number;\n  totalPriceWithMarkup: number;\n  currency: string;\n  flights: Flight[];\n  travellers: PNRValidationTraveler[];\n  bookingReference: BookingReference;\n  state: FlightPNRValidationState;\n  updates: string[];\n  formOfPayment?: FormOfPayment;\n  finalDestination?: string;\n  cartId?: string;\n}\n\nexport class FlightPNRValidationModel implements FlightPNRValidation {\n  constructor(\n    public totalPrice: number,\n    public totalPriceWithMarkup: number,\n    public currency: string,\n    public flights: FlightModel[],\n    public travellers: PNRValidationTraveler[],\n    public bookingReference: BookingReference,\n    public state: FlightPNRValidationState,\n    public updates: string[],\n    public formOfPayment?: FormOfPayment,\n    public finalDestination?: string,\n    public cartId?: string\n  ) {}\n\n  get firstFlight(): FlightModel {\n    return this.flights[0];\n  }\n\n  get lastFlight(): FlightModel {\n    return this.flights[this.flights.length - 1];\n  }\n\n  get valid(): boolean {\n    return !!this.bookingReference?.reference;\n  }\n\n  get isReturnFlight(): boolean {\n    return this.firstFlight.firstSegment.departure.airportCode === this.lastFlight.lastSegment.arrival.airportCode;\n  }\n\n  get flightDetailsTitle() {\n    if (this.isReturnFlight) {\n      return `Round trip to ${this.flightDestination?.airportName} (${this.flightDestination?.airportCode})`;\n    }\n\n    const from = this.firstFlight.firstSegment.departure;\n    const to = this.lastFlight.lastSegment.arrival;\n\n    return `${from.airportName} (${from.airportCode}) - ${to.airportName} (${to.airportCode})`;\n  }\n\n  get flightDestination(): FlightDestination | null {\n    if (!this.flights.length) return null;\n\n    // First we check number of segments - 2 flight segments means we have a return flight already\n    if (this.flights.length === 2) return this.firstFlight.lastSegment.arrival;\n\n    // Next we rule-out one way flights\n    if (!this.isReturnFlight) return this.firstFlight.lastSegment.arrival;\n\n    // If segments are symmetrical we can possibly auto-determine flight destination\n    // We determine that by getting all the arrival|departure airport code combinations and checking if every one of\n    // them is doubled. We only keep unique values and the count should be equal to number of segments\n    const isSymmetrical =\n      this.firstFlight.segments.reduce((codes, segment) => {\n        // To check this we create all possible combinations by mixing departure and arrival\n        // and squash them by removing duplicates. For example:\n        // If we have a flight from ARN -> MMX and return flight from MMX -> ARN\n        // It will give us these 4 options: ARN|MMX, MMX|ARN and return flight MMX|ARN, ARN|MMX\n        // When squashed we will get only 2 combos ARN|MMX, MMX|ARN meaning that the flight is symmetric\n        codes.add([segment.departure.airportCode, segment.arrival.airportCode].join('|'));\n        codes.add([segment.arrival.airportCode, segment.departure.airportCode].join('|'));\n\n        return codes;\n      }, new Set()).size === this.firstFlight.segments.length;\n\n    if (this.firstFlight.segments.length % 2 === 0 && isSymmetrical) {\n      // In this case final destination is located exactly on the middle segment's arrival\n      return this.firstFlight.segments[this.firstFlight.segments.length / 2 - 1].arrival;\n    }\n\n    // If we can't determine the flight destination, lets check if we have final destination airport code set\n    if (this.finalDestination) {\n      // And if we do, we can search through middle segments to find the destination airport code\n      return this.firstFlight.midSegments.find((segment) => {\n        return segment.arrival.airportCode === this.finalDestination;\n      })?.arrival;\n    }\n\n    // Otherwise we can not determine the flight destination and agent will have to do that manually\n    return null;\n  }\n\n  get isNew(): boolean {\n    return this.state === FlightPNRValidationState.NEW;\n  }\n\n  get isPreview(): boolean {\n    return this.state === FlightPNRValidationState.EXISTING && !this.hasUpdates;\n  }\n\n  get hasUpdates(): boolean {\n    return !!this.updates?.length;\n  }\n\n  get vendorType(): VendorPaymentPresentation[] {\n    if (!this.formOfPayment)\n      return [VendorPaymentPresentation.CASH, VendorPaymentPresentation.VCC, VendorPaymentPresentation.LODGE_CARD];\n\n    // If form of payment is cash, vendor type must be cash as well\n    if (this.formOfPayment?.type === FormOfPaymentType.CASH) return [VendorPaymentPresentation.CASH];\n\n    // Credit Card\n    return [VendorPaymentPresentation.VCC, VendorPaymentPresentation.LODGE_CARD];\n  }\n}\n\n@Injectable({ providedIn: 'root' })\nexport class FlightPNRValidationAdapter implements Adapter<FlightPNRValidation> {\n  adapt(item: FlightPNRValidation): FlightPNRValidationModel {\n    return new FlightPNRValidationModel(\n      item?.totalPrice,\n      item?.totalPriceWithMarkup,\n      item?.currency,\n      (item?.flights || [])\n        .map((item) => new FlightAdapter().adapt(item))\n        .sort((a: FlightModel, b: FlightModel) => {\n          // BE can return flights in random order, so we need to make sure they are always sorted by date\n          return compareAsc(new Date(a.firstSegment.departure.time), new Date(b.firstSegment.departure.time));\n        }),\n      item?.travellers || [],\n      item?.bookingReference,\n      item?.state,\n      item?.updates,\n      item?.formOfPayment,\n      item?.finalDestination,\n      item?.cartId\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Adapter } from './adapter';\n\nexport interface Product {\n  id: string;\n  name: string;\n  base: boolean;\n  active: boolean;\n}\n\nexport class ProductModel implements Product {\n  constructor(public id: string, public name: string, public base: boolean, public active: boolean) {}\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductAdapter implements Adapter<Product> {\n  adapt(item: Product): ProductModel {\n    return new ProductModel(item?.id, item?.name, !!item?.base, !!item?.active);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { formatDistanceStrict } from 'date-fns';\nimport { Adapter } from './adapter';\n\nexport enum SystemMessageStatus {\n  OPENED = 'OPENED',\n  CLOSED = 'CLOSED',\n}\n\nexport interface SystemMessage {\n  id: string;\n  description: string;\n  activatedAt: string;\n  // Will only have value if a message is closed\n  closedAt?: string;\n  // Will only have value if a message is closed\n  closedBy?: string;\n  status: SystemMessageStatus;\n}\n\nexport class SystemMessageModel implements SystemMessage {\n  constructor(\n    public id: string,\n    public description: string,\n    public activatedAt: string,\n    public closedAt: string,\n    public closedBy: string,\n    public status: SystemMessageStatus\n  ) {}\n\n  get durationOpened(): string {\n    const endDate = this.isClosed() ? new Date(this.closedAt) : new Date();\n\n    // TODO: Maybe handle small durations differently and display custom format\n    //  For example if its less than one day we can have it as (12 hours 43 minutes)\n    //  If its longer we keep as it is and display just the largest unit, ie. 14 months will be displayed as (1 year)\n    return formatDistanceStrict(new Date(this.activatedAt), endDate);\n  }\n\n  isOpen(): boolean {\n    return this.status === SystemMessageStatus.OPENED;\n  }\n\n  isClosed(): boolean {\n    return this.status === SystemMessageStatus.CLOSED;\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SystemMessageAdapter implements Adapter<SystemMessage> {\n  adapt(item: SystemMessage): SystemMessageModel {\n    return new SystemMessageModel(\n      item?.id,\n      item?.description,\n      item?.activatedAt,\n      item?.closedAt,\n      item?.closedBy,\n      item?.status || SystemMessageStatus.OPENED\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Adapter } from './adapter';\n\nexport enum UserType {\n  // NOTE: Sorted from lowest to highest level\n  AGENT = 'AGENT',\n  ADMIN = 'ADMIN',\n  SUPER_ADMIN = 'SUPER_ADMIN',\n}\n\nexport interface User {\n  id: string;\n  token?: string;\n  username: string;\n  type: UserType;\n  firstName: string;\n  lastName: string;\n  phone: string;\n  password: string | null;\n  disabled: boolean;\n}\n\nexport class UserModel implements User {\n  constructor(\n    public id: string,\n    public token: string | null,\n    public username: string,\n    public type: UserType,\n    public firstName: string,\n    public lastName: string,\n    public phone: string,\n    public password: string | null,\n    public disabled: boolean\n  ) {}\n\n  get fullName(): string {\n    return `${this.firstName} ${this.lastName}`;\n  }\n\n  isAgent(): boolean {\n    return this.type === UserType.AGENT;\n  }\n\n  isAdmin(): boolean {\n    return this.type === UserType.ADMIN;\n  }\n\n  isSuperAdmin(): boolean {\n    return this.type === UserType.SUPER_ADMIN;\n  }\n\n  hasAdminAccess(): boolean {\n    return this.isAdmin() || this.isSuperAdmin();\n  }\n\n  // User can only update equal or lover levels of users\n  hasPermissionToUpdate(type: UserType): boolean {\n    const levels = Object.keys(UserType);\n\n    return levels.indexOf(this.type) >= levels.indexOf(type);\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserAdapter implements Adapter<User> {\n  adapt(item: User): UserModel {\n    return new UserModel(\n      item?.id,\n      item?.token,\n      item?.username,\n      item?.type,\n      item?.firstName,\n      item?.lastName,\n      item?.phone,\n      item?.password,\n      item?.disabled\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Adapter } from './adapter';\n\nexport interface VatCategory {\n  id: string;\n  name: string;\n  productId: string;\n  productName: string;\n  countryId: string;\n  active: boolean;\n  externalId: string;\n  vatPercentage: number;\n}\n\nexport class VatCategoryModel implements VatCategory {\n  constructor(\n    public id: string,\n    public name: string,\n    public productId: string,\n    public productName: string,\n    public countryId: string,\n    public active: boolean,\n    public externalId: string,\n    public vatPercentage: number\n  ) {}\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VatCategoryAdapter implements Adapter<VatCategory> {\n  adapt(item: VatCategory): VatCategoryModel {\n    return new VatCategoryModel(\n      item?.id,\n      item?.name,\n      item?.productId,\n      item?.productName,\n      item?.countryId,\n      item?.active,\n      item?.externalId,\n      item?.vatPercentage\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Adapter } from './adapter';\n\nexport enum VendorName {\n  // [Flight product] related vendor names\n  AMADEUS = 'Amadeus', // AMADEUS_GDS\n  LUFTHANSA = 'LufthansaGroup', // LUFTHANSA_NDC\n}\n\nexport interface Vendor {\n  id: string;\n  externalId: string;\n  name: string;\n  productIds: string[];\n  active: boolean;\n  // We will get this if we filter by productId because each product can have a different hard-coded vendor name\n  // Example: AMADEUS_GDS -> Amadeus, LUFTHANSA_NDC -> LufthansaGroup, etc.\n  vendorName?: VendorName;\n}\n\nexport class VendorModel implements Vendor {\n  constructor(\n    public id: string,\n    public externalId: string,\n    public name: string,\n    public productIds: string[],\n    public active: boolean,\n    public vendorName?: VendorName\n  ) {}\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VendorAdapter implements Adapter<Vendor> {\n  adapt(item: Vendor): VendorModel {\n    // Temporary hack since BE is returning string instead of boolean statuses\n    if (['false', 'true'].includes((<unknown>item?.active) as string)) {\n      item.active = ((<unknown>item.active) as string) === 'true';\n    }\n\n    return new VendorModel(item?.id, item?.externalId, item?.name, item?.productIds, !!item?.active, item?.vendorName);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Adapter } from './adapter';\n\nexport enum VendorPaymentPresentation {\n  // [Flight product + Amadeus vendor] related vendor types\n  CASH = 'CASH', // BSP\n  VCC = 'VCC', // Ixaris, Airplus\n  LODGE_CARD = 'LODGE_CARD', // Diners\n}\n\nexport interface VendorsPaymentProvider {\n  id: string;\n  name: string;\n  externalId: string;\n  vendorIds: string[];\n  active: boolean;\n  // We will get this if we filter by productId and vendorId because each\n  // vendor can have different mapping for the same payment provider\n  // Example: BSP -> CASH, Ixaris -> VCC, Diners -> LODGE_CARD, etc.\n  vendorPaymentPresentation?: VendorPaymentPresentation;\n}\n\nexport class VendorsPaymentProviderModel implements VendorsPaymentProvider {\n  constructor(\n    public id: string,\n    public name: string,\n    public externalId: string,\n    public vendorIds: string[],\n    public active: boolean,\n    public vendorPaymentPresentation?: VendorPaymentPresentation\n  ) {}\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VendorsPaymentProviderAdapter implements Adapter<VendorsPaymentProvider> {\n  adapt(item: VendorsPaymentProvider): VendorsPaymentProviderModel {\n    return new VendorsPaymentProviderModel(\n      item?.id,\n      item?.name,\n      item?.externalId,\n      item?.vendorIds,\n      !!item?.active,\n      item?.vendorPaymentPresentation\n    );\n  }\n}\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport { User, UserAdapter } from '../models/user.model';\nimport { UserActions } from '../actions/users.actions';\nimport { AuthActions } from '../actions/auth.actions';\n\nexport interface State {\n  user: User;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: State = {\n  user: null,\n  loading: false,\n  error: null,\n};\n\nconst authReducer = createReducer(\n  initialState,\n\n  on(AuthActions.login, AuthActions.logoutSuccess, (state: State) => ({\n    ...state,\n    user: null,\n    error: null,\n  })),\n  on(AuthActions.loginStart, AuthActions.logoutStart, (state: State) => ({\n    ...state,\n    loading: true,\n  })),\n  on(AuthActions.loginSuccess, AuthActions.setLoggedInUser, (state: State, { data }) => ({\n    ...state,\n    user: data,\n    loading: false,\n  })),\n  on(AuthActions.loginError, AuthActions.logoutError, (state: State, { error }) => ({\n    ...state,\n    loading: false,\n    error,\n  })),\n\n  on(UserActions.saveUserDetailsSuccess, (state: State, { data }) => {\n    // If logged in user is updated we want to update auth store as well\n    if (state.user.id === data.id) {\n      // But we also need to preserve the token in the state\n      return { ...state, user: { ...data, token: state.user.token } };\n    }\n\n    return state;\n  })\n);\n\nexport function reducer(state: State | undefined, action: Action): State {\n  return authReducer(state, action);\n}\n\nexport const getState = createFeatureSelector<State>('auth');\nexport const loggedInUser = createSelector(getState, (state) => new UserAdapter().adapt(state.user));\nexport const authToken = createSelector(loggedInUser, (user) => user.token);\nexport const isLoggedIn = createSelector(authToken, (token) => !!token);\nexport const isLoading = createSelector(getState, (state) => state.loading);\nexport const hasError = createSelector(getState, (state) => !!state.error);\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport { BillingRequestActions } from '../actions/billing-requests.actions';\nimport { BillingRequest, BillingRequestAdapter } from '../models/billing-request.model';\nimport { DashboardStat } from './common.interfaces';\nimport { PaginationData } from '../models/pagination.model';\n\nexport interface State {\n  data: BillingRequest[];\n  pagination?: PaginationData;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: State = {\n  data: [],\n  loading: false,\n  error: null,\n};\n\nconst billingRequestsReducer = createReducer(\n  initialState,\n  on(BillingRequestActions.loadRequests, (state: State, { keepDataWhileLoading }) => ({\n    ...state,\n    data: keepDataWhileLoading ? state.data : [],\n    pagination: keepDataWhileLoading ? state.pagination : undefined,\n    error: null,\n  })),\n  on(BillingRequestActions.loadRequestsStart, (state: State) => ({\n    ...state,\n    loading: true,\n  })),\n  on(BillingRequestActions.loadRequestsSuccess, (state: State, { data, pagination }) => ({\n    ...state,\n    data,\n    pagination,\n    loading: false,\n  })),\n  on(BillingRequestActions.loadRequestsError, BillingRequestActions.changeStatusError, (state: State, { error }) => ({\n    ...state,\n    loading: false,\n    error,\n  })),\n  on(BillingRequestActions.changeStatus, (state: State) => ({\n    ...state,\n    error: null,\n  })),\n  on(BillingRequestActions.changeStatusStart, (state: State) => ({\n    ...state,\n    loading: true,\n  })),\n  on(BillingRequestActions.changeStatusSuccess, (state: State) => ({\n    ...state,\n    loading: false,\n  }))\n);\n\nexport function reducer(state: State | undefined, action: Action): State {\n  return billingRequestsReducer(state, action);\n}\n\nexport const getState = createFeatureSelector<State>('billingRequests');\nexport const selectBillingRequests = createSelector(getState, (state) => {\n  return {\n    ...state,\n    data: state.data.map((item) => new BillingRequestAdapter().adapt(item)),\n  };\n});\nexport const selectBillingRequestsData = createSelector(selectBillingRequests, (state) => state.data);\nexport const selectBillingRequestsPagination = createSelector(getState, (state) => state.pagination || {});\nexport const billingRequestsLoading = createSelector(getState, (state) => state.loading);\nexport const selectBillingRequestsStats = createSelector(getState, (state): DashboardStat => {\n  return {\n    loading: state.loading,\n    count: state.pagination?.totalElements,\n  };\n});\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport { BookingActions } from '../actions/bookings.actions';\nimport { Booking, BookingAdapter } from '../models/booking.model';\nimport { DashboardStat } from './common.interfaces';\nimport { BookingListItem, BookingListItemAdapter } from '../models/booking-list-item.model';\nimport { PaginationData } from '../models/pagination.model';\n\nexport interface State {\n  data: BookingListItem[];\n  pagination?: PaginationData;\n  loading: boolean;\n  error: string | null;\n\n  // Single booking\n  selectedBooking: Booking;\n  selectedBookingLoading: boolean;\n\n  // Reference types\n  referenceTypes: string[];\n  referenceTypesLoading: boolean;\n}\n\nconst initialState: State = {\n  data: [],\n  loading: false,\n  error: null,\n\n  // Single booking\n  selectedBooking: null,\n  selectedBookingLoading: false,\n\n  // Reference types\n  referenceTypes: [],\n  referenceTypesLoading: false,\n};\n\nconst bookingsReducer = createReducer(\n  initialState,\n  // =========== Bookings List Reducers ===========\n  on(BookingActions.loadBookings, (state: State, { keepDataWhileLoading }) => ({\n    ...state,\n    data: keepDataWhileLoading ? state.data : [],\n    pagination: keepDataWhileLoading ? state.pagination : undefined,\n    error: null,\n  })),\n  on(BookingActions.loadBookingsSuccess, (state: State, { data, pagination }) => ({\n    ...state,\n    data,\n    pagination,\n    loading: false,\n  })),\n  on(BookingActions.loadBookingsStart, (state: State) => ({\n    ...state,\n    loading: true,\n  })),\n  on(BookingActions.loadBookingsError, (state: State, { error }) => ({\n    ...state,\n    loading: false,\n    error,\n  })),\n  // =========== Selected Booking Reducers ===========\n  on(BookingActions.loadBookingSuccess, (state: State, { data }) => ({\n    ...state,\n    // If the booking we are loading is a currently selected booking we have to update it as well\n    selectedBooking: state.selectedBooking.cartId === data.cartId ? data : state.selectedBooking,\n    selectedBookingLoading: false,\n  })),\n  on(BookingActions.loadAndSelectBookingSuccess, (state: State, { data }) => ({\n    ...state,\n    selectedBooking: data,\n    selectedBookingLoading: false,\n  })),\n  on(BookingActions.saveBookingDetailsSuccess, (state: State, { data }) => ({\n    ...state,\n    // If the booking we are updating is a currently selected booking we have to update it as well\n    selectedBooking: state.selectedBooking.cartId === data.cartId ? data : state.selectedBooking,\n    selectedBookingLoading: false,\n  })),\n  on(BookingActions.loadAndSelectBooking, (state: State) => ({\n    ...state,\n    selectedBooking: null,\n    error: null,\n  })),\n  on(BookingActions.loadBooking, BookingActions.saveBookingDetails, (state: State) => ({\n    ...state,\n    error: null,\n  })),\n  on(\n    BookingActions.loadBookingStart,\n    BookingActions.loadAndSelectBookingStart,\n    BookingActions.saveBookingDetailsStart,\n    (state: State) => ({\n      ...state,\n      selectedBookingLoading: true,\n    })\n  ),\n  on(\n    BookingActions.loadBookingError,\n    BookingActions.loadAndSelectBookingError,\n    BookingActions.saveBookingDetailsError,\n    (state: State, { error }) => ({\n      ...state,\n      selectedBookingLoading: false,\n      error,\n    })\n  ),\n  // =========== Reference Types Reducers ===========\n  on(BookingActions.loadReferenceTypes, (state: State) => ({\n    ...state,\n    referenceTypes: [],\n    error: null,\n  })),\n  on(BookingActions.loadReferenceTypesStart, (state: State) => ({\n    ...state,\n    referenceTypesLoading: true,\n  })),\n  on(BookingActions.loadReferenceTypesSuccess, (state: State, { data }) => ({\n    ...state,\n    referenceTypes: data,\n    referenceTypesLoading: false,\n  })),\n  on(BookingActions.loadReferenceTypesError, (state: State, { error }) => ({\n    ...state,\n    referenceTypesLoading: false,\n    error,\n  }))\n);\n\nexport function reducer(state: State | undefined, action: Action): State {\n  return bookingsReducer(state, action);\n}\n\n// Booking List\nexport const getState = createFeatureSelector<State>('bookings');\nexport const selectBookings = createSelector(getState, (state: State) => {\n  return {\n    ...state,\n    selectedBooking: new BookingAdapter().adapt(state.selectedBooking),\n    data: state.data.map((item) => new BookingListItemAdapter().adapt(item)),\n  };\n});\nexport const selectBookingsData = createSelector(selectBookings, (state) => state.data);\nexport const bookingsLoading = createSelector(getState, (state: State) => state.loading);\nexport const selectBookingsStats = createSelector(\n  getState,\n  (state: State): DashboardStat => ({\n    loading: state.loading,\n    count: state.pagination?.totalElements,\n  })\n);\n\n// Single Booking\nexport const getSelectedBooking = createSelector(selectBookings, (state) => state.selectedBooking);\nexport const selectedBookingLoading = createSelector(selectBookings, (state) => state.selectedBookingLoading);\n\n// Reference Types\nexport const selectReferenceTypes = createSelector(getState, (state) => state.referenceTypes);\nexport const referenceTypesLoading = createSelector(getState, (state) => state.referenceTypesLoading);\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport { CartActions } from '../actions/carts.actions';\nimport { addOrUpdate } from './helpers';\nimport { Cart, CartAdapter, CartModel } from '../models/cart.model';\n\nexport interface State {\n  data: Cart[];\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: State = {\n  data: [],\n  loading: false,\n  error: null,\n};\n\nconst cartsReducer = createReducer(\n  initialState,\n\n  on(CartActions.loadCartDetails, (state: State) => ({ ...state, error: null })),\n  on(CartActions.loadCartDetailsSuccess, (state: State, { data }) => ({\n    ...state,\n    data: addOrUpdate(state, data),\n    loading: false,\n  })),\n  on(CartActions.loadCartDetailsStart, (state: State) => ({ ...state, loading: true })),\n  on(CartActions.loadCartDetailsError, (state: State, { error }) => ({\n    ...state,\n    loading: false,\n    error,\n  }))\n);\n\nexport function reducer(state: State | undefined, action: Action): State {\n  return cartsReducer(state, action);\n}\n\nexport const getState = createFeatureSelector<State>('carts');\nexport const selectCarts = createSelector(getState, (state: State) => {\n  return {\n    ...state,\n    data: state.data.map((item) => new CartAdapter().adapt(item)),\n  };\n});\nexport const selectCartsData = createSelector(selectCarts, (state) => state.data);\nexport const cartsLoading = createSelector(getState, (state: State) => state.loading);\nexport const selectCartById = (id: Cart['id']) => {\n  return createSelector(selectCarts, (state): CartModel => {\n    return state.data.find((item) => item.id === id) || new CartAdapter().adapt({});\n  });\n};\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\n\nimport { BookingChannelsAdapter, BookingChannelsResponse, CheckoutOptions } from '../models/checkout-options.model';\nimport { CheckoutActions } from '../actions/checkout.actions';\n\nexport interface State {\n  checkoutOptions: {\n    paymentOptions: CheckoutOptions['paymentOptions'];\n    project: CheckoutOptions['project'];\n    purposeOfTrip: CheckoutOptions['purposeOfTrip'];\n    yourReference: CheckoutOptions['yourReference'];\n    isLoading: boolean;\n    error: string | null;\n  };\n  bookingChannels: {\n    items: BookingChannelsResponse;\n    isLoading: boolean;\n    error: string | null;\n  };\n}\n\nconst initialState: State = {\n  checkoutOptions: {\n    paymentOptions: [],\n    project: null,\n    purposeOfTrip: null,\n    yourReference: null,\n    isLoading: false,\n    error: null,\n  },\n  bookingChannels: {\n    items: [],\n    isLoading: false,\n    error: null,\n  },\n};\n\nconst checkoutReducer = createReducer(\n  initialState,\n\n  // Load checkout options\n  on(CheckoutActions.loadOptions, (state: State) => ({\n    ...state,\n    checkoutOptions: {\n      ...state.checkoutOptions,\n      error: null,\n    },\n  })),\n  on(CheckoutActions.loadOptionsStart, (state: State) => ({\n    ...state,\n    checkoutOptions: {\n      ...initialState.checkoutOptions,\n      error: state.checkoutOptions.error,\n    },\n  })),\n  on(CheckoutActions.loadOptionsSuccess, (state: State, { data }) => {\n    return {\n      ...state,\n      checkoutOptions: {\n        ...state.checkoutOptions,\n        paymentOptions: data.paymentOptions,\n        project: data.project || initialState.checkoutOptions.project,\n        purposeOfTrip: data.purposeOfTrip || initialState.checkoutOptions.purposeOfTrip,\n        yourReference: data.yourReference || initialState.checkoutOptions.yourReference,\n        isLoading: false,\n      },\n    };\n  }),\n  on(CheckoutActions.loadOptionsError, (state: State, { error }) => ({\n    ...state,\n    checkoutOptions: {\n      ...state.checkoutOptions,\n      isLoading: false,\n      error,\n    },\n  })),\n\n  // Load booking channels\n  on(CheckoutActions.loadBookingChannels, (state: State) => ({\n    ...state,\n    bookingChannels: {\n      ...state.bookingChannels,\n      error: null,\n    },\n  })),\n  on(CheckoutActions.loadBookingChannelsStart, (state: State) => ({\n    ...state,\n    bookingChannels: {\n      ...initialState.bookingChannels,\n      isLoading: true,\n      error: state.bookingChannels.error,\n    },\n  })),\n  on(CheckoutActions.loadBookingChannelsSuccess, (state: State, { data }) => {\n    return {\n      ...state,\n      bookingChannels: {\n        items: data,\n        isLoading: false,\n        error: null,\n      },\n    };\n  }),\n  on(CheckoutActions.loadBookingChannelsError, (state: State, { error }) => ({\n    ...state,\n    bookingChannels: {\n      ...state.bookingChannels,\n      isLoading: false,\n      error,\n    },\n  }))\n);\n\nexport function reducer(state: State | undefined, action: Action): State {\n  return checkoutReducer(state, action);\n}\n\nexport const getState = createFeatureSelector<State>('checkout');\nexport const selectCheckoutOptions = createSelector(getState, (state) => state.checkoutOptions);\nexport const selectCheckoutPaymentOptions = createSelector(selectCheckoutOptions, (state) => state.paymentOptions);\nexport const selectProject = createSelector(selectCheckoutOptions, (state) => state.project);\nexport const selectPurposeOfTrip = createSelector(selectCheckoutOptions, (state) => state.purposeOfTrip);\nexport const selectYourReference = createSelector(selectCheckoutOptions, (state) => state.yourReference);\nexport const isLoadingCheckoutOptions = createSelector(selectCheckoutOptions, (state) => state.isLoading);\nexport const hasMandatoryReferenceFields = createSelector(\n  selectCheckoutOptions,\n  (state) => !!state.project?.mandatory || !!state.purposeOfTrip?.mandatory || !!state.yourReference?.mandatory\n);\n\n// We have to have at least one payment option and if it exists then the checkout options are loaded\nexport const hasCheckoutOptionsInStore = createSelector(selectCheckoutPaymentOptions, (options) => !!options.length);\n\nexport const selectBookingChannels = createSelector(getState, (state) =>\n  state.bookingChannels.items.map((item) => new BookingChannelsAdapter().adapt(item))\n);\nexport const isLoadingBookingChannels = createSelector(getState, (state) => state.bookingChannels.isLoading);\n\n// We have to have at least one payment option and if it exists then the checkout options are loaded\nexport const hasBookingChannelsInStore = createSelector(getState, (state) => !!state.bookingChannels.items.length);\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport { CompanyActions } from '../actions/companies.actions';\nimport { Company, CompanyAdapter } from '../models/company.model';\nimport { addOrUpdate } from './helpers';\nimport { DashboardStat } from './common.interfaces';\nimport { PaginationData } from '../models/pagination.model';\n\nexport interface State {\n  data: Company[];\n  pagination?: PaginationData;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: State = {\n  data: [],\n  loading: false,\n  error: null,\n};\n\nconst companiesReducer = createReducer(\n  initialState,\n\n  // Load companies\n  on(CompanyActions.loadCompanies, (state: State, { keepDataWhileLoading }) => ({\n    ...state,\n    data: keepDataWhileLoading ? state.data : [],\n    pagination: keepDataWhileLoading ? state.pagination : undefined,\n    error: null,\n  })),\n  on(CompanyActions.loadCompaniesSuccess, (state: State, { data, pagination }) => ({\n    ...state,\n    data,\n    pagination,\n    loading: false,\n  })),\n\n  // Load Company\n  on(CompanyActions.loadCompanySuccess, (state: State, { data }) => ({\n    ...state,\n    data: addOrUpdate(state, data),\n    loading: false,\n  })),\n\n  // Save\n  on(\n    CompanyActions.saveCompanyDetailsSuccess,\n    CompanyActions.toggleCompanySubscriptionStatusSuccess,\n    (state: State, { data }) => ({\n      ...state,\n      data: addOrUpdate(state, data),\n      loading: false,\n    })\n  ),\n\n  // Delete\n  on(CompanyActions.deleteCompanySuccess, (state: State, { data }) => ({\n    ...state,\n    data: state.data.filter((item) => item.id !== data.id),\n    loading: false,\n  })),\n\n  // Base actions handling\n  on(\n    CompanyActions.loadCompany,\n    CompanyActions.saveCompanyDetails,\n    CompanyActions.toggleCompanySubscriptionStatus,\n    CompanyActions.deleteCompany,\n    (state: State) => ({\n      ...state,\n      error: null,\n    })\n  ),\n\n  // Start actions handling\n  on(\n    CompanyActions.loadCompaniesStart,\n    CompanyActions.loadCompanyStart,\n    CompanyActions.saveCompanyDetailsStart,\n    CompanyActions.toggleCompanySubscriptionStatusStart,\n    CompanyActions.deleteCompanyStart,\n    (state: State) => ({\n      ...state,\n      loading: true,\n    })\n  ),\n\n  // Error actions handling\n  on(\n    CompanyActions.loadCompaniesError,\n    CompanyActions.loadCompanyError,\n    CompanyActions.saveCompanyDetailsError,\n    CompanyActions.toggleCompanySubscriptionStatusError,\n    CompanyActions.deleteCompanyError,\n    (state: State, { error }) => ({\n      ...state,\n      loading: false,\n      error,\n    })\n  )\n);\n\nexport function reducer(state: State | undefined, action: Action): State {\n  return companiesReducer(state, action);\n}\n\nexport const getState = createFeatureSelector<State>('companies');\nexport const selectCompanies = createSelector(getState, (state: State) => {\n  return {\n    ...state,\n    data: state.data.map((item) => new CompanyAdapter().adapt(item)),\n  };\n});\nexport const selectCompaniesData = createSelector(selectCompanies, (state) => state.data);\nexport const companiesLoading = createSelector(getState, (state) => state.loading);\n\nexport const selectCompanyById = (id: Company['id']) => {\n  return createSelector(selectCompanies, (state) => {\n    return state.data.find((item) => item.id === id);\n  });\n};\nexport const selectCompaniesStats = createSelector(\n  getState,\n  (state): DashboardStat => ({\n    loading: state.loading,\n    count: state.pagination?.totalElements,\n  })\n);\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport { CompanyUser, CompanyUserAdapter } from '../models/company-user.model';\nimport { addOrUpdate } from './helpers';\nimport { DashboardStat } from './common.interfaces';\nimport { PaginationData } from '../models/pagination.model';\nimport { CompanyUserActions } from '../actions/company-users.actions';\n\nexport interface State {\n  data: CompanyUser[];\n  selectedUser: CompanyUser;\n  pagination?: PaginationData;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: State = {\n  data: [],\n  selectedUser: null,\n  loading: false,\n  error: null,\n};\n\nconst companyUsersReducer = createReducer(\n  initialState,\n\n  // Load company users\n  on(CompanyUserActions.loadCompanyUsers, (state: State, { keepDataWhileLoading }) => ({\n    ...state,\n    data: keepDataWhileLoading ? state.data : [],\n    pagination: keepDataWhileLoading ? state.pagination : undefined,\n    error: null,\n  })),\n  on(CompanyUserActions.loadCompanyUsersSuccess, (state: State, { data, pagination }) => ({\n    ...state,\n    data,\n    pagination,\n    loading: false,\n  })),\n\n  // Load Company User\n  on(CompanyUserActions.loadCompanyUserSuccess, (state: State, { data }) => ({\n    ...state,\n    data: addOrUpdate(state, data),\n    loading: false,\n  })),\n\n  // Load And Select Company User\n  on(CompanyUserActions.loadAndSelectCompanyUserSuccess, (state: State, { data }) => ({\n    ...state,\n    selectedUser: data,\n    loading: false,\n  })),\n\n  // Save details\n  on(CompanyUserActions.saveCompanyUserDetailsSuccess, (state: State, { data }) => ({\n    ...state,\n    // If the user we are updating is a currently selected user we have to update it as well\n    selectedUser: addOrUpdate({ data: [state.selectedUser] }, data)[0],\n    loading: false,\n  })),\n\n  // Base actions handling\n  on(CompanyUserActions.loadAndSelectCompanyUser, (state: State) => ({\n    ...state,\n    selectedUser: null,\n    error: null,\n  })),\n  on(CompanyUserActions.loadCompanyUser, CompanyUserActions.saveCompanyUserDetails, (state: State) => ({\n    ...state,\n    error: null,\n  })),\n\n  // Start actions handling\n  on(\n    CompanyUserActions.loadCompanyUsersStart,\n    CompanyUserActions.loadCompanyUserStart,\n    CompanyUserActions.loadAndSelectCompanyUserStart,\n    CompanyUserActions.saveCompanyUserDetailsStart,\n    (state: State) => ({\n      ...state,\n      loading: true,\n    })\n  ),\n\n  // Error actions handling\n  on(\n    CompanyUserActions.loadCompanyUsersError,\n    CompanyUserActions.loadCompanyUserError,\n    CompanyUserActions.loadAndSelectCompanyUserError,\n    CompanyUserActions.saveCompanyUserDetailsError,\n    (state: State, { error }) => ({\n      ...state,\n      loading: false,\n      error,\n    })\n  )\n);\n\nexport function reducer(state: State | undefined, action: Action): State {\n  return companyUsersReducer(state, action);\n}\n\nexport const getState = createFeatureSelector<State>('companyUsers');\nexport const selectCompanyUsers = createSelector(getState, (state: State) => {\n  return {\n    ...state,\n    selectedUser: new CompanyUserAdapter().adapt(state.selectedUser),\n    data: state.data.map((item) => new CompanyUserAdapter().adapt(item)),\n  };\n});\nexport const selectCompanyUsersData = createSelector(selectCompanyUsers, (state) => state.data);\nexport const companyUsersLoading = createSelector(getState, (state: State) => state.loading);\n\nexport const selectCompanyUserById = (id: CompanyUser['id']) => {\n  return createSelector(selectCompanyUsers, (state) => {\n    return state.data.find((item) => item.id === id);\n  });\n};\nexport const selectCompanyUsersStats = createSelector(\n  getState,\n  (state: State): DashboardStat => ({\n    loading: state.loading,\n    count: state.pagination?.totalElements,\n  })\n);\nexport const getSelectedCompanyUser = createSelector(selectCompanyUsers, (state) => state.selectedUser);\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\n\nimport { TravelerCostCenterResponse, TravellerCostCentersAdapter } from '../models/cost-center.model';\nimport { CostCenterActions } from '../actions/cost-center.actions';\n\nexport interface State {\n  data: TravelerCostCenterResponse[];\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: State = {\n  data: [],\n  loading: false,\n  error: null,\n};\n\nconst travellerCostCentersReducer = createReducer(\n  initialState,\n\n  // Load features\n  on(CostCenterActions.loadTravellerCostCenters, (state: State) => ({\n    ...state,\n    data: [],\n    error: null,\n  })),\n  on(CostCenterActions.loadTravellerCostCentersStart, (state: State) => ({\n    ...state,\n    loading: true,\n  })),\n  on(CostCenterActions.loadTravellerCostCentersSuccess, (state: State, { data }) => ({\n    ...state,\n    data,\n    loading: false,\n  })),\n  on(CostCenterActions.loadTravellerCostCentersError, (state: State, { error }) => ({\n    ...state,\n    loading: false,\n    error,\n  }))\n);\n\nexport function reducer(state: State | undefined, action: Action): State {\n  return travellerCostCentersReducer(state, action);\n}\n\nexport const getState = createFeatureSelector<State>('costCenter');\nexport const selectTravellerCostCenters = createSelector(getState, (state) => {\n  return {\n    ...state,\n    data: state.data.map((item) => new TravellerCostCentersAdapter().adapt(item)),\n  };\n});\nexport const selectTravellerCostCentersData = createSelector(selectTravellerCostCenters, (state) => state.data);\nexport const travellerCostCentersLoading = createSelector(getState, (state) => state.loading);\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport { Country } from '../models/country.model';\nimport { CountryActions } from '../actions/countries.actions';\n\nexport interface State {\n  data: Country[];\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: State = {\n  data: [],\n  loading: false,\n  error: null,\n};\n\nconst countriesReducer = createReducer(\n  initialState,\n\n  // Load countries\n  on(CountryActions.loadCountries, (state: State) => ({\n    ...state,\n    data: [],\n    error: null,\n  })),\n  on(CountryActions.loadCountriesStart, (state: State) => ({\n    ...state,\n    loading: true,\n  })),\n  on(CountryActions.loadCountriesSuccess, (state: State, { data }) => ({\n    ...state,\n    data,\n    loading: false,\n  })),\n  on(CountryActions.loadCountriesError, (state: State, { error }) => ({\n    ...state,\n    loading: false,\n    error,\n  }))\n);\n\nexport function reducer(state: State | undefined, action: Action): State {\n  return countriesReducer(state, action);\n}\n\nexport const getState = createFeatureSelector<State>('countries');\nexport const selectCountries = createSelector(getState, (state) => state);\nexport const selectCountriesData = createSelector(getState, (state) => state.data);\nexport const countriesLoading = createSelector(getState, (state) => state.loading);\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport { Feature, FeatureAdapter } from '../models/feature.model';\nimport { DashboardStat } from './common.interfaces';\nimport { FeatureActions } from '../actions/features.actions';\n\nexport interface State {\n  data: Feature[];\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: State = {\n  data: [],\n  loading: false,\n  error: null,\n};\n\nconst featuresReducer = createReducer(\n  initialState,\n\n  // Load features\n  on(FeatureActions.loadFeatures, (state: State) => ({\n    ...state,\n    data: [],\n    error: null,\n  })),\n  on(FeatureActions.loadFeaturesSuccess, (state: State, { data }) => ({\n    ...state,\n    data,\n    loading: false,\n  })),\n  on(FeatureActions.loadFeaturesError, FeatureActions.toggleFeatureStatusError, (state: State, { error }) => ({\n    ...state,\n    loading: false,\n    error,\n  })),\n\n  // Toggle state\n  on(FeatureActions.toggleFeatureStatus, (state: State) => ({\n    ...state,\n    error: null,\n  })),\n  on(FeatureActions.loadFeaturesStart, FeatureActions.toggleFeatureStatusStart, (state: State) => ({\n    ...state,\n    loading: true,\n  })),\n  on(FeatureActions.toggleFeatureStatusSuccess, (state: State, { data }) => ({\n    ...state,\n    data: [\n      ...state.data.map((item) => {\n        if (item.id === data.id) {\n          item.enabled = data.enabled;\n        }\n\n        return item;\n      }),\n    ],\n    loading: false,\n  }))\n);\n\nexport function reducer(state: State | undefined, action: Action): State {\n  return featuresReducer(state, action);\n}\n\nexport const getState = createFeatureSelector<State>('features');\nexport const selectFeatures = createSelector(getState, (state) => {\n  return {\n    ...state,\n    data: state.data.map((item) => new FeatureAdapter().adapt(item)),\n  };\n});\nexport const selectFeaturesData = createSelector(selectFeatures, (state) => state.data);\nexport const featuresLoading = createSelector(getState, (state) => state.loading);\nexport const selectFeaturesStats = createSelector(\n  getState,\n  (state): DashboardStat => ({\n    loading: state.loading,\n    count: state.data.length,\n  })\n);\n","export function addOrUpdate(state: Partial<{ data: { id: string }[] }>, newItem: Partial<{ id?: string }>): any {\n  // If we don't have an ID we won't do any changes in the state\n  if (!newItem.id) return state.data;\n\n  if (state.data.some((item) => item.id === newItem.id)) {\n    // Update existing item\n    return [\n      ...state.data.map((item) => {\n        if (item.id === newItem.id) {\n          item = { ...item, ...newItem };\n        }\n\n        return item;\n      }),\n    ];\n  }\n\n  // Add new item\n  return [...state.data, newItem];\n}\n","import { ActionReducerMap, MetaReducer } from '@ngrx/store';\nimport { routerReducer, RouterReducerState } from '@ngrx/router-store';\nimport { environment } from '../../environments/environment';\nimport * as BillingRequests from './billing-requests.reducer';\nimport * as Products from './products.reducer';\nimport * as VatCategories from './vat-categories.reducer';\nimport * as Countries from './countries.reducer';\nimport * as Vendors from './vendors.reducer';\nimport * as VendorsPaymentProviders from './vendors-payment-providers.reducer';\nimport * as Features from './features.reducer';\nimport * as Users from './users.reducer';\nimport * as Companies from './companies.reducer';\nimport * as CompanyUsers from './company-users.reducer';\nimport * as SystemMessages from './system-messages.reducer';\nimport * as Bookings from './bookings.reducer';\nimport * as Carts from './carts.reducer';\nimport * as Layout from './layout.reducer';\nimport * as Auth from './auth.reducer';\nimport * as Tmc from '../config/tmc/tmc.reducer';\nimport * as Tenant from './tenants.reducer';\nimport * as PNR from './pnr.reducer';\nimport * as CostCenter from './cost-center.reducer';\nimport * as Payment from './payment.reducer';\nimport * as Checkout from './checkout.reducer';\n\nexport interface AppState {\n  router: RouterReducerState;\n  billingRequests: BillingRequests.State;\n  products: Products.State;\n  vatCategories: VatCategories.State;\n  vendors: Vendors.State;\n  vendorsPaymentProviders: VendorsPaymentProviders.State;\n  countries: Countries.State;\n  features: Features.State;\n  users: Users.State;\n  companies: Companies.State;\n  companyUsers: CompanyUsers.State;\n  systemMessages: SystemMessages.State;\n  bookings: Bookings.State;\n  carts: Carts.State;\n  layout: Layout.State;\n  auth: Auth.State;\n  tmc: Tmc.State;\n  tenants: Tenant.State;\n  pnr: PNR.State;\n  costCenter: CostCenter.State;\n  payment: Payment.State;\n  checkout: Checkout.State;\n}\n\nexport const reducers: ActionReducerMap<AppState> = {\n  router: routerReducer,\n  billingRequests: BillingRequests.reducer,\n  products: Products.reducer,\n  vatCategories: VatCategories.reducer,\n  vendors: Vendors.reducer,\n  vendorsPaymentProviders: VendorsPaymentProviders.reducer,\n  countries: Countries.reducer,\n  features: Features.reducer,\n  users: Users.reducer,\n  companies: Companies.reducer,\n  companyUsers: CompanyUsers.reducer,\n  systemMessages: SystemMessages.reducer,\n  bookings: Bookings.reducer,\n  carts: Carts.reducer,\n  layout: Layout.reducer,\n  auth: Auth.reducer,\n  tmc: Tmc.reducer,\n  tenants: Tenant.reducer,\n  pnr: PNR.reducer,\n  costCenter: CostCenter.reducer,\n  payment: Payment.reducer,\n  checkout: Checkout.reducer,\n};\n\nexport const metaReducers: MetaReducer<any>[] = !environment.production ? [] : [];\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport { LayoutActions } from '../actions/layout.actions';\n\nexport interface State {\n  sidenav: {\n    visible: boolean;\n  };\n}\n\nconst initialState: State = {\n  sidenav: {\n    visible: false,\n  },\n};\n\nconst layoutReducer = createReducer(\n  initialState,\n\n  // Sidenav visibility\n  on(LayoutActions.toggleSidenav, (state: State, { visible }) => ({ sidenav: { visible } }))\n);\n\nexport function reducer(state: State | undefined, action: Action): State {\n  return layoutReducer(state, action);\n}\n\nexport const getState = createFeatureSelector<State>('layout');\nexport const sidenavIsVisible = createSelector(getState, (state: State) => !!state.sidenav.visible);\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport { PaymentActions } from '../actions/payment.actions';\nimport { BillingProfile, BillingProfileAdapter } from '../models/billing-profile.model';\nimport { LodgeCard } from '../models/lodge-card.model';\n\nexport interface State {\n  lodgeCards: LodgeCard[];\n  billingProfiles: BillingProfile[];\n  isLoadingPaymentOptions: boolean;\n  error: string | null;\n}\n\nconst initialState: State = {\n  lodgeCards: [],\n  billingProfiles: [],\n  isLoadingPaymentOptions: false,\n  error: null,\n};\n\nconst paymentReducer = createReducer(\n  initialState,\n\n  // Load features\n  on(PaymentActions.loadPaymentOptions, (state: State) => ({\n    ...state,\n    error: null,\n  })),\n  on(PaymentActions.loadPaymentOptionsStart, (state: State) => ({\n    ...state,\n    lodgeCards: [],\n    billingProfiles: [],\n    isLoadingPaymentOptions: true,\n  })),\n  on(PaymentActions.loadPaymentOptionsSuccess, (state: State, { data }) => ({\n    ...state,\n    lodgeCards: data.lodgeCards,\n    billingProfiles: data.billingProfiles,\n    isLoadingPaymentOptions: false,\n  })),\n  on(PaymentActions.loadPaymentOptionsError, (state: State, { error }) => ({\n    ...state,\n    isLoadingPaymentOptions: false,\n    error,\n  }))\n);\n\nexport function reducer(state: State | undefined, action: Action): State {\n  return paymentReducer(state, action);\n}\n\nexport const getState = createFeatureSelector<State>('payment');\nexport const selectPaymentOptions = createSelector(getState, (state) => {\n  return {\n    ...state,\n    billingProfiles: state.billingProfiles.map((item) => new BillingProfileAdapter().adapt(item)),\n  };\n});\nexport const selectLodgeCards = createSelector(selectPaymentOptions, (state) => state.lodgeCards);\nexport const selectBillingProfiles = createSelector(selectPaymentOptions, (state) => state.billingProfiles);\nexport const isLoadingPaymentOptions = createSelector(getState, (state) => state.isLoadingPaymentOptions);\nexport const hasPaymentOptionsInStore = createSelector(\n  getState,\n  (state) => state.billingProfiles.length > 0 && state.lodgeCards.length > 0\n);\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport { FlightPNRValidation, FlightPNRValidationAdapter } from '../models/pnr.model';\nimport { PnrActions } from '../actions/pnr.actions';\n\nexport interface State {\n  data: FlightPNRValidation;\n  additionalData: { vendorId: string; productId: string };\n  validating: boolean;\n  confirming: boolean;\n  cartId: string;\n  error: string | null;\n}\n\nconst initialState: State = {\n  data: null,\n  additionalData: null,\n  validating: false,\n  confirming: false,\n  cartId: null,\n  error: null,\n};\n\nconst pnrReducer = createReducer(\n  initialState,\n\n  on(PnrActions.validateFlightPnr, (state: State) => ({ ...state, data: null, error: null })),\n  on(PnrActions.validateFlightPnrStart, (state: State) => ({ ...state, validating: true })),\n  on(PnrActions.validateFlightPnrSuccess, (state: State, { data }) => ({ ...state, data, validating: false })),\n  on(PnrActions.validateFlightPnrError, (state: State, { error }) => ({ ...state, validating: false, error })),\n\n  on(PnrActions.setFlightFinalDestination, (state: State, { destination }) => ({\n    ...state,\n    data: { ...state.data, finalDestination: destination },\n  })),\n\n  on(PnrActions.confirmFlightPnr, (state: State) => ({ ...state, cartId: null, error: null })),\n  on(PnrActions.confirmFlightPnrStart, (state: State) => ({ ...state, confirming: true })),\n  on(PnrActions.confirmFlightPnrSuccess, (state: State, { data }) => ({\n    ...state,\n    cartId: data.cartId,\n    confirming: false,\n  })),\n  on(PnrActions.confirmFlightPnrError, (state: State, { error }) => ({ ...state, confirming: false, error })),\n\n  on(PnrActions.resetValidatedPnr, (state: State) => ({ ...state, data: null, additionalData: null, cartId: null })),\n  on(PnrActions.saveAdditionalValidationData, (state: State, { data }) => ({ ...state, additionalData: data }))\n);\n\nexport function reducer(state: State | undefined, action: Action): State {\n  return pnrReducer(state, action);\n}\n\nexport const getState = createFeatureSelector<State>('pnr');\nexport const selectPNR = createSelector(getState, (state: State) => {\n  return {\n    ...state,\n    data: new FlightPNRValidationAdapter().adapt(state.data),\n  };\n});\nexport const selectPNRData = createSelector(selectPNR, ({ data }) => data);\nexport const selectAdditionalPNRData = createSelector(selectPNR, ({ additionalData }) => additionalData);\nexport const isValidatingPNR = createSelector(getState, (state) => !!state.validating);\nexport const selectPNRCartId = createSelector(getState, ({ cartId }) => cartId);\nexport const isConfirmingPNR = createSelector(getState, (state) => !!state.confirming);\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport { Product, ProductAdapter } from '../models/product.model';\nimport { DashboardStat } from './common.interfaces';\nimport { PaginationData } from '../models/pagination.model';\nimport { ProductActions } from '../actions/products.actions';\n\nexport interface State {\n  data: Product[];\n  pagination?: PaginationData;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: State = {\n  data: [],\n  loading: false,\n  error: null,\n};\n\nconst productsReducer = createReducer(\n  initialState,\n  on(ProductActions.loadProducts, (state: State, { keepDataWhileLoading }) => ({\n    ...state,\n    data: keepDataWhileLoading ? state.data : [],\n    pagination: keepDataWhileLoading ? state.pagination : undefined,\n    error: null,\n  })),\n  on(\n    ProductActions.loadProductsStart,\n    ProductActions.toggleProductStatusStart,\n    ProductActions.saveProductDetailsStart,\n    (state: State) => ({\n      ...state,\n      loading: true,\n    })\n  ),\n  on(ProductActions.loadProductsSuccess, (state: State, { data, pagination }) => ({\n    ...state,\n    data,\n    pagination,\n    loading: false,\n  })),\n  on(ProductActions.loadProductsError, ProductActions.toggleProductStatusError, (state: State, { error }) => ({\n    ...state,\n    loading: false,\n    error,\n  })),\n\n  // Save details\n  on(ProductActions.toggleProductStatus, ProductActions.saveProductDetails, (state: State) => ({\n    ...state,\n    error: null,\n  })),\n  on(ProductActions.saveProductDetailsSuccess, ProductActions.toggleProductStatusSuccess, (state: State) => ({\n    ...state,\n    loading: false,\n  }))\n);\n\nexport function reducer(state: State | undefined, action: Action): State {\n  return productsReducer(state, action);\n}\n\nexport const getState = createFeatureSelector<State>('products');\nexport const selectProducts = createSelector(getState, (state: State) => {\n  return {\n    ...state,\n    data: state.data.map((item) => new ProductAdapter().adapt(item)),\n  };\n});\nexport const selectProductsData = createSelector(selectProducts, (state) => state.data);\nexport const selectProductsPagination = createSelector(getState, (state) => state.pagination || {});\nexport const productsLoading = createSelector(getState, (state) => state.loading);\nexport const selectProductsStats = createSelector(\n  getState,\n  (state): DashboardStat => ({\n    loading: state.loading,\n    count: state.pagination?.totalElements,\n  })\n);\n","import { getSelectors, RouterReducerState } from '@ngrx/router-store';\nimport { createFeatureSelector } from '@ngrx/store';\n\nexport const selectRouter = createFeatureSelector<RouterReducerState>('router');\n\nexport const {\n  selectCurrentRoute, // select the current route\n  selectFragment, // select the current route fragment\n  selectQueryParams, // select the current route query params\n  selectQueryParam, // factory function to select a query param\n  selectRouteParams, // select the current route params\n  selectRouteParam, // factory function to select a route param\n  selectRouteData, // select the current route data\n  selectUrl, // select the current url\n} = getSelectors(selectRouter);\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport { SystemMessage, SystemMessageAdapter } from '../models/system-message.model';\nimport { addOrUpdate } from './helpers';\nimport { DashboardStat } from './common.interfaces';\nimport { PaginationData } from '../models/pagination.model';\nimport { SystemMessageActions } from '../actions/system-messages.actions';\n\nexport interface State {\n  data: SystemMessage[];\n  pagination?: PaginationData;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: State = {\n  data: [],\n  loading: false,\n  error: null,\n};\n\nconst systemMessagesReducer = createReducer(\n  initialState,\n\n  // Load systemMessages\n  on(SystemMessageActions.loadSystemMessages, (state: State, { keepDataWhileLoading }) => ({\n    ...state,\n    data: keepDataWhileLoading ? state.data : [],\n    pagination: keepDataWhileLoading ? state.pagination : undefined,\n    error: null,\n  })),\n  on(SystemMessageActions.loadSystemMessagesSuccess, (state: State, { data, pagination }) => ({\n    ...state,\n    data,\n    pagination,\n    loading: false,\n  })),\n\n  // Load SystemMessage\n  on(SystemMessageActions.loadSystemMessageSuccess, (state: State, { data }) => ({\n    ...state,\n    data: addOrUpdate(state, data),\n    loading: false,\n  })),\n\n  // Save and Delete\n  on(\n    SystemMessageActions.saveSystemMessageSuccess,\n    SystemMessageActions.deleteSystemMessageSuccess,\n    (state: State) => ({\n      ...state,\n      loading: false,\n    })\n  ),\n\n  // Base actions handling\n  on(\n    SystemMessageActions.loadSystemMessage,\n    SystemMessageActions.saveSystemMessage,\n    SystemMessageActions.deleteSystemMessage,\n    (state: State) => ({\n      ...state,\n      error: null,\n    })\n  ),\n\n  // Start actions handling\n  on(\n    SystemMessageActions.loadSystemMessagesStart,\n    SystemMessageActions.loadSystemMessageStart,\n    SystemMessageActions.saveSystemMessageStart,\n    SystemMessageActions.deleteSystemMessageStart,\n    (state: State) => ({\n      ...state,\n      loading: true,\n    })\n  ),\n\n  // Error actions handling\n  on(\n    SystemMessageActions.loadSystemMessagesError,\n    SystemMessageActions.loadSystemMessageError,\n    SystemMessageActions.saveSystemMessageError,\n    SystemMessageActions.deleteSystemMessageError,\n    (state: State, { error }) => ({\n      ...state,\n      loading: false,\n      error,\n    })\n  )\n);\n\nexport function reducer(state: State | undefined, action: Action): State {\n  return systemMessagesReducer(state, action);\n}\n\nexport const getState = createFeatureSelector<State>('systemMessages');\nexport const selectSystemMessages = createSelector(getState, (state: State) => {\n  return {\n    ...state,\n    data: state.data.map((item) => new SystemMessageAdapter().adapt(item)),\n  };\n});\nexport const selectSystemMessagesData = createSelector(selectSystemMessages, ({ data }) => data);\nexport const systemMessagesLoading = createSelector(getState, (state) => state.loading);\n\nexport const selectSystemMessageById = (id: SystemMessage['id']) => {\n  return createSelector(getState, (state) => {\n    return new SystemMessageAdapter().adapt(state.data.find((item) => item.id === id));\n  });\n};\nexport const selectSystemMessagesStats = createSelector(\n  getState,\n  (state): DashboardStat => ({\n    loading: state.loading,\n    count: state.pagination?.totalElements,\n  })\n);\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\n\nimport { Tmc, TmcAdapter } from '../config/tmc';\nimport { TenantActions } from '../actions/tenant.actions';\n\nexport interface State {\n  data: Tmc[];\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: State = {\n  data: [],\n  loading: false,\n  error: null,\n};\n\nconst tenantsReducer = createReducer(\n  initialState,\n  on(TenantActions.loadPrimaryTenants, (state: State) => ({\n    ...state,\n    data: [],\n    error: null,\n  })),\n  on(TenantActions.loadPrimaryTenantsStart, (state: State) => ({\n    ...state,\n    loading: true,\n  })),\n  on(TenantActions.loadPrimaryTenantsSuccess, (state: State, { data }) => ({\n    ...state,\n    data,\n    loading: false,\n  })),\n  on(TenantActions.loadPrimaryTenantsError, (state: State, { error }) => ({\n    ...state,\n    loading: false,\n    error,\n  }))\n);\n\nexport function reducer(state: State | undefined, action: Action): State {\n  return tenantsReducer(state, action);\n}\n\nexport const getState = createFeatureSelector<State>('tenants');\nexport const selectTenants = createSelector(getState, (state) => {\n  return {\n    ...state,\n    data: state.data.map((tenant) => new TmcAdapter().adapt(tenant)),\n  };\n});\nexport const selectTenantsData = createSelector(selectTenants, (state) => state.data);\nexport const tenantsLoading = createSelector(getState, (state) => state.loading);\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport { User, UserAdapter } from '../models/user.model';\nimport { DashboardStat } from './common.interfaces';\nimport { PaginationData } from '../models/pagination.model';\nimport { UserActions } from '../actions/users.actions';\n\nexport interface State {\n  data: User[];\n  pagination?: PaginationData;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: State = {\n  data: [],\n  loading: false,\n  error: null,\n};\n\nconst usersReducer = createReducer(\n  initialState,\n  on(UserActions.loadUsers, (state: State, { keepDataWhileLoading }) => ({\n    ...state,\n    data: keepDataWhileLoading ? state.data : [],\n    pagination: keepDataWhileLoading ? state.pagination : undefined,\n    error: null,\n  })),\n  on(UserActions.loadUsersSuccess, (state: State, { data, pagination }) => ({\n    ...state,\n    data,\n    pagination,\n    loading: false,\n  })),\n  on(\n    UserActions.loadUsersError,\n    UserActions.saveUserDetailsError,\n    UserActions.changeUserPasswordError,\n    (state: State, { error }) => ({\n      ...state,\n      loading: false,\n      error,\n    })\n  ),\n  on(UserActions.saveUserDetails, UserActions.changeUserPassword, (state: State) => ({\n    ...state,\n    error: null,\n  })),\n  on(\n    UserActions.loadUsersStart,\n    UserActions.saveUserDetailsStart,\n    UserActions.changeUserPasswordStart,\n    (state: State) => ({\n      ...state,\n      loading: true,\n    })\n  ),\n  on(UserActions.saveUserDetailsSuccess, UserActions.changeUserPasswordSuccess, (state: State) => ({\n    ...state,\n    loading: false,\n  }))\n);\n\nexport function reducer(state: State | undefined, action: Action): State {\n  return usersReducer(state, action);\n}\n\nexport const getState = createFeatureSelector<State>('users');\nexport const selectUsers = createSelector(getState, (state) => {\n  return {\n    ...state,\n    data: state.data.map((item) => new UserAdapter().adapt(item)),\n  };\n});\nexport const selectUsersData = createSelector(selectUsers, (state) => state.data);\nexport const selectUsersPagination = createSelector(getState, (state) => state.pagination || {});\nexport const usersLoading = createSelector(getState, (state) => state.loading);\nexport const selectUsersStats = createSelector(\n  getState,\n  (state): DashboardStat => ({\n    loading: state.loading,\n    count: state.pagination?.totalElements,\n  })\n);\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport { VatCategory, VatCategoryAdapter } from '../models/vat-category.model';\nimport { DashboardStat } from './common.interfaces';\nimport { PaginationData } from '../models/pagination.model';\nimport { VatCategoryActions } from '../actions/vat-categories.actions';\n\nexport interface State {\n  data: VatCategory[];\n  pagination?: PaginationData;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: State = {\n  data: [],\n  loading: false,\n  error: null,\n};\n\nconst vatCategoriesReducer = createReducer(\n  initialState,\n\n  // Load vat categories\n  on(VatCategoryActions.loadVatCategories, (state: State, { keepDataWhileLoading }) => ({\n    ...state,\n    data: keepDataWhileLoading ? state.data : [],\n    pagination: keepDataWhileLoading ? state.pagination : undefined,\n    error: null,\n  })),\n  on(\n    VatCategoryActions.loadVatCategoriesStart,\n    VatCategoryActions.toggleVatCategoryStatusStart,\n    VatCategoryActions.saveVatCategoryDetailsStart,\n    (state: State) => ({\n      ...state,\n      loading: true,\n    })\n  ),\n  on(VatCategoryActions.loadVatCategoriesSuccess, (state: State, { data, pagination }) => ({\n    ...state,\n    data,\n    pagination,\n    loading: false,\n  })),\n  on(\n    VatCategoryActions.loadVatCategoriesError,\n    VatCategoryActions.toggleVatCategoryStatusError,\n    (state: State, { error }) => ({\n      ...state,\n      loading: false,\n      error,\n    })\n  ),\n\n  // Toggle state\n  on(VatCategoryActions.toggleVatCategoryStatus, VatCategoryActions.saveVatCategoryDetails, (state: State) => ({\n    ...state,\n    error: null,\n  })),\n\n  // Save and Toggle\n  on(\n    VatCategoryActions.saveVatCategoryDetailsSuccess,\n    VatCategoryActions.toggleVatCategoryStatusSuccess,\n    (state: State) => ({\n      ...state,\n      loading: false,\n    })\n  )\n);\n\nexport function reducer(state: State | undefined, action: Action): State {\n  return vatCategoriesReducer(state, action);\n}\n\nexport const getState = createFeatureSelector<State>('vatCategories');\nexport const selectVatCategories = createSelector(getState, (state: State) => {\n  return {\n    ...state,\n    data: state.data.map((item) => new VatCategoryAdapter().adapt(item)),\n  };\n});\nexport const selectVatCategoriesData = createSelector(selectVatCategories, (state) => state.data);\nexport const selectVatCategoriesPagination = createSelector(getState, (state) => state.pagination || {});\nexport const vatCategoriesLoading = createSelector(getState, (state) => state.loading);\nexport const selectVatCategoriesStats = createSelector(\n  getState,\n  (state): DashboardStat => ({\n    loading: state.loading,\n    count: state.pagination?.totalElements,\n  })\n);\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport { VendorsPaymentProvider, VendorsPaymentProviderAdapter } from '../models/vendors-payment-provider.model';\nimport { DashboardStat } from './common.interfaces';\nimport { PaginationData } from '../models/pagination.model';\nimport { VendorsPaymentProviderActions } from '../actions/vendors-payment-providers.actions';\n\nexport interface State {\n  data: VendorsPaymentProvider[];\n  pagination?: PaginationData;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: State = {\n  data: [],\n  loading: false,\n  error: null,\n};\n\nconst vendorsPaymentProvidersReducer = createReducer(\n  initialState,\n  on(VendorsPaymentProviderActions.loadVendorsPaymentProviders, (state: State, { keepDataWhileLoading }) => ({\n    ...state,\n    data: keepDataWhileLoading ? state.data : [],\n    pagination: keepDataWhileLoading ? state.pagination : undefined,\n    error: null,\n  })),\n  on(\n    VendorsPaymentProviderActions.loadVendorsPaymentProvidersStart,\n    VendorsPaymentProviderActions.toggleVendorsPaymentProviderStatusStart,\n    VendorsPaymentProviderActions.saveVendorsPaymentProviderDetailsStart,\n    (state: State) => ({\n      ...state,\n      loading: true,\n    })\n  ),\n  on(VendorsPaymentProviderActions.loadVendorsPaymentProvidersSuccess, (state: State, { data, pagination }) => ({\n    ...state,\n    data,\n    pagination,\n    loading: false,\n  })),\n  on(\n    VendorsPaymentProviderActions.loadVendorsPaymentProvidersError,\n    VendorsPaymentProviderActions.toggleVendorsPaymentProviderStatusError,\n    (state: State, { error }) => ({\n      ...state,\n      loading: false,\n      error,\n    })\n  ),\n\n  // Save details\n  on(\n    VendorsPaymentProviderActions.saveVendorsPaymentProviderDetails,\n    VendorsPaymentProviderActions.toggleVendorsPaymentProviderStatus,\n    (state: State) => ({\n      ...state,\n      error: null,\n    })\n  ),\n  on(\n    VendorsPaymentProviderActions.saveVendorsPaymentProviderDetailsSuccess,\n    VendorsPaymentProviderActions.toggleVendorsPaymentProviderStatusSuccess,\n    (state: State) => ({\n      ...state,\n      loading: false,\n    })\n  )\n);\n\nexport function reducer(state: State | undefined, action: Action): State {\n  return vendorsPaymentProvidersReducer(state, action);\n}\n\nexport const getState = createFeatureSelector<State>('vendorsPaymentProviders');\nexport const selectVendorsPaymentProviders = createSelector(getState, (state: State) => {\n  return {\n    ...state,\n    data: state.data.map((item) => new VendorsPaymentProviderAdapter().adapt(item)),\n  };\n});\nexport const selectVendorsPaymentProvidersData = createSelector(selectVendorsPaymentProviders, (state) => state.data);\nexport const selectVendorsPaymentProvidersPagination = createSelector(getState, (state) => state.pagination || {});\nexport const vendorsPaymentProviderLoading = createSelector(getState, (state) => state.loading);\nexport const selectVendorsPaymentProvidersStats = createSelector(\n  getState,\n  (state): DashboardStat => ({\n    loading: state.loading,\n    count: state.pagination?.totalElements,\n  })\n);\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport { Vendor, VendorAdapter } from '../models/vendor.model';\nimport { DashboardStat } from './common.interfaces';\nimport { PaginationData } from '../models/pagination.model';\nimport { VendorActions } from '../actions/vendors.actions';\n\nexport interface State {\n  data: Vendor[];\n  pagination?: PaginationData;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: State = {\n  data: [],\n  loading: false,\n  error: null,\n};\n\nconst vendorsReducer = createReducer(\n  initialState,\n\n  // Load vendors\n  on(VendorActions.loadVendors, (state: State, { keepDataWhileLoading }) => ({\n    ...state,\n    data: keepDataWhileLoading ? state.data : [],\n    pagination: keepDataWhileLoading ? state.pagination : undefined,\n    error: null,\n  })),\n  on(VendorActions.loadVendorsSuccess, (state: State, { data, pagination }) => ({\n    ...state,\n    data,\n    pagination,\n    loading: false,\n  })),\n\n  // Save and Delete\n  on(\n    VendorActions.saveVendorDetailsSuccess,\n    VendorActions.toggleVendorStatusSuccess,\n    VendorActions.deleteVendorSuccess,\n    (state: State) => ({\n      ...state,\n      loading: false,\n    })\n  ),\n\n  // Base actions handling\n  on(VendorActions.saveVendorDetails, VendorActions.toggleVendorStatus, VendorActions.deleteVendor, (state: State) => ({\n    ...state,\n    error: null,\n  })),\n\n  // Start actions handling\n  on(\n    VendorActions.loadVendorsStart,\n    VendorActions.toggleVendorStatusStart,\n    VendorActions.saveVendorDetailsStart,\n    VendorActions.deleteVendorStart,\n    (state: State) => ({\n      ...state,\n      loading: true,\n    })\n  ),\n\n  // Error actions handling\n  on(\n    VendorActions.loadVendorsError,\n    VendorActions.toggleVendorStatusError,\n    VendorActions.saveVendorDetailsError,\n    VendorActions.deleteVendorError,\n    (state: State, { error }) => ({\n      ...state,\n      loading: false,\n      error,\n    })\n  )\n);\n\nexport function reducer(state: State | undefined, action: Action): State {\n  return vendorsReducer(state, action);\n}\n\nexport const getState = createFeatureSelector<State>('vendors');\nexport const selectVendors = createSelector(getState, (state) => {\n  return {\n    ...state,\n    data: state.data.map((item) => new VendorAdapter().adapt(item)),\n  };\n});\nexport const selectVendorsData = createSelector(selectVendors, (state) => state.data);\nexport const vendorsLoading = createSelector(getState, (state) => state.loading);\nexport const selectVendorsStats = createSelector(\n  getState,\n  (state): DashboardStat => ({\n    loading: state.loading,\n    count: state.pagination?.totalElements,\n  })\n);\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\nexport interface ApiCacheEntry {\n  url: string;\n  group: string;\n  response: any;\n  lastRead: number;\n}\n\nexport abstract class ApiCache {\n  abstract get(req: HttpRequest<any>): HttpResponse<any> | undefined;\n  abstract put(req: HttpRequest<any>, response: HttpResponse<any>, group?: string): void;\n  abstract clearAll(): void;\n  abstract clearByGroupName(group: string): void;\n}\n\nconst maxAge = 60 * 60 * 1000; // maximum cache age (60 minutes) - cleared on logout\n\n@Injectable()\nexport class ApiCacheWithMap implements ApiCache {\n  cache = new Map<string, ApiCacheEntry>();\n\n  get(req: HttpRequest<any>): HttpResponse<any> | undefined {\n    const url = req.urlWithParams;\n    const cached = this.cache.get(url);\n\n    if (!cached) return undefined;\n\n    const isExpired = cached.lastRead < Date.now() - maxAge;\n\n    const expired = isExpired ? 'expired ' : '';\n    this.log('HIT', `Found ${expired}cached response for \"${url}\".`);\n\n    return isExpired ? undefined : cached.response;\n  }\n\n  put(req: HttpRequest<any>, response: HttpResponse<any>, group?: string): void {\n    const url = req.urlWithParams;\n    this.log('MISS', `Caching response from \"${url}\".`);\n\n    const newEntry = { url, response: response.body, lastRead: Date.now(), group: group || 'default' };\n    this.cache.set(url, newEntry);\n\n    // remove expired cache entries\n    const expired = Date.now() - maxAge;\n    this.cache.forEach((cache, key, map) => {\n      if (cache.lastRead < expired) map.delete(key);\n    });\n  }\n\n  clearByGroupName(group: string): void {\n    this.cache.forEach((cache, key, map) => {\n      if (cache.group === group) map.delete(key);\n    });\n  }\n\n  clearAll(): void {\n    this.cache = new Map<string, ApiCacheEntry>();\n  }\n\n  log(action: 'HIT' | 'MISS', text: string): void {\n    // Only log if debug mode is enabled\n    if (!environment.api.cache.debugMode) return;\n\n    const colors = {\n      HIT: 'forestgreen',\n      MISS: 'darkorange',\n    };\n\n    console.log(\n      `%cCache%c %c${action}%c ${text}`,\n      `font-weight: normal; font-size: 9px; color: black;\n      background: white; border: solid 1px black; padding: 2px 5px;\n      border-radius: 3px; text-align: center`,\n      ``,\n      `font-weight: normal; font-size: 9px; color: white;\n      background: ${colors[action]}; padding: 2px 5px;\n      border-radius: 3px; text-align: center`,\n      ``\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { filter } from 'rxjs/operators';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRouteSnapshot, ResolveEnd, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppInitializerService {\n  constructor(private readonly title: Title, private readonly router: Router) {}\n\n  public init(): void {\n    this.setupPageTitle();\n  }\n\n  private setupPageTitle(): void {\n    this.router.events.pipe(filter((event) => event instanceof ResolveEnd)).subscribe((event: ResolveEnd) => {\n      const { data } = AppInitializerService.getDeepestChildSnapshot(event.state.root);\n\n      if (data?.title) this.title.setTitle(data.title);\n    });\n  }\n\n  private static getDeepestChildSnapshot(snapshot: ActivatedRouteSnapshot): ActivatedRouteSnapshot {\n    let deepestChild = snapshot.firstChild;\n\n    while (deepestChild?.firstChild !== null) {\n      deepestChild = deepestChild.firstChild;\n    }\n\n    return deepestChild || snapshot;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BillingRequest } from '../models/billing-request.model';\nimport { cacheGroup, clearGroups } from '../interceptors/cache.interceptor';\nimport { PaginatedData, PaginatedDataAdapter, PaginatedResponse } from '../models/pagination.model';\n\nconst CacheGroups = {\n  list: 'billing-request.list',\n};\n\n@Injectable({ providedIn: 'root' })\nexport class BillingRequestService {\n  private baseUrl = '/api/tmcc/corporations/billing-profiles/requests';\n\n  constructor(private http: HttpClient) {}\n\n  list(params): Observable<PaginatedData<BillingRequest>> {\n    return this.http\n      .get<PaginatedResponse<BillingRequest>>(this.baseUrl, { params, context: cacheGroup(CacheGroups.list) })\n      .pipe(map((data) => new PaginatedDataAdapter<BillingRequest>().adapt(data)));\n  }\n\n  update(data: BillingRequest): Observable<BillingRequest> {\n    const { id, ...withoutId } = data;\n\n    return this.http.put<BillingRequest>(`${this.baseUrl}/${id}`, withoutId, {\n      context: clearGroups([CacheGroups.list]),\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Booking } from '../models/booking.model';\nimport { BookingListItem } from '../models/booking-list-item.model';\nimport { cacheGroup, clearGroups } from '../interceptors/cache.interceptor';\nimport { PaginatedData, PaginatedDataAdapter, PaginatedResponse } from '../models/pagination.model';\nimport { environment } from '../../environments/environment';\n\nconst CacheGroups = {\n  list: 'booking.list',\n  details: (id) => `booking.details.${id}`,\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BookingService {\n  private baseUrl = '/api/tmcc/bookings';\n  private baseUrlElastic = '/api/v3/tmcc/bookings';\n  private useElastic = environment.useElasticSearch.bookings;\n\n  constructor(private http: HttpClient) {}\n\n  list(params): Observable<PaginatedData<BookingListItem>> {\n    const baseUrl = this.useElastic ? this.baseUrlElastic : this.baseUrl;\n\n    return this.http\n      .get<PaginatedResponse<BookingListItem>>(baseUrl, { params, context: cacheGroup(CacheGroups.list) })\n      .pipe(map((data) => new PaginatedDataAdapter<BookingListItem>().adapt(data)));\n  }\n\n  getDetails(id: Booking['cartId']): Observable<Booking> {\n    const baseUrl = this.useElastic ? this.baseUrlElastic : this.baseUrl;\n\n    return this.http.get<Booking>(`${baseUrl}/${id}`, { context: cacheGroup(CacheGroups.details(id)) });\n  }\n\n  getReferenceTypes(): Observable<string[]> {\n    return this.http.get<string[]>(`${this.baseUrl}/reference-types`);\n  }\n\n  update(booking: Booking): Observable<Booking> {\n    return this.http.patch<Booking>(\n      `${this.baseUrl}/update-agent-note/${booking.cartId}`,\n      { agentNote: booking.agentNote },\n      { context: clearGroups([CacheGroups.list, CacheGroups.details(booking.cartId)]) }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CompanyUser } from '../models/company-user.model';\nimport { cacheGroup, clearGroups } from '../interceptors/cache.interceptor';\nimport { PaginatedData, PaginatedDataAdapter, PaginatedResponse } from '../models/pagination.model';\n\nconst CacheGroups = {\n  list: 'company-user.list',\n  details: (id) => `company-user.details.${id}`,\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompanyUserService {\n  private baseUrl = '/api/tmcc/company-users';\n\n  constructor(private http: HttpClient) {}\n\n  list(params): Observable<PaginatedData<CompanyUser>> {\n    return this.http\n      .get<PaginatedResponse<CompanyUser>>(this.baseUrl, { params, context: cacheGroup(CacheGroups.list) })\n      .pipe(map((data) => new PaginatedDataAdapter<CompanyUser>().adapt(data)));\n  }\n\n  getDetails(id: CompanyUser['id']): Observable<CompanyUser> {\n    return this.http.get<CompanyUser>(`${this.baseUrl}/${id}`, { context: cacheGroup(CacheGroups.details(id)) });\n  }\n\n  saveDetails(user: CompanyUser): Observable<CompanyUser> {\n    const groupsToClear = [CacheGroups.list];\n\n    // Edit existing company user\n    if (user.id) {\n      groupsToClear.push(CacheGroups.details(user.id));\n\n      return this.http.put<CompanyUser>(`${this.baseUrl}/${user.id}`, user, { context: clearGroups(groupsToClear) });\n    }\n\n    // Create new company user\n    return this.http.post<CompanyUser>(this.baseUrl, user, { context: clearGroups(groupsToClear) });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Company, SubscriptionStatus } from '../models/company.model';\nimport { cacheGroup, clearGroups } from '../interceptors/cache.interceptor';\nimport { PaginatedData, PaginatedDataAdapter, PaginatedResponse } from '../models/pagination.model';\n\nconst CacheGroups = {\n  list: 'company.list',\n  details: (id) => `company.details.${id}`,\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompanyService {\n  private baseUrl = '/api/tmcc/companies';\n\n  constructor(private http: HttpClient) {}\n\n  list(params): Observable<PaginatedData<Company>> {\n    return this.http\n      .get<PaginatedResponse<Company>>(this.baseUrl, { params, context: cacheGroup(CacheGroups.list) })\n      .pipe(map((data) => new PaginatedDataAdapter<Company>().adapt(data)));\n  }\n\n  getDetails(id: Company['id']): Observable<Company> {\n    return this.http.get<Company>(`${this.baseUrl}/${id}`, { context: cacheGroup(CacheGroups.details(id)) });\n  }\n\n  saveDetails(company: Company): Observable<Company> {\n    const groupsToClear = [CacheGroups.list];\n\n    // Edit existing company\n    if (company.id) {\n      groupsToClear.push(CacheGroups.details(company.id));\n\n      return this.http.put<Company>(`${this.baseUrl}/${company.id}`, company, { context: clearGroups(groupsToClear) });\n    }\n\n    // Create new company\n    return this.http.post<Company>(this.baseUrl, company, { context: clearGroups(groupsToClear) });\n  }\n\n  delete(company: Company): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${company.id}`, {\n      context: clearGroups([CacheGroups.list, CacheGroups.details(company.id)]),\n    });\n  }\n\n  toggleSubscriptionStatus(company: Company): Observable<Company> {\n    const action = company.subscriptionStatus === SubscriptionStatus.DISABLED ? 'enable' : 'disable';\n\n    return this.http.patch<Company>(\n      `${this.baseUrl}/${company.id}/${action}`,\n      {},\n      { context: clearGroups([CacheGroups.list]) }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Country } from '../models/country.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CountryService {\n  private baseUrl = '/api/details/locations/countries';\n\n  constructor(private http: HttpClient) {}\n\n  list(): Observable<Country[]> {\n    return this.http.get<Country[]>(this.baseUrl).pipe(\n      map((data) => {\n        return data.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Feature } from '../models/feature.model';\nimport { ApiResponse } from '../global/interfaces/response.interface';\nimport { cacheGroup, clearGroups } from '../interceptors/cache.interceptor';\n\nconst CacheGroups = {\n  list: 'feature.list',\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FeatureService {\n  private baseUrl = '/api/tmcc/features';\n\n  constructor(private http: HttpClient) {}\n\n  list(): Observable<Feature[]> {\n    return this.http.get<Feature[]>(this.baseUrl, { context: cacheGroup(CacheGroups.list) });\n  }\n\n  toggleStatus(feature: Feature): Observable<Feature> {\n    return this.http\n      .patch<ApiResponse>(\n        `${this.baseUrl}/${feature.id}`,\n        { enable: !feature.enabled },\n        { context: clearGroups([CacheGroups.list]) }\n      )\n      .pipe(\n        // Since we are not getting feature object as a response\n        // we have to do the validation and return it instead\n        map((response) => {\n          if (response.valid) {\n            return { ...feature, enabled: !feature.enabled };\n          }\n\n          throw new Error('Error updating a feature.');\n        })\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Product } from '../models/product.model';\nimport { cacheGroup, clearGroups } from '../interceptors/cache.interceptor';\nimport { PaginatedData, PaginatedDataAdapter, PaginatedResponse } from '../models/pagination.model';\n\nconst CacheGroups = {\n  list: 'product.list',\n  details: (id) => `product.details.${id}`,\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  private baseUrl = '/api/tmcc/products';\n\n  constructor(private http: HttpClient) {}\n\n  list(params): Observable<PaginatedData<Product>> {\n    return this.http\n      .get<PaginatedResponse<Product>>(this.baseUrl, { params, context: cacheGroup(CacheGroups.list) })\n      .pipe(map((data) => new PaginatedDataAdapter<Product>().adapt(data)));\n  }\n\n  toggleStatus(product: Product): Observable<Product> {\n    return this.saveDetails({ ...product, active: !product.active });\n  }\n\n  saveDetails(product: Product): Observable<Product> {\n    const groupsToClear = [CacheGroups.list];\n\n    // Edit existing product\n    if (product.id) {\n      const { id, ...withoutId } = product;\n      groupsToClear.push(CacheGroups.details(id));\n\n      return this.http.put<Product>(`${this.baseUrl}/${id}`, withoutId, { context: clearGroups(groupsToClear) });\n    }\n\n    // Create new product\n    return this.http.post<Product>(this.baseUrl, product, { context: clearGroups(groupsToClear) });\n  }\n\n  getById(id: Product['id']): Observable<Product> {\n    return this.http.get<Product>(`${this.baseUrl}/${id}`, { context: cacheGroup(CacheGroups.details(id)) });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SystemMessage } from '../models/system-message.model';\nimport { cacheGroup, clearGroups } from '../interceptors/cache.interceptor';\nimport { PaginatedData, PaginatedDataAdapter, PaginatedResponse } from '../models/pagination.model';\n\nconst CacheGroups = {\n  list: 'system-message.list',\n  details: (id) => `system-message.details.${id}`,\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SystemMessageService {\n  private baseUrl = '/api/tmcc/system-messages';\n\n  constructor(private http: HttpClient) {}\n\n  list(params): Observable<PaginatedData<SystemMessage>> {\n    return this.http\n      .get<PaginatedResponse<SystemMessage>>(this.baseUrl, { params, context: cacheGroup(CacheGroups.list) })\n      .pipe(map((data) => new PaginatedDataAdapter<SystemMessage>().adapt(data)));\n  }\n\n  getDetails(id: SystemMessage['id']): Observable<SystemMessage> {\n    return this.http.get<SystemMessage>(`${this.baseUrl}/${id}`, { context: cacheGroup(CacheGroups.details(id)) });\n  }\n\n  saveDetails(systemMessage: SystemMessage): Observable<SystemMessage> {\n    const groupsToClear = [CacheGroups.list];\n\n    // Edit existing system message\n    if (systemMessage.id) {\n      groupsToClear.push(CacheGroups.details(systemMessage.id));\n\n      return this.http.patch<SystemMessage>(`${this.baseUrl}/${systemMessage.id}`, systemMessage, {\n        context: clearGroups(groupsToClear),\n      });\n    }\n\n    // Create new systemMessage\n    return this.http.post<SystemMessage>(this.baseUrl, systemMessage, { context: clearGroups(groupsToClear) });\n  }\n\n  delete(systemMessage: SystemMessage): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/${systemMessage.id}`, {\n      context: clearGroups([CacheGroups.list, CacheGroups.details(systemMessage.id)]),\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Config } from '../config';\nimport { Tmc, TmcApiObject } from '../config/tmc';\nimport { cache } from '../interceptors/cache.interceptor';\n\n@Injectable()\nexport class TenantService {\n  private baseUrl = `${environment.api.dtms}/api`;\n  private baseUrlSecure = `${environment.api.dtms}/api`;\n\n  constructor(private http: HttpClient) {}\n\n  getConfig(): Observable<Config> {\n    return this.http\n      .get<Partial<{ data: TmcApiObject }>>(`${this.baseUrl}/tenant/config`)\n      .pipe(map(({ data }): Config => ({ tmc: this.mapTmcResponseObject(data) })));\n  }\n\n  getPrimaryTenants(): Observable<Tmc[]> {\n    return this.http.get<Partial<{ data: TmcApiObject[] }>>(`${this.baseUrlSecure}/tenants`, { context: cache() }).pipe(\n      map(({ data }): Tmc[] => {\n        return data.map((tenant) => this.mapTmcResponseObject(tenant));\n      })\n    );\n  }\n\n  private mapTmcResponseObject(tenant: TmcApiObject): Tmc {\n    return {\n      id: tenant.key,\n      name: tenant.name,\n      logo: tenant.config?.tmc?.logo,\n      logoInverted: tenant.config?.tmc?.logoInverted,\n      headline: tenant.config?.tmc?.headline,\n      platformLink: tenant.topLevelDomainCW,\n      adminLink: tenant.topLevelDomainTMCC,\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../models/user.model';\nimport { CompanyUser } from '../models/company-user.model';\nimport { cacheGroup, clearGroups } from '../interceptors/cache.interceptor';\nimport { PaginatedData, PaginatedDataAdapter, PaginatedResponse } from '../models/pagination.model';\n\nconst CacheGroups = {\n  list: 'user.list',\n  details: (id: string) => `user.details.${id}`,\n  token: (username: string) => `user.token.${username}`,\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private baseUrl = '/api/tmcc/users';\n\n  constructor(private http: HttpClient) {}\n\n  list(params): Observable<PaginatedData<User>> {\n    return this.http\n      .get<PaginatedResponse<User>>(this.baseUrl, { params, context: cacheGroup(CacheGroups.list) })\n      .pipe(map((data) => new PaginatedDataAdapter<User>().adapt(data)));\n  }\n\n  getById(id: User['id']): Observable<User> {\n    return this.http.get<User>(`${this.baseUrl}/${id}`, { context: cacheGroup(CacheGroups.details(id)) });\n  }\n\n  saveDetails(user: User): Observable<User> {\n    const groupsToClear = [CacheGroups.list];\n\n    // Edit existing user\n    if (user.id) {\n      groupsToClear.push(CacheGroups.details(user.id), CacheGroups.token(user.username));\n\n      const { id, ...withoutId } = user;\n      return this.http.put<User>(`${this.baseUrl}/${id}`, withoutId, { context: clearGroups(groupsToClear) });\n    }\n\n    // Create new user\n    return this.http.post<User>(this.baseUrl, user, { context: clearGroups(groupsToClear) });\n  }\n\n  changeUserPassword(user: User): Observable<User> {\n    return this.http.put<User>(\n      `${this.baseUrl}/${user.id}/change-password`,\n      { newPassword: user.password },\n      { context: clearGroups([CacheGroups.details(user.id), CacheGroups.token(user.username)]) }\n    );\n  }\n\n  getOverrideToken(username: CompanyUser['username']): Observable<Partial<{ token: string }>> {\n    return this.http.get<Partial<{ token: string }>>(`${this.baseUrl}-override`, {\n      params: { username },\n      context: cacheGroup(CacheGroups.token(username)),\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { VatCategory } from '../models/vat-category.model';\nimport { cacheGroup, clearGroups } from '../interceptors/cache.interceptor';\nimport { PaginatedData, PaginatedDataAdapter, PaginatedResponse } from '../models/pagination.model';\n\nconst CacheGroups = {\n  list: 'vat-category.list',\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VatCategoryService {\n  private baseUrl = '/api/tmcc/products/vat-categories';\n\n  constructor(private http: HttpClient) {}\n\n  list(params): Observable<PaginatedData<VatCategory>> {\n    return this.http\n      .get<PaginatedResponse<VatCategory>>(this.baseUrl, { params, context: cacheGroup(CacheGroups.list) })\n      .pipe(map((data) => new PaginatedDataAdapter<VatCategory>().adapt(data)));\n  }\n\n  toggleStatus(vatCategory: VatCategory): Observable<VatCategory> {\n    return this.saveDetails({ ...vatCategory, active: !vatCategory.active });\n  }\n\n  saveDetails(vatCategory: VatCategory): Observable<VatCategory> {\n    const groupsToClear = [CacheGroups.list];\n\n    // Edit existing vat category\n    if (vatCategory.id) {\n      const { id, ...withoutId } = vatCategory;\n      return this.http.put<VatCategory>(`${this.baseUrl}/${id}`, withoutId, { context: clearGroups(groupsToClear) });\n    }\n\n    // Create new vat category\n    return this.http.post<VatCategory>(this.baseUrl, vatCategory, { context: clearGroups(groupsToClear) });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Vendor } from '../models/vendor.model';\nimport { cacheGroup, clearGroups } from '../interceptors/cache.interceptor';\nimport { PaginatedData, PaginatedDataAdapter, PaginatedResponse } from '../models/pagination.model';\n\nconst CacheGroups = {\n  list: 'vendor.list',\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VendorService {\n  private baseUrl = '/api/tmcc/products/vendors';\n\n  constructor(private http: HttpClient) {}\n\n  list(params): Observable<PaginatedData<Vendor>> {\n    return this.http\n      .get<PaginatedResponse<Vendor>>(this.baseUrl, { params, context: cacheGroup(CacheGroups.list) })\n      .pipe(map((data) => new PaginatedDataAdapter<Vendor>().adapt(data)));\n  }\n\n  toggleStatus(vendor: Vendor): Observable<Vendor> {\n    return this.saveDetails({ ...vendor, active: !vendor.active });\n  }\n\n  saveDetails(vendor: Vendor): Observable<Vendor> {\n    const groupsToClear = [CacheGroups.list];\n\n    // Edit existing vendor\n    if (vendor.id) {\n      const { id, ...withoutId } = vendor;\n      return this.http.put<Vendor>(`${this.baseUrl}/${id}`, withoutId, { context: clearGroups(groupsToClear) });\n    }\n\n    // Create new vendor\n    return this.http.post<Vendor>(this.baseUrl, vendor, { context: clearGroups(groupsToClear) });\n  }\n\n  delete(vendor: Vendor): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/${vendor.id}`, { context: clearGroups([CacheGroups.list]) });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { VendorsPaymentProvider } from '../models/vendors-payment-provider.model';\nimport { cacheGroup, clearGroups } from '../interceptors/cache.interceptor';\nimport { PaginatedData, PaginatedDataAdapter, PaginatedResponse } from '../models/pagination.model';\n\nconst CacheGroups = {\n  list: 'vendorsPaymentProvider.list',\n  details: (id) => `vendorsPaymentProvider.details.${id}`,\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VendorsPaymentProviderService {\n  private baseUrl = '/api/tmcc/products/vendors/payment-providers';\n\n  constructor(private http: HttpClient) {}\n\n  list(params): Observable<PaginatedData<VendorsPaymentProvider>> {\n    return this.http\n      .get<PaginatedResponse<VendorsPaymentProvider>>(this.baseUrl, { params, context: cacheGroup(CacheGroups.list) })\n      .pipe(map((data) => new PaginatedDataAdapter<VendorsPaymentProvider>().adapt(data)));\n  }\n\n  toggleStatus(item: VendorsPaymentProvider): Observable<VendorsPaymentProvider> {\n    return this.saveDetails({ ...item, active: !item.active });\n  }\n\n  saveDetails(item: VendorsPaymentProvider): Observable<VendorsPaymentProvider> {\n    const groupsToClear = [CacheGroups.list];\n\n    // Edit existing vendor payment provider\n    if (item.id) {\n      const { id, ...withoutId } = item;\n      groupsToClear.push(CacheGroups.details(id));\n\n      return this.http.put<VendorsPaymentProvider>(`${this.baseUrl}/${id}`, withoutId, {\n        context: clearGroups(groupsToClear),\n      });\n    }\n\n    // Create new vendor payment provider\n    return this.http.post<VendorsPaymentProvider>(this.baseUrl, item, { context: clearGroups(groupsToClear) });\n  }\n\n  getById(id: VendorsPaymentProvider['id']): Observable<VendorsPaymentProvider> {\n    return this.http.get<VendorsPaymentProvider>(`${this.baseUrl}/${id}`, {\n      context: cacheGroup(CacheGroups.details(id)),\n    });\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { take } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { BaseComponent } from '../base.component';\nimport { User, UserAdapter, UserModel, UserType } from '../models/user.model';\nimport { loggedInUser } from '../reducers/auth.reducer';\nimport { AppState } from '../reducers';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n})\nexport class UserFormComponent extends BaseComponent implements OnInit {\n  public form: UntypedFormGroup;\n  public user: UserModel;\n  public loggedInUser: UserModel = null;\n  public userTypes: UserType[] = [UserType.AGENT, UserType.ADMIN, UserType.SUPER_ADMIN];\n\n  constructor(\n    private store: Store<AppState>,\n    private formBuilder: UntypedFormBuilder,\n    public dialogRef: MatDialogRef<UserFormComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { user: User }\n  ) {\n    super();\n\n    this.store\n      .select(loggedInUser)\n      .pipe(take(1))\n      .subscribe((user) => {\n        this.loggedInUser = user;\n      });\n\n    // Convert input to UserModel, so we have access to additional methods\n    this.user = new UserAdapter().adapt(this.data.user);\n  }\n\n  ngOnInit(): void {\n    const formFields = {\n      firstName: [this.user.firstName, [Validators.required]],\n      lastName: [this.user.lastName, [Validators.required]],\n      type: [{ value: this.user.type, disabled: this.isCurrentUser }, [Validators.required]],\n      username: [{ value: this.user.username, disabled: this.isCurrentUser }, [Validators.required]],\n      phone: [this.user.phone, [Validators.minLength(6)]],\n    };\n\n    // Current user will not be able to see or change his own user type\n    if (this.isCurrentUser) delete formFields.type;\n\n    this.form = this.formBuilder.group(formFields);\n  }\n\n  get isUpdate(): boolean {\n    return !!this.user.id;\n  }\n\n  get isCurrentUser(): boolean {\n    return this.user.id === this.loggedInUser.id;\n  }\n\n  close(): User {\n    this.user.firstName = this.form.get('firstName').value;\n    this.user.lastName = this.form.get('lastName').value;\n    this.user.phone = this.form.get('phone').value;\n    this.user.username = this.form.get('username').value;\n\n    return this.user;\n  }\n\n  onUserTypeChange(item: UserType): void {\n    this.user.type = item;\n  }\n}\n","<dib-dialog-title>\n  <div class=\"flex items-center space-x-2\">\n    <span>\n      {{ isUpdate ? 'Edit' : 'Add' }}\n      {{ isCurrentUser ? 'Profile' : 'User' }}\n    </span>\n    <span *ngIf=\"isUpdate && !isCurrentUser\" class=\"text-sm font-normal text-gray-500\">({{ user.fullName }})</span>\n  </div>\n</dib-dialog-title>\n<mat-dialog-content class=\"mt-4 mb-6\">\n  <!-- Enable this when we add option to upload photos\n  <div class=\"flex items-center mb-4\">\n    <span class=\"mr-2 text-5xl text-gray-400 material-icons\">account_circle</span>\n    <span class=\"font-medium text-emerald-600\">Select a photo...</span>\n  </div> -->\n  <form [formGroup]=\"form\" class=\"grid grid-cols-1\">\n    <mat-form-field>\n      <mat-label>Email</mat-label>\n      <input matInput formControlName=\"username\" autocomplete=\"off\" />\n    </mat-form-field>\n    <mat-form-field *ngIf=\"!isCurrentUser\">\n      <mat-label>Type</mat-label>\n      <mat-select formControlName=\"type\" (selectionChange)=\"onUserTypeChange($event.value)\">\n        <mat-option *ngFor=\"let type of userTypes\" [disabled]=\"!loggedInUser.hasPermissionToUpdate(type)\" [value]=\"type\">\n          {{ type }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>First Name</mat-label>\n      <input matInput formControlName=\"firstName\" autocomplete=\"off\" />\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Last Name</mat-label>\n      <input matInput formControlName=\"lastName\" autocomplete=\"off\" />\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Phone</mat-label>\n      <input matInput formControlName=\"phone\" autocomplete=\"off\" />\n    </mat-form-field>\n  </form>\n</mat-dialog-content>\n<mat-dialog-actions class=\"mb-1 justify-end\">\n  <button mat-button [mat-dialog-close]=\"false\">Cancel</button>\n  <button\n    mat-button\n    color=\"primary\"\n    [ngClass]=\"form.invalid ? 'mat-flat-button' : 'mat-stroked-button'\"\n    [mat-dialog-close]=\"close()\"\n    [disabled]=\"form.invalid\"\n  >\n    {{ isUpdate ? 'Save' : 'Add' }}\n  </button>\n</mat-dialog-actions>\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { take } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { BaseComponent } from '../base.component';\nimport { User, UserAdapter, UserModel } from '../models/user.model';\nimport { loggedInUser } from '../reducers/auth.reducer';\nimport { AppState } from '../reducers';\n\n@Component({\n  selector: 'app-user-password-form',\n  templateUrl: './user-password-form.component.html',\n})\nexport class UserPasswordFormComponent extends BaseComponent {\n  public user: UserModel;\n  public form: UntypedFormGroup;\n  public loggedInUser: UserModel = null;\n\n  constructor(\n    private store: Store<AppState>,\n    private formBuilder: UntypedFormBuilder,\n    public dialogRef: MatDialogRef<UserPasswordFormComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { user: UserModel }\n  ) {\n    super();\n\n    this.form = this.formBuilder.group({\n      password: [undefined, [Validators.required, Validators.minLength(6)]],\n      confirmPassword: [undefined, [Validators.required, super.matches('password')]],\n    });\n\n    this.subscriptions.add(\n      this.form.controls.password.valueChanges.subscribe(() => {\n        this.form.controls.confirmPassword.updateValueAndValidity();\n      })\n    );\n\n    this.store\n      .select(loggedInUser)\n      .pipe(take(1))\n      .subscribe((user) => {\n        this.loggedInUser = user;\n      });\n\n    // Convert input to UserModel, so we have access to additional methods\n    this.user = new UserAdapter().adapt(this.data.user);\n  }\n\n  get isCurrentUser(): boolean {\n    return this.user.id === this.loggedInUser.id;\n  }\n\n  public close(): User {\n    this.user.password = this.form.get('password').value;\n\n    return this.user;\n  }\n}\n","<dib-dialog-title>\n  <div class=\"flex items-center space-x-2\">\n    <span>Change Password</span>\n    <span *ngIf=\"!isCurrentUser\" class=\"text-sm font-normal text-gray-500\">({{ user.fullName }})</span>\n  </div>\n</dib-dialog-title>\n<mat-dialog-content class=\"mt-4 mb-6\">\n  <form [formGroup]=\"form\" class=\"grid grid-cols-1\">\n    <mat-form-field class=\"mb-1\">\n      <mat-label>New Password</mat-label>\n      <input matInput type=\"password\" name=\"password\" formControlName=\"password\" autocomplete=\"off\" />\n      <mat-hint>Password must be minimum 6 characters long</mat-hint>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Confirm New Password</mat-label>\n      <input matInput type=\"password\" name=\"confirmPassword\" formControlName=\"confirmPassword\" autocomplete=\"off\" />\n    </mat-form-field>\n  </form>\n</mat-dialog-content>\n<mat-dialog-actions class=\"mb-1 justify-end\">\n  <button mat-button [mat-dialog-close]=\"false\">Cancel</button>\n  <button\n    mat-button\n    color=\"primary\"\n    [ngClass]=\"form.invalid ? 'mat-flat-button' : 'mat-stroked-button'\"\n    [mat-dialog-close]=\"close()\"\n    [disabled]=\"form.invalid\"\n  >\n    Change Password\n  </button>\n</mat-dialog-actions>\n","import { animate, keyframes, style, transition, trigger } from '@angular/animations';\n\nexport const elementCrossFade = trigger('elementCrossFade', [\n  transition(':leave', [\n    animate('300ms', keyframes([style({ opacity: 1 }), style({ opacity: 0 }), style({ opacity: 0 })])),\n  ]),\n  transition(':enter', [\n    animate('300ms', keyframes([style({ opacity: 0 }), style({ opacity: 0 }), style({ opacity: 1 })])),\n  ]),\n]);\n","export interface JwtClaims {\n  exp: number;\n  iat: number;\n  userId: string;\n  username: string;\n  ROLE_AGENT: boolean;\n}\n\nexport function getJwtClaims(token: string): JwtClaims {\n  const jwtData = token.split('.')[1];\n  const decodedJwtJsonData = window.atob(jwtData);\n  return JSON.parse(decodedJwtJsonData);\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'dibCamelCaseToSpaces' })\nexport class DibCamelCaseToSpacesPipe implements PipeTransform {\n  transform(value: string): string {\n    if (!value) return '';\n\n    // Convert camel case text to sentence case text and capitalize first letter\n    // \"companyName\" will become \"Company Name\"\n    return value\n      .replace(/([A-Z])/g, (match) => ` ${match}`)\n      .replace(/^./, (match) => match.toUpperCase())\n      .trim();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { formatDuration, intervalToDuration, isEqual } from 'date-fns';\nimport { DibPriceFormatPipe } from './price-format.pipe';\nimport { CancellationPolicy } from '../../models/cart-items/shared.model';\n\n@Pipe({\n  name: 'dibCancellationPolicy',\n  pure: true,\n})\nexport class DibCancellationPolicyPipe implements PipeTransform {\n  transform(policy: CancellationPolicy, bookingStarts: string | Date): string {\n    return this.translateCancellationPolicy(policy, bookingStarts);\n  }\n\n  /**\n   * TODO: [localize] Add translations\n   * TODO: [localize] Add formatDuration() wrapper, so we can have duration translations as well\n   *\n   * Examples of what might this function return\n   *  - Non-refundable within 60 minutes of pick-up time\n   *  - 80% refundable up to 60 minutes prior to ride\n   *  - Free cancellation up to 120 minutes prior to ride\n   *  - Non-refundable within 60 minutes of pick-up time\n   *  - 30 SEK refundable up to 60 minutes prior to ride\n   *  - Free cancellation up to 120 minutes prior to ride\n   */\n  translateCancellationPolicy(policy: CancellationPolicy, bookingStarts: string | Date): string {\n    let duration = formatDuration(\n      intervalToDuration({\n        start: new Date(policy.toDate),\n        end: new Date(bookingStarts),\n      })\n    );\n\n    if (isEqual(new Date(policy.toDate), new Date(bookingStarts))) {\n      duration = formatDuration(\n        intervalToDuration({\n          start: new Date(policy.fromDate),\n          end: new Date(bookingStarts),\n        })\n      );\n\n      return `${this.getRefundAmount(policy)} within ${duration} of pick-up time`;\n    }\n\n    return `${this.getRefundAmount(policy)} up to ${duration} prior to ride`;\n  }\n\n  /**\n   * TODO: [localize] Add translations\n   *\n   * Examples of what might this function return\n   *  - Non-refundable\n   *  - 80% refundable\n   *  - 30 SEK refundable\n   *  - Free cancellation\n   */\n  private getRefundAmount(policy: CancellationPolicy): string {\n    // Full refund\n    if (policy.fullRefundable) return 'Free cancellation';\n\n    // Non refundable\n    if (policy.refundAmount === 0) return 'Non-refundable';\n\n    // Percentage refund\n    if (Number.isFinite(policy.cancellationFeeDetails?.percent)) {\n      return `${100 - policy.cancellationFeeDetails.percent}% refundable`;\n    }\n\n    // Fixed value refund\n    const price = new DibPriceFormatPipe().transform(policy.refundAmount);\n    return `${price} ${policy.currency} refundable`;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'dibDashesToSpaces' })\nexport class DibDashesToSpacesPipe implements PipeTransform {\n  transform(value: string): string {\n    if (!value) return '';\n\n    // Replace any combination of dashes and underscore characters with spaces\n    // \"AT_RISK\" will become \"AT RISK\"\n    // \"AT___RISK\" will become \"AT RISK\"\n    // \"AT---__--RISK\" will become \"AT RISK\"\n    return value.replace(/[_-]+/g, ' ').trim();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { differenceInYears, format, formatDistanceToNow } from 'date-fns';\n\ntype DibDateType =\n  | 'ui'\n  | 'uiWithTime'\n  | 'time'\n  | 'server'\n  | 'distanceToNow'\n  | 'yearsOld'\n  | 'productDetails'\n  | 'productDetailsShort'\n  | 'productDetailsWithTime';\n\n@Pipe({ name: 'dibDate' })\nexport class DibDatePipe implements PipeTransform {\n  transform(date: string, type?: DibDateType): string {\n    return formatDibDate(date, type);\n  }\n}\n\n// Export function so it can be used directly as well\nexport function formatDibDate(date: string, type?: DibDateType): string {\n  if (!date) return '';\n\n  switch (type) {\n    case 'productDetailsShort':\n      // Jan 29, 2021\n      return format(new Date(date), 'LLL dd, yyyy');\n    case 'productDetails':\n      // Jan 29, 2021 (Fri)\n      return format(new Date(date), 'LLL dd, yyyy (EEE)');\n    case 'productDetailsWithTime':\n      // Jan 29, 2021 (Fri) at 06:15\n      return format(new Date(date), \"LLL dd, yyyy (EEE) 'at' HH:mm\");\n    case 'yearsOld':\n      // 21 years old\n      return `${differenceInYears(new Date(), new Date(date))} years old`;\n    case 'distanceToNow':\n      // 6 days ago\n      return formatDistanceToNow(new Date(date), { addSuffix: true });\n    case 'server':\n      // 2021-03-08T19:40:42.593+01:00\n      return format(new Date(date), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\");\n    case 'time':\n      // 06:15\n      return format(new Date(date), 'HH:mm');\n    case 'uiWithTime':\n      // 2020-12-18 06:15\n      return format(new Date(date), 'yyyy-MM-dd HH:mm');\n    case 'ui':\n    default:\n      // 2020-12-18\n      return format(new Date(date), 'yyyy-MM-dd');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\ntype DibDateType = 'minutesToHrMin' | 'minutesToHM' | 'secondsToHrMin' | 'secondsToHM';\n\n@Pipe({ name: 'dibDuration' })\nexport class DibDurationPipe implements PipeTransform {\n  transform(duration: number, type?: DibDateType): string {\n    return formatDibDuration(duration, type);\n  }\n}\n\n// Export function so it can be used directly as well\nexport function formatDibDuration(duration: number, type?: DibDateType): string {\n  if (!duration) return '';\n\n  switch (type) {\n    case 'secondsToHM': {\n      // 17700 => 4h 55m\n      const minutes = Math.round(duration / 60); // convert seconds to minutes\n      return minutes > 59 ? `${Math.trunc(minutes / 60)}h ${minutes % 60}m` : `${minutes}m`;\n    }\n    case 'secondsToHrMin': {\n      // 17700 => 4 hr 55 min\n      const minutes = Math.round(duration / 60); // convert seconds to minutes\n      return minutes > 59 ? `${Math.trunc(minutes / 60)} hr ${minutes % 60} min` : `${minutes} min`;\n    }\n    case 'minutesToHM':\n      // 133 => 2h 13m\n      return duration > 59 ? `${Math.trunc(duration / 60)}h ${duration % 60}m` : `${duration}m`;\n    case 'minutesToHrMin':\n    default:\n      // 133 => 2 hr 13 min\n      return duration > 59 ? `${Math.trunc(duration / 60)} hr ${duration % 60} min` : `${duration} min`;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DibDatePipe } from './date.pipe';\nimport { DibDashesToSpacesPipe } from './dashes-to-spaces.pipe';\nimport { DibCamelCaseToSpacesPipe } from './camel-case-to-spaces.pipe';\nimport { DibUpperFirstPipe } from './upperfirst.pipe';\nimport { DibDurationPipe } from './duration.pipe';\nimport { DibCancellationPolicyPipe } from './cancellation-policy.pipe';\nimport { DibPriceFormatPipe } from './price-format.pipe';\n\n@NgModule({\n  declarations: [\n    DibDatePipe,\n    DibDurationPipe,\n    DibDashesToSpacesPipe,\n    DibCamelCaseToSpacesPipe,\n    DibUpperFirstPipe,\n    DibCancellationPolicyPipe,\n    DibPriceFormatPipe,\n  ],\n  exports: [\n    DibDatePipe,\n    DibDurationPipe,\n    DibDashesToSpacesPipe,\n    DibCamelCaseToSpacesPipe,\n    DibUpperFirstPipe,\n    DibCancellationPolicyPipe,\n    DibPriceFormatPipe,\n  ],\n})\nexport class DibPipesModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { formatNumber } from '@angular/common';\n\n@Pipe({\n  name: 'dibPrice',\n})\nexport class DibPriceFormatPipe implements PipeTransform {\n  transform(value: string | number): string {\n    // Handle null values differently than zeros\n    if (value === null) return '';\n\n    const numValue = Number(value);\n    const numberFormat = Number.isInteger(numValue) ? '1.0-0' : '1.2-2';\n\n    // TODO: [localize] Do we want to use different locales depending on the current language?\n    return formatNumber(numValue, 'sv', numberFormat);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'dibUpperFirst' })\nexport class DibUpperFirstPipe implements PipeTransform {\n  transform(value: string): string {\n    if (!value) return '';\n\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  }\n}\n","export const environment = {\n  production: false,\n  api: {\n    backend: 'https://backend.example.com',\n    dtms: 'https://dtms.example.com',\n    dfs: 'https://dfs.example.com',\n    ams: 'https://ams.example.com',\n    cache: {\n      // This will enable console logging of any cached requests for easier debugging\n      debugMode: false,\n      // Enable or disable API response caching\n      enabled: true,\n    },\n  },\n  useElasticSearch: {\n    bookings: false,\n  },\n  featureToggles: {\n    agentAssistedBooking: true,\n  },\n  mock: {\n    // This will enable console logging of any mocked request for easier debugging\n    debugMode: true,\n    // And these are individual feature mocks\n    billingRequests: true,\n    products: true,\n    vatCategories: true,\n    vendors: true,\n    vendorsPaymentProvider: true,\n    auth: true,\n    users: true,\n    features: true,\n    countries: true,\n    companies: true,\n    companyUsers: true,\n    systemMessages: true,\n    bookings: true,\n    carts: true,\n    config: true,\n    pnr: true,\n    costCenters: true,\n    payments: true,\n    employees: true,\n    checkout: true,\n  },\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { registerLocaleData } from '@angular/common';\nimport localeEn from '@angular/common/locales/en';\nimport localeIt from '@angular/common/locales/it';\nimport localeSrLatn from '@angular/common/locales/sr-Latn';\nimport localeSv from '@angular/common/locales/sv';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nregisterLocaleData(localeEn, 'en');\nregisterLocaleData(localeSrLatn, 'sr');\nregisterLocaleData(localeIt, 'it');\nregisterLocaleData(localeSv, 'sv');\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((error) => console.error(error));\n\n// Log current application version in the console for easier debugging\n// eslint-disable-next-line unicorn/prefer-module\nconst app = require('../package.json');\n\nconsole.groupCollapsed(\n  `Application loaded %cv${app.version}`,\n  `font-weight: normal;\n  font-size: 9px;\n  color: white;\n  background: forestgreen;\n  padding: 2px 5px;\n  border-radius: 3px;\n  text-align: center`\n);\nconsole.log(`Application version: ${app.version}`);\nconsole.groupEnd();\n"],"names":["noop","take","selectUsersStats","BaseComponent","selectVendorsStats","BillingRequestActions","selectBillingRequestsStats","selectFeaturesStats","selectVatCategoriesStats","selectProductsStats","selectCompaniesStats","VendorActions","FeatureActions","VatCategoryActions","CompanyActions","ProductActions","loggedInUser","UserActions","BillingRequestStatus","selectCompanyUsersStats","CompanyUserActions","SystemMessageActions","SystemMessageStatus","selectSystemMessagesStats","BookingActions","selectBookingsStats","selectVendorsPaymentProvidersStats","VendorsPaymentProviderActions","i0","DashboardComponent","constructor","store","router","select","setupOpenItemStats","setupOverviewStats","setupUserStats","openItemsStats","observable$","billingRequests$","title","link","systemMessages$","dispatch","loadRequests","params","page","size","billingProfileRequestStatus","PENDING","loadSystemMessages","status","OPENED","overviewStats","companies$","companyUsers$","bookings$","loadCompanies","loadCompanyUsers","loadBookings","pipe","subscribe","user","isSuperAdmin","features$","products$","categories$","vendors$","vendorsPaymentProviders$","loadVendorsPaymentProviders","loadVendors","loadFeatures","loadVatCategories","loadProducts","hasAdminAccess","unshift","users$","loadUsers","onSearchCompanies","navigate","queryParams","then","onSearchUsers","onSearchBookings","validateReferenceType","selectors","features","decls","vars","consts","template","ctx","first","BaseLayoutComponent","UserFormComponent","UserPasswordFormComponent","AuthActions","ConfirmationDialogActions","tmc","TenantActions","selectTenants","HeaderComponent","dialog","loadPrimaryTenants","logout","edit","dialogRef","open","data","afterClosed","confirmed","saveUserDetails","changeUserPassword","changeTenant","tenant","show","name","confirm","label","color","ok","window","adminLink","SidenavComponent","ngContentSelectors"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
import { environment } from '../../src/environments/environment';
import { MockRequest } from '../mock-request.model';
import { PaymentOptionsResponse } from '../../src/app/models/payment-options.model';
import { InvoiceSplit } from '../../src/app/models/billing-profile.model';
import { LodgeCardProviderCode } from '../../src/app/models/lodge-card.model';

const mockPayments: MockRequest[] = [
  {
    method: 'GET',
    url: '/api/tmcc/customers/{customerId}/payment-options',
    getResponse: ({ customerId }): PaymentOptionsResponse => {
      return {
        billings: [
          {
            id: '717aa17d-ba5d-4263-86fd-7be626f5d674',
            taxId: 'asdasd',
            legalName: '12313',
            streetName: 'asdad',
            zipcode: 'asdad',
            city: 'asdad',
            countryId: '2',
            countryName: 'United Arab Emirates',
            contactFirstName: 'adsad',
            contactLastName: 'adsad',
            contactEmail: 'asdads@asd.com',
            currency: 'SEK',
            billingPeriod: 'monthly',
            employeeIds: [customerId],
            groupIds: [],
            backOfficeCustomerId: '',
            invoiceSplitType: InvoiceSplit.NONE,
            vatNumber: '',
            invoiceRecipientEmail: '',
          },
          {
            id: '3913b5e1-8520-42e6-8982-b94e1ad29c29',
            taxId: 'asdfasdf',
            legalName: 'bnmbnb',
            streetName: 'asdads',
            zipcode: 'asdad',
            city: 'asda',
            countryId: '1',
            countryName: 'Andorra',
            contactFirstName: 'asdads',
            contactLastName: 'asdasd',
            contactEmail: 'asdasd@asd.com',
            currency: 'USD',
            billingPeriod: 'monthly',
            employeeIds: [customerId],
            groupIds: [],
            backOfficeCustomerId: '',
            invoiceSplitType: InvoiceSplit.NONE,
            vatNumber: '',
            invoiceRecipientEmail: '',
          },
          {
            id: '77fede1f-f02e-49db-bd2f-fef718c5dfa8',
            taxId: 'asdasd',
            legalName: 'asdasd',
            streetName: 'asdads',
            zipcode: 'asdads',
            city: 'asdasd',
            countryId: '2',
            countryName: 'United Arab Emirates',
            contactFirstName: 'asdads',
            contactLastName: 'asdads',
            contactEmail: 'asd@asd.com',
            currency: 'USD',
            billingPeriod: 'monthly',
            employeeIds: [customerId],
            groupIds: [],
            backOfficeCustomerId: '',
            invoiceSplitType: InvoiceSplit.NONE,
            vatNumber: '123',
            invoiceRecipientEmail: 'asd@asd.com',
          },
          {
            id: '7d01bad7-549e-4379-a77f-126302368202',
            taxId: 'adasd',
            legalName: 'aadasd',
            streetName: 'adad',
            zipcode: 'adsads',
            city: 'adsasd',
            countryId: '2',
            countryName: 'United Arab Emirates',
            contactFirstName: 'adads',
            contactLastName: 'asdads',
            contactEmail: 'asdasd@asd.com',
            currency: 'RSD',
            billingPeriod: 'monthly',
            employeeIds: [customerId],
            groupIds: [],
            backOfficeCustomerId: '',
            invoiceSplitType: InvoiceSplit.NONE,
            vatNumber: '',
            invoiceRecipientEmail: '',
          },
          {
            id: 'af031828-8acf-43ea-8ddb-032cc25c853d',
            taxId: '123123',
            legalName: 'ACME Corporation',
            streetName: 'Street Name',
            zipcode: '12312',
            city: 'Belgrade',
            countryId: '190',
            countryName: 'Serbia',
            contactFirstName: 'John',
            contactLastName: 'Doe',
            contactEmail: 'test.user@example.com',
            currency: 'SEK',
            billingPeriod: 'monthly',
            employeeIds: [customerId],
            groupIds: ['187f9646-0903-4c43-9160-4a12e238ca2b'],
            backOfficeCustomerId: '123-john.doe',
            invoiceSplitType: InvoiceSplit.NONE,
            vatNumber: '123456',
            invoiceRecipientEmail: 'test.user@example.com',
          },
        ],
        lodgeCards: [
          {
            id: 'ed6fa319-5837-43c9-8201-b9d1a208de8d',
            name: 'Test Lodge Card',
            creditCardNumber: '**********2312',
            expiryDate: '01-03-2026',
            expiryDateTrailingValue: null,
            provider: LodgeCardProviderCode.CCDC,
            currency: 'EUR',
            clientCorporationId: '4f2679fe-3180-4ec1-b937-9f2d082c7930',
            country: {
              id: '190',
              name: 'Serbia',
              code: 'RS',
              phoneCode: '+381',
              defaultCurrency: 'RSD',
            },
            contactFirstName: 'John',
            contactLastName: 'Doe',
            contactEmail: 'john.doe@example.com',
            backOfficeCustomerId: '',
            invoiceRecipientEmail: 'john.doe@example.com',
            vatNumber: '12345',
            companyLegalName: 'BidHotel',
            companyRegistrationNumber: '123',
            addressLine: 'Moja Adresa 23',
            postalCode: '11000',
            city: 'Belgrade',
            memberCount: 0,
            employeeIds: null,
            groupIds: null,
            isOnboarded: true,
          },
        ],
      };
    },
  },
];

export function getMockPaymentsRequests(): MockRequest[] {
  return environment.mock.payments ? mockPayments : [];
}
